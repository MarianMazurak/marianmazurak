{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/advanced-search/advanced-search.component.css","webpack:///./src/app/components/advanced-search/advanced-search.component.html","webpack:///./src/app/components/advanced-search/advanced-search.component.ts","webpack:///./src/app/components/apartment/apartment.component.css","webpack:///./src/app/components/apartment/apartment.component.html","webpack:///./src/app/components/apartment/apartment.component.ts","webpack:///./src/app/components/apartment/create-apartment/create-apartment.component.css","webpack:///./src/app/components/apartment/create-apartment/create-apartment.component.html","webpack:///./src/app/components/apartment/create-apartment/create-apartment.component.ts","webpack:///./src/app/components/apartment/edit-apartment/edit-apartment.component.css","webpack:///./src/app/components/apartment/edit-apartment/edit-apartment.component.html","webpack:///./src/app/components/apartment/edit-apartment/edit-apartment.component.ts","webpack:///./src/app/components/apartment/list-apartment/list-apartment.component.css","webpack:///./src/app/components/apartment/list-apartment/list-apartment.component.html","webpack:///./src/app/components/apartment/list-apartment/list-apartment.component.ts","webpack:///./src/app/components/booking/booking-create/booking-create.component.css","webpack:///./src/app/components/booking/booking-create/booking-create.component.html","webpack:///./src/app/components/booking/booking-create/booking-create.component.ts","webpack:///./src/app/components/booking/booking.component.css","webpack:///./src/app/components/booking/booking.component.html","webpack:///./src/app/components/booking/booking.component.ts","webpack:///./src/app/components/booking/guest-arrivals/guest-arrivals.component.css","webpack:///./src/app/components/booking/guest-arrivals/guest-arrivals.component.html","webpack:///./src/app/components/booking/guest-arrivals/guest-arrivals.component.ts","webpack:///./src/app/components/booking/list-booking/list-booking.component.css","webpack:///./src/app/components/booking/list-booking/list-booking.component.html","webpack:///./src/app/components/booking/list-booking/list-booking.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/notfound/notfound.component.css","webpack:///./src/app/components/notfound/notfound.component.html","webpack:///./src/app/components/notfound/notfound.component.ts","webpack:///./src/app/components/pagination/items-size/items-size.component.css","webpack:///./src/app/components/pagination/items-size/items-size.component.html","webpack:///./src/app/components/pagination/items-size/items-size.component.ts","webpack:///./src/app/components/pagination/pagination.component.css","webpack:///./src/app/components/pagination/pagination.component.html","webpack:///./src/app/components/pagination/pagination.component.ts","webpack:///./src/app/components/property/create-property/create-property.component.css","webpack:///./src/app/components/property/create-property/create-property.component.html","webpack:///./src/app/components/property/create-property/create-property.component.ts","webpack:///./src/app/components/property/create-property/upload-photo-list/upload-photo-list.component.css","webpack:///./src/app/components/property/create-property/upload-photo-list/upload-photo-list.component.html","webpack:///./src/app/components/property/create-property/upload-photo-list/upload-photo-list.component.ts","webpack:///./src/app/components/property/edit-property/edit-property.component.css","webpack:///./src/app/components/property/edit-property/edit-property.component.html","webpack:///./src/app/components/property/edit-property/edit-property.component.ts","webpack:///./src/app/components/property/list-property/list-property.component.css","webpack:///./src/app/components/property/list-property/list-property.component.html","webpack:///./src/app/components/property/list-property/list-property.component.ts","webpack:///./src/app/components/property/list-property/property-item/property-item.component.css","webpack:///./src/app/components/property/list-property/property-item/property-item.component.html","webpack:///./src/app/components/property/list-property/property-item/property-item.component.ts","webpack:///./src/app/components/property/owner-properties/owner-properties.component.css","webpack:///./src/app/components/property/owner-properties/owner-properties.component.html","webpack:///./src/app/components/property/owner-properties/owner-properties.component.ts","webpack:///./src/app/components/property/photo-list/photo-list.component.css","webpack:///./src/app/components/property/photo-list/photo-list.component.html","webpack:///./src/app/components/property/photo-list/photo-list.component.ts","webpack:///./src/app/components/property/photo-popup/photo-popup.component.css","webpack:///./src/app/components/property/photo-popup/photo-popup.component.html","webpack:///./src/app/components/property/photo-popup/photo-popup.component.ts","webpack:///./src/app/components/property/photo/photo.component.css","webpack:///./src/app/components/property/photo/photo.component.html","webpack:///./src/app/components/property/photo/photo.component.ts","webpack:///./src/app/components/property/property-details/property-details.component.css","webpack:///./src/app/components/property/property-details/property-details.component.html","webpack:///./src/app/components/property/property-details/property-details.component.ts","webpack:///./src/app/components/property/property.component.css","webpack:///./src/app/components/property/property.component.html","webpack:///./src/app/components/property/property.component.ts","webpack:///./src/app/components/review/review-booking/review-booking.component.css","webpack:///./src/app/components/review/review-booking/review-booking.component.html","webpack:///./src/app/components/review/review-booking/review-booking.component.ts","webpack:///./src/app/components/review/review-create/review-create.component.css","webpack:///./src/app/components/review/review-create/review-create.component.html","webpack:///./src/app/components/review/review-create/review-create.component.ts","webpack:///./src/app/components/review/reviews-property/reviews-property.component.css","webpack:///./src/app/components/review/reviews-property/reviews-property.component.html","webpack:///./src/app/components/review/reviews-property/reviews-property.component.ts","webpack:///./src/app/components/search/search-form/search-form.component.css","webpack:///./src/app/components/search/search-form/search-form.component.html","webpack:///./src/app/components/search/search-form/search-form.component.ts","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/spinner/spinner.component.css","webpack:///./src/app/components/spinner/spinner.component.html","webpack:///./src/app/components/spinner/spinner.component.ts","webpack:///./src/app/components/user/login/login.component.css","webpack:///./src/app/components/user/login/login.component.html","webpack:///./src/app/components/user/login/login.component.ts","webpack:///./src/app/components/user/register/register.component.css","webpack:///./src/app/components/user/register/register.component.html","webpack:///./src/app/components/user/register/register.component.ts","webpack:///./src/app/components/user/user-navigation/user-navigation.component.css","webpack:///./src/app/components/user/user-navigation/user-navigation.component.html","webpack:///./src/app/components/user/user-navigation/user-navigation.component.ts","webpack:///./src/app/components/user/user-profile/user-properties/user-apartments/user-apartments.component.css","webpack:///./src/app/components/user/user-profile/user-properties/user-apartments/user-apartments.component.html","webpack:///./src/app/components/user/user-profile/user-properties/user-apartments/user-apartments.component.ts","webpack:///./src/app/components/user/user-profile/user-properties/user-properties.component.css","webpack:///./src/app/components/user/user-profile/user-properties/user-properties.component.html","webpack:///./src/app/components/user/user-profile/user-properties/user-properties.component.ts","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/helpers/jwt.interceptor.ts","webpack:///./src/app/models/address.ts","webpack:///./src/app/models/booking-create.ts","webpack:///./src/app/models/booking.ts","webpack:///./src/app/models/city.ts","webpack:///./src/app/models/country.ts","webpack:///./src/app/models/create-apartment.ts","webpack:///./src/app/models/create-review.ts","webpack:///./src/app/models/loginDto.ts","webpack:///./src/app/models/property-create.ts","webpack:///./src/app/models/property.ts","webpack:///./src/app/models/registerDto.ts","webpack:///./src/app/services/apartment/apartment.service.ts","webpack:///./src/app/services/authentication/auth-guard.service.ts","webpack:///./src/app/services/authentication/auth.service.ts","webpack:///./src/app/services/authentication/role-guard.service.ts","webpack:///./src/app/services/booking/booking.service.ts","webpack:///./src/app/services/city/city.service.ts","webpack:///./src/app/services/country/coutry.service.ts","webpack:///./src/app/services/facility/facility.service.ts","webpack:///./src/app/services/pagination/pagination.service.ts","webpack:///./src/app/services/property/property.service.ts","webpack:///./src/app/services/propertyTypy/property-type.service.ts","webpack:///./src/app/services/review/review.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZuC;AACc;AACkB;AACS;AACkB;AACM;AACF;AACM;AACvC;AAC6B;AAEJ;AACtB;AAC2B;AACH;AACI;AACO;AACP;AACrC;AACkD;AACR;AACwB;AACnD;AACA;AACwB;AACK;AACZ;AACpB;AAE3E,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC;IAClD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qFAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8FAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6GAAoB,EAAE;IACpD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,uFAAgB,EAAC;IAClD,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,sHAAuB,EAAE,WAAW,EAAE,CAAC,6FAAgB,EAAE,6FAAgB,CAAC,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,YAAY,EAAC,EAAC;IACpJ,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gHAAqB,EAAC;IACpD,EAAC,IAAI,EAAE,yBAAyB,EAAE,SAAS,EAAE,oHAAsB,EAAC;IACpE,EAAC,IAAI,EAAE,+BAA+B,EAAE,SAAS,EAAE,0HAAwB,EAAE,WAAW,EAAE,CAAC,6FAAgB,EAAE,6FAAgB,CAAC,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,YAAY,EAAE,EAAC;IACpK,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAC;IAC7E,EAAC,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,0HAAwB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAC;IACrG,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,kHAAsB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAC;IAChG,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,+GAAqB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAC;IAC9F,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,mHAAsB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAC;IAChG,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,0HAAwB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAC;IAChG,EAAC,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,wHAAwB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAC;IACpG,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,8GAAuB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAC;IAC9F,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,gHAAqB,EAAE,WAAW,EAAE,CAAC,6FAAgB,EAAE,6FAAgB,CAAC,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,YAAY,EAAC,EAAC;IACpJ,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,8EAAa,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAC;IACzE,EAAC,IAAI,EAAE,yCAAyC,EAAE,SAAS,EAAE,mHAAsB,EAAE,WAAW,EAAE,CAAC,6FAAgB,EAAE,6FAAgB,CAAC,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,YAAY,EAAC,EAAC;IAC3K,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,gIAAuB,EAAE,WAAW,EAAE,CAAC,6FAAgB,EAAE,6FAAgB,CAAC,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,YAAY,EAAC,EAAC;IACjJ,EAAC,IAAI,EAAE,2BAA2B,EAAE,SAAS,EAAE,gJAAuB,EAAE,WAAW,EAAE,CAAC,6FAAgB,EAAE,6FAAgB,CAAC,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,YAAY,EAAC,EAAC;IAC9J,EAAC,IAAI,EAAE,oCAAoC,EAAE,SAAS,EAAE,qHAAsB,EAAE,WAAW,EAAE,CAAC,6FAAgB,EAAE,6FAAgB,CAAC,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,YAAY,EAAC,EAAC;IACtK,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,0FAAiB,EAAC;CAC3C,CAAC;AAOF;IAAA;IACA,CAAC;IADY,gBAAgB;QAL5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,YAAY,EAAE,EAAE;SACjB,CAAC;OACW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;AC7D7B,oBAAoB,2BAA2B,GAAG,MAAM,kBAAkB,wBAAwB,GAAG,MAAM,4BAA4B,GAAG,OAAO,oBAAoB,GAAG,eAAe,sBAAsB,GAAG,cAAc,mBAAmB,qBAAqB,GAAG,G;;;;;;;;;;;ACAzQ,4G;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,mBAAmB,CAAC;IAC9B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACmC;AAC/B;AACE;AACkB;AACQ;AACS;AACL;AAC6B;AACN;AACpB;AAC8B;AACN;AAC9B;AACH;AACyB;AACzB;AACd;AACA;AACkB;AACgB;AACoC;AACb;AAC3C;AACa;AACV;AACP;AACR;AAC+B;AACU;AACE;AACA;AACD;AACH;AACW;AACP;AACa;AACgB;AAC3B;AAC3B;AACgB;AACV;AACW;AACvC;AACoD;AACE;AACZ;AACpB;AACH;AACH;AAuDvE;IAAA;IAAyB,CAAC;IAAb,SAAS;QArDrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6EAAa;gBACb,qFAAc;gBACd,8FAAiB;gBACjB,yFAAiB;gBACjB,sHAAuB;gBACvB,iHAAqB;gBACrB,6FAAkB;gBAClB,2HAAwB;gBACxB,qHAAsB;gBACtB,uFAAgB;gBAChB,oFAAe;gBACf,6GAAoB;gBACpB,oFAAe;gBACf,0FAAc;gBACd,wGAAkB;gBAClB,4IAAwB;gBACxB,+HAAqB;gBACrB,yGAAmB;gBACnB,iHAAqB;gBACrB,mHAAsB;gBACtB,mHAAsB;gBACtB,kHAAsB;gBACtB,+GAAqB;gBACrB,gGAAmB;gBACnB,0GAAkB;gBAClB,2GAAmB;gBACnB,0HAAwB;gBACxB,mHAAuB;gBACvB,gIAAuB;gBACvB,gJAAuB;gBACvB,qHAAsB;gBACtB,wHAAwB;gBACxB,0HAAwB;gBACxB,8GAAuB;gBACvB,0FAAiB;gBACjB,uFAAgB;gBAChB,oFAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;gBAChB,qEAAS,CAAC,OAAO,EAAE;aACpB;YACD,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,wEAAc,EAAE,KAAK,EAAE,IAAI,EAAE;gBACrE,oFAAe,EAAE,gFAAc,EAAE,wEAAW,EAAE,uFAAgB,EAAE,iGAAmB,EAAE,0FAAiB;aAAC;YACzG,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzGtB,sCAAsC,eAAe,GAAG,O;;;;;;;;;;;ACAxD,wMAAwM,UAAU,olBAAolB,eAAe,2tBAA2tB,aAAa,kHAAkH,aAAa,KAAK,eAAe,mfAAmf,OAAO,mHAAmH,OAAO,KAAK,SAAS,orC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlwE;AACO;AAIkB;AACG;AACP;AACR;AACY;AACM;AAO/E;IAuBE,iCAAoB,eAAgC,EAChC,gBAAkC,EAClC,KAAqB,EACrB,cAA8B,EAC9B,WAAwB,EACxB,eAAgC,EAChC,MAAc,EACd,iBAAoC;QAPpC,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;QA7BjD,4BAAuB,GAAG,sEAAsE,CAAC;QACjG,cAAS,GAAG,KAAK,CAAC;QAKjB,kBAAa,GAAG,IAAI,CAAC;QACtB,kBAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAMnC,wBAAmB,GAAa,EAAE,CAAC;QACnC,uBAAkB,GAAa,EAAE,CAAC;QAGlC,sBAAiB,GAAW,CAAC,CAAC;IAarC,CAAC;IAEM,0CAAQ,GAAf;QACE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAClH,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACnI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAC/C,CAAC;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEM,8CAAY,GAAnB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3F,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YACvF,CAAC;QACH,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAClE,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACpE,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;QACxG,CAAC;IACH,CAAC;IAEM,kDAAgB,GAAvB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC;eAClD,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACxE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5F,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC;eACjD,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1F,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC;eAC7C,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IAEM,+CAAa,GAApB;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACxD,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,8CAAY,GAAnB;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,iBAAO;YACpD,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,kDAAgB,GAAvB,UAAwB,WAAW;QACjC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,OAAO,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QACrC,IAAI,CAAC,sBAAsB,GAAG,WAAW,CAAC,aAAa,CAAC;QACxD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAEM,2CAAS,GAAhB;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAEM,kDAAgB,GAAvB,UAAwB,EAAU;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC9D,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/C,CAAC;IAEM,iDAAe,GAAtB,UAAuB,EAAU;QAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9C,CAAC;IAEM,yCAAO,GAAd;QACE,IAAI,eAAe,CAAC;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACxC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvD,CAAC;QACD,IAAI,cAAc,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACvC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrD,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAE;YACzC,WAAW,EAAE;gBACX,OAAO,EAAE,IAAI,CAAC,iBAAiB;gBAC/B,IAAI,EAAE,IAAI,CAAC,cAAc;gBACzB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,aAAa,EAAE,IAAI,CAAC,sBAAsB;gBAC1C,KAAK,EAAE,IAAI,CAAC,aAAa;gBACzB,UAAU,EAAE,eAAe;gBAC3B,SAAS,EAAE,cAAc;aAC1B;SACF,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEM,4CAAU,GAAjB;QAAA,iBAYC;QAXC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAClG,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC;aACzE,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACpC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;YAC3C,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YAClG,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CACnC,CAAC;IACN,CAAC;IAEM,gDAAc,GAArB;QAAA,iBAoBC;QAnBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,cAAc,CACjC,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,sBAAsB,EAC3B,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,WAAW,GAAG,CAAC,EACpB,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,cAAI;YACpC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACpC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YACrC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;YAC3C,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YAClG,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CACnC,CAAC;IACJ,CAAC;IAED,0CAAQ,GAAR,UAAS,CAAS;QAChB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChF,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QACD,IAAI;YAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7B,CAAC;IAED,yCAAO,GAAP,UAAQ,CAAS;QACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChF,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QACD,IAAI;YAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7B,CAAC;IAED,wCAAM,GAAN;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChF,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QACD,IAAI;YAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7B,CAAC;IAED,wCAAM,GAAN;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChF,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QACD,IAAI;YAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7B,CAAC;IAED,wCAAM,GAAN,UAAO,CAAS;QACd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChF,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QACD,IAAI;YAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7B,CAAC;IAzOU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAwBqC,mFAAe;YACd,sFAAgB;YAC3B,8DAAc;YACL,+EAAc;YACjB,uEAAW;YACP,mFAAe;YACxB,sDAAM;YACK,yFAAiB;OA9B7C,uBAAuB,CA2OnC;IAAD,8BAAC;CAAA;AA3OmC;;;;;;;;;;;;ACjBpC,qB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,yBAAyB,eAAe,GAAG,aAAa,uBAAuB,GAAG,YAAY,KAAK,aAAa,uBAAuB,GAAG,QAAQ,iBAAiB,kBAAkB,GAAG,gBAAgB,iBAAiB,iBAAiB,GAAG,QAAQ,oBAAoB,GAAG,aAAa,oBAAoB,GAAG,K;;;;;;;;;;;ACAhT,gXAAgX,6BAA6B,kwBAAkwB,IAAI,QAAQ,IAAI,k9BAAk9B,OAAO,KAAK,SAAS,6WAA6W,OAAO,2KAA2K,OAAO,KAAK,SAAS,wNAAwN,cAAc,+Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA92F;AAG6B;AACL;AACT;AACV;AAQvD;IAUE,kCAAoB,IAAiB,EACjB,gBAAkC,EAClC,KAAqB,EACrB,MAAc;QAHd,SAAI,GAAJ,IAAI,CAAa;QACjB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QANlC,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;IAKoB,CAAC;IAEvC,2CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC9C,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,EAAE,CAAC;IACzC,CAAC;IACD,oDAAiB,GAAjB;QAAA,iBAKC;QAJC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,MAAM;YACxD,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC;YAC7B,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sDAAmB,GAAnB,UAAoB,EAAU;QAC5B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,CAAC;IACM,+CAAY,GAAnB;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,iBAAO;YACpD,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACM,kDAAe,GAAtB,UAAuB,mBAA8B;QAArD,iBAYC;QAXC,EAAE,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;YAChC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,gBAAgB,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;YAC5D,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC5E,KAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,CAAC,EAAE,eAAK;gBACR,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACtD,CAAC,CAAC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IACM,qDAAkB,GAAzB,UAA0B,EAAU;QAClC,IAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC5D,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;IACD,2CAAQ,GAAR;QACE,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,GAAG,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC;IAC9D,CAAC;IA5DU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAW0B,iFAAW;YACC,sFAAgB;YAC3B,8DAAc;YACb,sDAAM;OAbvB,wBAAwB,CA6DpC;IAAD,+BAAC;CAAA;AA7DoC;;;;;;;;;;;;ACdrC,4BAA4B,eAAe,oBAAoB,yBAAyB,GAAG,G;;;;;;;;;;;ACA3F,wWAAwW,6BAA6B,stBAAstB,IAAI,QAAQ,IAAI,u9BAAu9B,OAAO,KAAK,SAAS,8YAA8Y,YAAY,uKAAuK,YAAY,KAAK,cAAc,iU;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAroF;AAEK;AACwB;AAGd;AAQjE;IAUE,gCAAoB,KAAqB,EACrB,gBAAkC,EAClC,MAAc;QAFd,UAAK,GAAL,KAAK,CAAgB;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAQ;QAVlC,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;IASoB,CAAC;IAEvC,yCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC7C,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,EAAE,CAAC;IACxC,CAAC;IAEM,iDAAgB,GAAvB;QAAA,iBAKC;QAJC,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvD,IAAM,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,GAAG,GAAG,EAApB,CAAoB,CAAC,CAAC;QACvF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,kDAAiB,GAAxB;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YACpD,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,qDAAoB,GAApB,UAAqB,EAAU;QAC7B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAChC,CAAC;IACM,6CAAY,GAAnB;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,aAAG;YAChD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACM,mDAAkB,GAAzB,UAA0B,EAAU;QAClC,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3D,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5C,CAAC;IACM,gDAAe,GAAtB,UAAuB,mBAA8B;QAArD,iBAeC;QAdC,EAAE,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9B,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrD,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAChD,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAClD,IAAI,CAAC,eAAe,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;YACpE,IAAI,CAAC,eAAe,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAChE,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC7E,KAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACtD,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IACD,yCAAQ,GAAR;QACE,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,GAAG,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC;IAC9D,CAAC;IArEU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAW2B,8DAAc;YACH,sFAAgB;YAC1B,sDAAM;OAZvB,sBAAsB,CAsElC;IAAD,6BAAC;CAAA;AAtEkC;;;;;;;;;;;;ACdnC,yBAAyB,mCAAmC,8BAA8B,gBAAgB,GAAG,YAAY,8BAA8B,qBAAqB,iBAAiB,GAAG,QAAQ,8BAA8B,GAAG,G;;;;;;;;;;;ACAzO,0QAA0Q,gBAAgB,mBAAmB,8BAA8B,+DAA+D,SAAS,uBAAuB,iBAAiB,kFAAkF,cAAc,wJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApe;AACmB;AACK;AAEhC;AAC6B;AAC1B;AAOlD;IAUE,gCAAoB,gBAAkC,EAClC,eAAgC,EAChC,IAAiB,EACjB,KAAqB;QAHrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,SAAI,GAAJ,IAAI,CAAa;QACjB,UAAK,GAAL,KAAK,CAAgB;QARlC,gBAAW,GAAG;YACnB,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,aAAa,EAAE,EAAE;SAClB;IAI4C,CAAC;IAE9C,yCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5E,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9E,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC1F,CAAC;IAEM,0DAAyB,GAAhC;QAAA,iBAMC;QALC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,YAAE,IAAI,YAAI,CAAC,QAAQ,GAAG,EAAE,EAAlB,CAAkB,CAAC,CAAC;QAC7E,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,YAAE;YACrD,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAzBQ;QAAR,2DAAK,EAAE;kCAAW,yDAAQ;4DAAC;IAJjB,sBAAsB;QALlC,+DAAS,CAAE;YACV,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAWsC,sFAAgB;YACjB,mFAAe;YAC1B,iFAAW;YACV,8DAAc;OAb9B,sBAAsB,CA+BlC;IAAD,6BAAC;CAAA;AA/BkC;;;;;;;;;;;;ACbnC,gCAAgC,uBAAuB,GAAG,WAAW,iBAAiB,kBAAkB,GAAG,mBAAmB,iBAAiB,iBAAiB,sBAAsB,GAAG,WAAW,qBAAqB,GAAG,iBAAiB,kBAAkB,qBAAqB,iBAAiB,GAAG,WAAW,qBAAqB,GAAG,wBAAwB,sBAAsB,GAAG,G;;;;;;;;;;;ACA5X,8dAA8d,4BAA4B,iRAAiR,mCAAmC,8VAA8V,sDAAsD,4YAA4Y,yDAAyD,kMAAkM,yEAAyE,2NAA2N,6BAA6B,0SAA0S,4BAA4B,yZAAyZ,qCAAqC,oxBAAoxB,cAAc,6W;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAznH;AACA;AACkB;AAEM;AAClB;AAQ7D;IAQE,gCAAoB,cAA8B,EAC9B,gBAAkC,EAClC,cAA8B,EAC9B,MAAc;QAHd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAVlC,YAAO,GAAkB,IAAI,oEAAa,EAAE,CAAC;QAG7C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,KAAK,CAAC;IAMzB,CAAC;IAED,yCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,OAAO,GAAG,IAAI,oEAAa,EAAE,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YAC9C,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;YAC3C,KAAI,CAAC,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACL,CAAC;IACA,yCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAEF,8CAAa,GAAb,UAAc,iBAA4B;QAA1C,iBAgBC;QAfC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5D,EAAE,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC/D,KAAK,CAAC,kCAAkC,CAAC,CAAC;gBAC1C,KAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACtD,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IAED,iDAAgB,GAAhB;QAAA,iBAKC;QAJC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,eAAK;YACjE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAkB,GAAlB,UAAmB,OAAO,EAAE,QAAQ;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACvE,CAAC;QAAC,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,CAAC,CAAC;QAAC,CAAC;IACtB,CAAC;IAED,sDAAqB,GAArB,UAAsB,OAAO,EAAE,QAAQ;QACrC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,QAAQ,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;QAChG,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,CAAC,CAAC;QACX,CAAC;IACH,CAAC;IAjEU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCASoC,gFAAc;YACZ,sFAAgB;YAClB,8DAAc;YACtB,sDAAM;OAXvB,sBAAsB,CAkElC;IAAD,6BAAC;CAAA;AAlEkC;;;;;;;;;;;;ACbnC,yBAAyB,iBAAiB,kBAAkB,GAAG,mBAAmB,iBAAiB,kBAAkB,wBAAwB,sBAAsB,uBAAuB,uBAAuB,GAAG,G;;;;;;;;;;;ACApN,8gBAA8gB,uCAAuC,oCAAoC,2BAA2B,ihBAAihB,oBAAoB,uKAAuK,4BAA4B,wGAAwG,4BAA4B,6FAA6F,sCAAsC,KAAK,uCAAuC,6DAA6D,qCAAqC,mMAAmM,4BAA4B,sNAAsN,UAAU,mHAAmH,yCAAyC,wIAAwI,yCAAyC,gGAAgG,sDAAsD,8BAA8B,oDAAoD,6BAA6B,4DAA4D,2HAA2H,8CAA8C,8FAA8F,+CAA+C,uOAAuO,iBAAiB,mGAAmG,8CAA8C,2OAA2O,0BAA0B,kFAAkF,2BAA2B,iYAAiY,gDAAgD,oLAAoL,gDAAgD,oLAAoL,gDAAgD,q7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/qJ;AACZ;AACyB;AACI;AACjC;AACgC;AASzE;IAOE,0BAAoB,IAAiB,EAC3B,KAAqB,EACrB,cAA8B,EAC9B,MAAc;QAHJ,SAAI,GAAJ,IAAI,CAAa;QAC3B,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAPhB,gBAAW,GAAG,WAAW,CAAC;QAE3B,cAAS,GAAG,KAAK,CAAC;IAMxB,CAAC;IAEF,mCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,qCAAU,GAAV;QAAA,iBAOC;QANC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC;aAC/B,SAAS,CAAC,iBAAO;YAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAAA,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAC,CAAC;IACjE,CAAC;IAED,wCAAa,GAAb;QAAA,iBAOC;QANC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,CAAC;aACnC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,cAAc,EAAE;QAAA,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAC,CAAC;IAC/D,CAAC;IAED,8CAAmB,GAAnB,UAAoB,OAAO,EAAE,QAAQ;QACnC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,OAAO,EAAE,QAAQ,CAAC;IACnE,CAAC;IAED,qCAAU,GAAV,UAAW,aAAqB;QAC9B,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACvD,CAAC;IAED,mCAAQ,GAAR,UAAS,QAAQ;QACf,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED,yCAAc,GAAd;QACE,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAE,CAAC,EAAC;YAC1D,IAAI,mBAAmB,GAAW,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;YACxF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAE,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;QACjE,CAAC;QACD,IAAI,EAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IA1DQ;QAAR,2DAAK,EAAE;kCAAU,uDAAO;qDAAC;IAFf,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAQ0B,iFAAW;YACpB,2EAAc;YACL,gFAAc;YACtB,mEAAM;OAVb,gBAAgB,CA8D5B;IAAD,uBAAC;CAAA;AA9D4B;;;;;;;;;;;;ACd7B,mCAAmC,iBAAiB,kBAAkB,wBAAwB,GAAG,G;;;;;;;;;;;ACAjG,kNAAkN,yCAAyC,2JAA2J,0CAA0C,0JAA0J,wCAAwC,8ZAA8Z,wMAAwM,eAAe,KAAK,iCAAiC,6bAA6b,2BAA2B,qBAAqB,qCAAqC,qBAAqB,sCAAsC,qBAAqB,qCAAqC,qBAAqB,0BAA0B,GAAG,2BAA2B,qiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj8D;AAEyB;AAC1B;AACmC;AACN;AAQ5E;IAcE,gCAAoB,cAA8B,EAC9B,KAAqB,EACrB,iBAAoC,EACpC,eAAgC;QAHhC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAgB;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAiB;QAfpD,gBAAW,GAAG,CAAC,CAAC;QAChB,sBAAiB,GAAG,CAAC,CAAC;QAKtB,mBAAc,GAAG,gBAAgB,CAAC;QAClC,mBAAc,GAAG,gBAAgB,CAAC;QAClC,iBAAY,GAAG,cAAc,CAAC;QACvB,cAAS,GAAG,KAAK,CAAC;IAOzB,CAAC;IAED,yCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;QAC1C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC5C,CAAC;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,kDAAiB,GAAjB;QAAA,iBAaC;QAZC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAC3F,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,cAAI;gBACnC,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBACzC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACrC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC3C,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;gBAClG,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,qDAAoB,GAApB,UAAqB,CAAS;QAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,yCAAQ,GAAR,UAAS,CAAS;QAChB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,wCAAO,GAAP,UAAQ,CAAS;QACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,uCAAM,GAAN,UAAO,CAAS;QACd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,qDAAoB,GAApB;QACE,IAAM,MAAM,GAAW,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG;cAC/E,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;cAC5C,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;cAC5C,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;cAC5C,IAAI,CAAC,cAAc,CAAC;QACxB,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YACtC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACvB,CAAC;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;YAC1C,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,oDAAmB,GAAnB;QACE,IAAM,MAAM,GAAW,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG;cAC/E,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;cAC5C,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;cAC5C,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;cAC5C,IAAI,CAAC,cAAc,CAAC;QACxB,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YACtC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACvB,CAAC;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;YAC1C,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,kDAAiB,GAAjB;QACE,IAAM,MAAM,GAAW,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG;cAC/E,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;cAC5C,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;cAC5C,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;cAC5C,IAAI,CAAC,YAAY,CAAC;QACtB,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YACtC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACvB,CAAC;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;YACxC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;IACH,CAAC;IACD,4CAAW,GAAX;QAAA,iBAGC;QAFC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,YAAE,IAAI,YAAI,CAAC,QAAQ,GAAG,EAAE,EAAlB,CAAkB,CAAC,CAAC;IAC/E,CAAC;IAhIU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAeoC,gFAAc;YACvB,8DAAc;YACF,yFAAiB;YACnB,mFAAe;OAjBzC,sBAAsB,CAiIlC;IAAD,6BAAC;CAAA;AAjIkC;;;;;;;;;;;;ACbnC,mCAAmC,mBAAmB,mBAAmB,0BAA0B,KAAK,C;;;;;;;;;;;ACAxG,syBAAsyB,gGAAgG,oDAAoD,8MAA8M,uDAAuD,mNAAmN,yDAAyD,i7BAAi7B,gDAAgD,qCAAqC,uCAAuC,yLAAyL,uCAAuC,6HAA6H,wPAAwP,mBAAmB,sHAAsH,uCAAuC,yCAAyC,2BAA2B,+pBAA+pB,sCAAsC,KAAK,uCAAuC,gGAAgG,uBAAuB,qCAAqC,mHAAmH,yCAAyC,4ZAA4Z,4BAA4B,8GAA8G,4BAA4B,4JAA4J,oBAAoB,6EAA6E,6DAA6D,sVAAsV,mBAAmB,0iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7hL;AACyB;AACS;AACR;AAEC;AAO7E;IAmBA,8BAAoB,IAAiB,EACf,cAA8B,EAC9B,iBAAoC,EACpC,KAAqB;QAHvB,SAAI,GAAJ,IAAI,CAAa;QACf,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,UAAK,GAAL,KAAK,CAAgB;QAnBlC,cAAS,GAAG,KAAK,CAAC;QAQlB,sBAAiB,GAAW,aAAa,CAAC;QAC1C,yBAAoB,GAAW,gBAAgB,CAAC;QAChD,2BAAsB,GAAW,kBAAkB,CAAC;QACpD,mBAAc,GAAW,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAE,IAAI;cACxC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAE,GAAG;cACxB,UAAU,CAAE;IAMU,CAAC;IAE9C,uCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAC/C,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,EAAC;YACpD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/E,CAAC;QACD,IAAI,EAAC;YACH,IAAI,CAAC,qBAAqB,GAAE,IAAI,CAAC,iBAAiB,CAAC;QACrD,CAAC;QAED,EAAE,EAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAC;YAC5C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAE,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC9E,CAAC;QAED,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAE,CAAC,EAAC;YAC1D,IAAI,CAAC,WAAW,GAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1E,CAAC;QACD,IAAI,EAAC;YACL,IAAI,CAAC,WAAW,GAAE,CAAC,CAAC;QACpB,CAAC;QAED,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;eACjD,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAC;YACzD,IAAI,MAAM,GAAW,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAChG,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACxC,CAAC;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,gDAAiB,GAAjB;QAAA,iBAUC;QATC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAE,IAAI,CAAC,WAAW,GAAE,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAChF,IAAI,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,KAAI,CAAC,UAAU,GAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACpC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;YAC3C,KAAI,CAAC,iBAAiB,GAAE,KAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YACjG,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAE,CAAC;IACzC,CAAC;IAED,mDAAoB,GAApB,UAAqB,CAAS;QAC5B,IAAI,CAAC,iBAAiB,GAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAE,CAAC,CAAC;QACpB,IAAI,MAAM,GAAW,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACjF,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,mDAAoB,GAApB;QACE,YAAY,CAAC,OAAO,CAAC,+BAA+B,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC9E,CAAC;IAED,uCAAQ,GAAR,UAAS,CAAS;QAChB,IAAI,CAAC,WAAW,GAAE,CAAC,CAAC;QACpB,IAAI,MAAM,GAAW,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAChG,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,sCAAO,GAAP,UAAQ,CAAS;QACf,IAAI,CAAC,WAAW,GAAE,CAAC,CAAC;QACpB,IAAI,MAAM,GAAW,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAChG,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,qCAAM,GAAN;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,MAAM,GAAW,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAChG,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAEC,qCAAM,GAAN;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,MAAM,GAAW,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAChG,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,qCAAM,GAAN,UAAO,CAAS;QACd,IAAI,CAAC,WAAW,GAAE,CAAC,CAAC;QACpB,IAAI,MAAM,GAAW,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAChG,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,yCAAU,GAAV,UAAY,aAAqB;QAC/B,MAAM,CAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACxD,CAAC;IAED,kDAAmB,GAAnB,UAAoB,OAAO,EAAE,QAAQ;QACnC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACpE,CAAC;IAED,qDAAsB,GAAtB,UAAuB,OAAO,EAAE,QAAQ;QACtC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACvE,CAAC;IAED,gDAAiB,GAAjB;QACE,IAAI,MAAM,GAAW,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7E,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,iBAAkB,CAAC,EAAC;YAC9E,IAAI,CAAC,WAAW,GAAE,CAAC,CAAC;YACpB,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,qBAAqB,GAAE,IAAI,CAAC,iBAAiB,CAAC;YACnD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,kDAAmB,GAAnB;QACE,IAAI,MAAM,GAAW,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAChF,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,oBAAqB,CAAC,EAAC;YACjF,IAAI,CAAC,WAAW,GAAE,CAAC,CAAC;YACpB,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,qBAAqB,GAAE,IAAI,CAAC,oBAAoB,CAAC;YACtD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,qDAAsB,GAAtB;QACE,IAAI,MAAM,GAAW,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAChF,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,sBAAuB,CAAC,EAAC;YACrF,IAAI,CAAC,WAAW,GAAE,CAAC,CAAC;YACpB,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,qBAAqB,GAAE,IAAI,CAAC,sBAAsB,CAAC;YACxD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,sDAAuB,GAAvB,UAAwB,IAAY,EAAE,MAAc;QAClD,MAAM,CAAC,IAAI,CAAC,cAAc,GAAI,QAAQ,GAAE,IAAI,GAAE,UAAU,GAAE,MAAM,CAAC;IACnE,CAAC;IA3JU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAoBwB,iFAAW;YACC,gFAAc;YACX,yFAAiB;YAC7B,2EAAc;OAtB9B,oBAAoB,CA4JhC;IAAD,2BAAC;CAAA;AA5JgC;;;;;;;;;;;;ACZjC,mB;;;;;;;;;;;ACAA,iM;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,oCAAoC,8BAA8B,GAAG,kBAAkB,mBAAmB,GAAG,oBAAoB,oBAAoB,GAAG,K;;;;;;;;;;;ACAxJ,y/BAAy/B,yBAAyB,+BAA+B,yDAAyD,+DAA+D,6DAA6D,oEAAoE,+DAA+D,8W;;;;;;;;;;;;;;;;;;;;;;;;;ACAvzC;AACqB;AAOvE;IACE,yBAAmB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QACpC,WAAM,GAAG,KAAK,CAAC;QAEf,SAAI,GAAG,EAAE,CAAC;IAH8B,CAAC;IAIzC,kCAAQ,GAAR;QAAA,iBAEC;QADC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAE,CAAC;IACnE,CAAC;IACD,iCAAO,GAAP;QACE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7B,CAAC;IAXU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAEyB,iFAAW;OADzB,eAAe,CAY3B;IAAD,sBAAC;CAAA;AAZ2B;;;;;;;;;;;;ACR5B,sBAAsB,2EAA2E,GAAG,2CAA2C,kBAAkB,iBAAiB,wCAAwC,iBAAiB,uCAAuC,6EAA6E,iBAAiB,gBAAgB,kBAAkB,iBAAiB,iCAAiC,qCAAqC,kCAAkC,sBAAsB,GAAG,6BAA6B,oBAAoB,GAAG,6BAA6B,gBAAgB,cAAc,gBAAgB,iBAAiB,sBAAsB,oBAAoB,GAAG,yCAAyC,aAAa,cAAc,oCAAoC,uCAAuC,0CAA0C,GAAG,gCAAgC,oBAAoB,uBAAuB,kBAAkB,sBAAsB,GAAG,sCAAsC,0BAA0B,oCAAoC,oCAAoC,GAAG,yBAAyB,uBAAuB,GAAG,wCAAwC,qBAAqB,uBAAuB,+GAA+G,GAAG,yFAAyF,kBAAkB,uBAAuB,gBAAgB,gBAAgB,kBAAkB,iBAAiB,gBAAgB,yFAAyF,uBAAuB,GAAG,8CAA8C,eAAe,GAAG,kBAAkB,uBAAuB,YAAY,iBAAiB,wBAAwB,uBAAuB,0BAA0B,mCAAmC,mCAAmC,GAAG,uCAAuC,eAAe,GAAG,uCAAuC,gBAAgB,GAAG,wCAAwC,gBAAgB,IAAI,cAAc,mBAAmB,sBAAsB,yBAAyB,GAAG,gBAAgB,uBAAuB,kBAAkB,mBAAmB,wBAAwB,mBAAmB,uBAAuB,uBAAuB,GAAG,qBAAqB,uBAAuB,iBAAiB,qCAAqC,qCAAqC,kBAAkB,aAAa,cAAc,GAAG,+CAA+C,iDAAiD,oBAAoB,mBAAmB,4CAA4C,kBAAkB,yCAAyC,iFAAiF,mBAAmB,kBAAkB,sBAAsB,kBAAkB,kCAAkC,sCAAsC,mCAAmC,KAAK,iCAAiC,sBAAsB,KAAK,iCAAiC,kBAAkB,gBAAgB,kBAAkB,mBAAmB,wBAAwB,sBAAsB,KAAK,6CAA6C,eAAe,iBAAiB,sCAAsC,wCAAwC,2CAA2C,KAAK,oCAAoC,oBAAoB,KAAK,uBAAuB,wGAAwG,oBAAoB,aAAa,EAAE,2BAA2B,mBAAmB,EAAE,4BAA4B,sBAAsB,gDAAgD,mBAAmB,EAAE,6BAA6B,sBAAsB,EAAE,+BAA+B,mBAAmB,sBAAsB,EAAE,uBAAuB,oBAAoB,qBAAqB,EAAE,gBAAgB,eAAe,EAAE,8BAA8B,mBAAmB,EAAE,+BAA+B,oBAAoB,EAAE,kCAAkC,kBAAkB,qBAAqB,EAAE,0BAA0B,mBAAmB,oBAAoB,EAAE,eAAe,cAAc,EAAE,qEAAqE,kBAAkB,EAAE,4BAA4B,qBAAqB,EAAE,2BAA2B,oBAAoB,EAAE,0BAA0B,mBAAmB,EAAE,gCAAgC,mBAAmB,oBAAoB,EAAE,8BAA8B,kBAAkB,qBAAqB,EAAE,yBAAyB,cAAc,EAAE,wBAAwB,aAAa,EAAE,iCAAiC,iBAAiB,oBAAoB,EAAE,yBAAyB,kBAAkB,mBAAmB,EAAE,sBAAsB,kBAAkB,EAAE,6FAA6F,aAAa,cAAc,6BAA6B,EAAE,sF;;;;;;;;;;;ACAxoK,ipB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,mB;;;;;;;;;;;ACAA,uQAAuQ,eAAe,0FAA0F,MAAM,mC;;;;;;;;;;;;;;;;;;;;;;;;ACA9S;AAOxE;IAOE;QALA,cAAS,GAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAGzB,0BAAqB,GAAG,IAAI,0DAAY,EAAU,CAAC;IAE7C,CAAC;IAEjB,qCAAQ,GAAR;QACE,EAAE,EAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAC;YAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAE,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC9E,CAAC;QACD,IAAI,EAAC;YACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC;IACH,CAAC;IAED,gDAAmB,GAAnB;QACE,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxD,CAAC;IAjBO;QAAT,4DAAM,EAAE;;qEAAoD;IALlD,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,kBAAkB,CAwB9B;IAAD,yBAAC;CAAA;AAxB8B;;;;;;;;;;;;ACP/B,mB;;;;;;;;;;;ACAA,2QAA2Q,gBAAgB,2FAA2F,MAAM,6MAA6M,4BAA4B,8JAA8J,4BAA4B,mNAAmN,gCAAgC,+EAA+E,SAAS,kGAAkG,qCAAqC,4JAA4J,qCAAqC,+J;;;;;;;;;;;;;;;;;;;;;;;;;ACAn2C;AACP;AASxE;IAaE,6BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAX1C,cAAS,GAAG,CAAC,CAAC;QAKZ,YAAO,GAAG,IAAI,0DAAY,EAAU,CAAC;QACrC,WAAM,GAAG,IAAI,0DAAY,EAAW,CAAC;QACrC,WAAM,GAAG,IAAI,0DAAY,EAAW,CAAC;QACrC,WAAM,GAAG,IAAI,0DAAY,EAAU,CAAC;QACpC,WAAM,GAAG,IAAI,0DAAY,EAAU,CAAC;IAEQ,CAAC;IAEvD,sCAAQ,GAAR;IACA,CAAC;IAED,oCAAM,GAAN,UAAO,CAAS;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAED,qCAAO,GAAP;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,oCAAM,GAAN,UAAO,IAAa;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAjCQ;QAAR,2DAAK,EAAE;;4DAAqB;IACpB;QAAR,2DAAK,EAAE;;2DAAoB;IACnB;QAAR,2DAAK,EAAE;;kEAA8B;IAE5B;QAAT,4DAAM,EAAE;;wDAAsC;IACrC;QAAT,4DAAM,EAAE;;uDAAsC;IACrC;QAAT,4DAAM,EAAE;;uDAAsC;IACrC;QAAT,4DAAM,EAAE;;uDAAqC;IACpC;QAAT,4DAAM,EAAE;;uDAAqC;IAXnC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAcoC,gFAAc;OAbvC,mBAAmB,CAqC/B;IAAD,0BAAC;CAAA;AArC+B;;;;;;;;;;;;ACVhC,6BAA6B,uBAAuB,GAAG,QAAQ,iBAAiB,kBAAkB,GAAG,gBAAgB,iBAAiB,iBAAiB,GAAG,QAAQ,oBAAoB,GAAG,G;;;;;;;;;;;ACAzL,8DAA8D,qTAAqT,6BAA6B,2qCAA2qC,GAAG,4dAA4d,iBAAiB,KAAK,mBAAmB,+YAA+Y,aAAa,uLAAuL,aAAa,KAAK,eAAe,uxBAAuxB,YAAY,KAAK,cAAc,mVAAmV,SAAS,KAAK,WAAW,oVAAoV,EAAE,uqBAAuqB,cAAc,4R;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlzJ;AAEJ;AAMiB;AAG/D,WAAW;AAC6D;AACR;AACc;AACW;AACf;AACE;AAO5E;IAcE,iCAAoB,IAAiB,EACjB,eAAgC,EAChC,mBAAwC,EACxC,eAAgC,EAChC,cAA8B,EAC9B,WAAwB,EACxB,MAAc;QANd,SAAI,GAAJ,IAAI,CAAa;QACjB,oBAAe,GAAf,eAAe,CAAiB;QAChC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAhB3B,cAAS,GAAc,EAAE,CAAC;QAC1B,WAAM,GAAW,EAAE,CAAC;QAM3B,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;IAQoB,CAAC;IACvC,0CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,cAAc,GAAG,IAAI,sEAAc,EAAE,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD,8CAAY,GAAZ;QAAA,iBAMC;QALC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,YAAY;YACtD,KAAI,CAAC,SAAS,GAAG,YAAY,CAAC;YAC9B,KAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5C,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+CAAa,GAAb,UAAc,EAAU;QACtB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;IACD,4CAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,CAAC;IACD,2CAAS,GAAT,UAAU,SAAiB;QAA3B,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,SAAS;YACtD,KAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,cAAc,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACxC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kDAAgB,GAAhB;QAAA,iBAKC;QAJC,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,UAAU;YAClE,KAAI,CAAC,aAAa,GAAG,UAAU,CAAC;YAChC,KAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,qDAAmB,GAAnB,UAAoB,EAAU;QAC5B,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;IACnC,CAAC;IACM,gDAAc,GAArB,UAAsB,kBAA6B;QAAnD,iBAaC;QAZC,EAAE,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACvD,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;YACjD,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC;YACjE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,aAAG;gBACpE,KAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,CAAC,EAAE,eAAK;gBACP,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACrD,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IACM,+CAAa,GAApB;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACxD,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACM,oDAAkB,GAAzB,UAA0B,EAAU;QAClC,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,0CAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;IAzFU,uBAAuB;QALnC,+DAAS,CAAE;YACV,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAe0B,iFAAW;YACA,mFAAe;YACX,gGAAmB;YACvB,mFAAe;YAChB,+EAAc;YACjB,uEAAW;YAChB,sDAAM;OApBvB,uBAAuB,CA0FnC;IAAD,8BAAC;CAAA;AA1FmC;;;;;;;;;;;;ACxBpC,kCAAkC,oBAAoB,GAAG,wBAAwB,iBAAiB,GAAG,OAAO,iBAAiB,GAAG,eAAe,sBAAsB,iBAAiB,uCAAuC,GAAG,G;;;;;;;;;;;ACAhO,4HAA4H,oBAAoB,ukBAAukB,QAAQ,uJAAuJ,OAAO,iTAAiT,aAAa,oY;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhoC;AAEX;AAC+B;AAChC;AAO/C;IAeE,kCAAoB,IAAgB,EAAU,eAAgC,EAAU,KAAqB;QAAzF,SAAI,GAAJ,IAAI,CAAY;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAd7G,uBAAkB,GAAG,iBAAiB,CAAC;QACvC,wBAAmB,GAAG,oCAAoC,CAAC;QAC3D,oBAAe,GAAG,yBAAyB,CAAC;QAC5C,oBAAe,GAAG,MAAM,CAAC;QACzB,wBAAmB,GAAG,IAAI,CAAC;QAG3B,gBAAW,GAAG,EAAE,CAAC;QACjB,UAAK,GAAW,EAAE,CAAC;QACnB,gBAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACtC,oBAAe,GAAa,EAAE,CAAC;QAC/B,kBAAa,GAAa,EAAE,CAAC;IAGmF,CAAC;IACjH,2CAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,kDAAe,GAAf;QAAA,iBAWC;QAVC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAE,CAAC;QAChG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC7D,YAAE;YACA,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,GAAG,CAAC,CAAgB,UAAoB,EAApB,UAAI,CAAC,QAAQ,CAAC,MAAM,EAApB,cAAoB,EAApB,IAAoB;gBAAnC,IAAM,KAAK;gBACd,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;aACxD;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IACD,4CAAS,GAAT,UAAU,KAAK;QACb,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC5C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IAClC,CAAC;IACD,+CAAY,GAAZ;QAAA,iBAuBC;QAtBC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC3C,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAC,EAAE,EAAE,GAAG;YACrC,IAAM,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;YAClC,UAAU,CAAC,MAAM,CAAC,KAAI,CAAC,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YACzD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,UAAU,GAAG,QAAQ,EAAE,UAAU,CAAC;iBACtE,SAAS,CAAC,cAAI;gBACX,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,CAAC;gBACvE,EAAE,CAAC,CAAC,EAAE,WAAW,KAAK,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC1C,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;oBACrC,UAAU,CAAC,cAAQ,KAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACpD,CAAC;YACH,CAAC,EACD,aAAG;gBACC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACzE,EAAE,CAAC,CAAC,EAAE,WAAW,KAAK,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC1C,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;oBACrC,UAAU,CAAC,cAAQ,KAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACtD,CAAC;YACH,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6CAAU,GAAV;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;IACvC,CAAC;IACD,4CAAS,GAAT,UAAU,KAAK;QACb,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;IAC/B,CAAC;IACD,+CAAY,GAAZ;QAAA,iBAWC;QAVC,GAAG,CAAC,CAAgB,UAAgB,EAAhB,SAAI,CAAC,WAAW,EAAhB,cAAgB,EAAhB,IAAgB;YAA/B,IAAM,KAAK;YACd,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;qBACzG,SAAS,CACV,aAAG;oBACD,KAAI,CAAC,eAAe,EAAE,CAAC;gBACzB,CAAC,CACF,CAAC;YACJ,CAAC;SACF;IACH,CAAC;IACD,gDAAa,GAAb;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAtED;QADC,+DAAS,CAAC,QAAQ,CAAC;;4DACb;IAdI,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAgB0B,+DAAU,EAA2B,mFAAe,EAAiB,8DAAc;OAflG,wBAAwB,CAqFpC;IAAD,+BAAC;CAAA;AArFoC;;;;;;;;;;;;ACXrC,4BAA4B,2BAA2B,uBAAuB,KAAK,cAAc,eAAe,oBAAoB,yBAAyB,GAAG,G;;;;;;;;;;;ACAhK,8VAA8V,6BAA6B,qlCAAqlC,GAAG,4fAA4f,aAAa,uKAAuK,aAAa,KAAK,eAAe,mvBAAmvB,iBAAiB,yBAAyB,mBAAmB,ya;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA75F;AACU;AACS;AAEE;AACa;AAEX;AAGf;AAO/D;IAaE,+BAAoB,KAAqB,EACrB,IAAiB,EACjB,eAAgC,EAChC,mBAAwC,EACxC,eAAgC,EAChC,MAAc;QALd,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAa;QACjB,oBAAe,GAAf,eAAe,CAAiB;QAChC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QAflC,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAOlB,YAAO,GAAG,KAAK,EAAY,CAAC;IAOU,CAAC;IAEvC,wCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAChD,IAAI,CAAC,cAAc,GAAG,IAAI,sEAAc,EAAE,CAAC;QAC3C,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;IAClC,CAAC;IACM,+CAAe,GAAtB;QAAA,iBAIC;QAHC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,QAAQ,GAAG,GAAG,EAAnB,CAAmB,CAAC,CAAC;QAChF,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACM,gDAAgB,GAAvB;QAAA,iBAIC;QAHC,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC1D,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACC,mDAAmB,GAAnB,UAAoB,EAAU;QAC5B,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;IACrC,CAAC;IAEM,8CAAc,GAArB,UAAsB,kBAA6B;QAAnD,iBAgBC;QAfC,EAAE,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7B,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC9C,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YAC5D,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;YAC9D,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YAC5D,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBACvE,KAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACtD,CAAC,CAAC,CAAC;QACF,CAAC;QAAC,IAAI,CAAC,CAAC;YACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IACM,6CAAa,GAApB;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACxD,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACM,kDAAkB,GAAzB,UAA0B,EAAU;QAClC,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,gCAAgC;IAChC,qCAAqC;IACrC,2DAA2D;IAC3D,+CAA+C;IAC/C,6CAA6C;IAC7C,mCAAmC;IACnC,uBAAuB;IACvB,sBAAsB;IACtB,sCAAsC;IACtC,wBAAwB;IACxB,UAAU;IACV,UAAU;IACV,QAAQ;IACR,kBAAkB;IAClB,IAAI;IACJ,EAAE;IACF,mBAAmB;IACnB,0DAA0D;IAC1D,yDAAyD;IACzD,iEAAiE;IACjE,qBAAqB;IACrB,gCAAgC;IAChC,QAAQ;IACR,QAAQ;IACR,IAAI;IACJ,wCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;IArGU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAc2B,8DAAc;YACf,iFAAW;YACA,mFAAe;YACX,gGAAmB;YACvB,mFAAe;YACxB,sDAAM;OAlBvB,qBAAqB,CAsGjC;IAAD,4BAAC;CAAA;AAtGiC;;;;;;;;;;;;ACjBlC,oBAAoB,2BAA2B,GAAG,oBAAoB,0BAA0B,WAAW,yBAAyB,uBAAuB,iBAAiB,kBAAkB,wBAAwB,wBAAwB,GAAG,G;;;;;;;;;;;ACAjP,saAAsa,wBAAwB,+BAA+B,eAAe,yJAAyJ,eAAe,yGAAyG,qOAAqO,aAAa,8DAA8D,eAAe,ulBAAulB,8BAA8B,UAAU,sBAAsB,2BAA2B,4BAA4B,GAAG,oCAAoC,uLAAuL,uBAAuB,oFAAoF,sCAAsC,sBAAsB,gHAAgH,4BAA4B,8KAA8K,iBAAiB,mHAAmH,aAAa,sMAAsM,aAAa,0O;;;;;;;;;;;;;;;;;;;;;;;;;ACApvF;AAGR;AAO/C;IAQE,+BAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QALlC,gBAAW,GAAG;YACnB,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,aAAa,EAAE,EAAE;SAClB;IAC2C,CAAC;IAE7C,wCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5E,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9E,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC1F,CAAC;IAZQ;QAAR,2DAAK,EAAE;;+DAAyB;IAFtB,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAS2B,8DAAc;OAR9B,qBAAqB,CAehC;IAAD,4BAAC;CAAA;AAfgC;;;;;;;;;;;;ACVlC,mB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAG+B;AAOjF;IAEE,+BAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAEzD,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAE;YACV,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAGqC,mFAAe;OAFzC,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACVlC,mB;;;;;;;;;;;ACAA,mZAAmZ,wBAAwB,4SAA4S,eAAe,qdAAqd,eAAe,2KAA2K,sBAAsB,iHAAiH,uBAAuB,6DAA6D,sBAAsB,uFAAuF,4BAA4B,yOAAyO,iBAAiB,2IAA2I,aAAa,0PAA0P,aAAa,iV;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl0E;AAE4B;AACN;AACS;AACL;AAO1E;IAKE,kCAAoB,eAAgC,EAChC,aAA4B,EAC5B,gBAAkC,EAClC,IAAiB;QAHjB,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,SAAI,GAAJ,IAAI,CAAa;IACrC,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAChD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,qDAAkB,GAAlB;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,oBAAU;YAC5D,KAAI,CAAC,YAAY,GAAG,UAAU,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IApBU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAMqC,mFAAe;YACjB,6EAAa;YACV,sFAAgB;YAC5B,iFAAW;OAR1B,wBAAwB,CAqBpC;IAAD,+BAAC;CAAA;AArBoC;;;;;;;;;;;;ACZrC,2BAA2B,oBAAoB,gBAAgB,iBAAiB,kBAAkB,4BAA4B,wBAAwB,WAAW,YAAY,gCAAgC,GAAG,YAAY,oBAAoB,gBAAgB,eAAe,qBAAqB,oBAAoB,oCAAoC,GAAG,K;;;;;;;;;;;ACA/V,8b;;;;;;;;;;;;;;;;;;;;;;;;;;ACAuD;AAER;AAC6B;AAO5E;IAME,4BAAoB,KAAqB,EAAU,eAAgC;QAA/D,UAAK,GAAL,KAAK,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAFnF,mBAAc,GAAG,EAAE,CAAC;QACpB,WAAM,GAAG,KAAK,CAAC;IACwE,CAAC;IAExF,qCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAE,CAAC;QAC5E,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC;aAC9B,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,EAA7B,CAA6B,CAAC,CAAC;IAC9E,CAAC;IACD,sCAAS,GAAT,UAAU,GAAW;QACnB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,uCAAU,GAAV;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAnBU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAO2B,8DAAc,EAA2B,mFAAe;OANxE,kBAAkB,CAoB9B;IAAD,yBAAC;CAAA;AApB8B;;;;;;;;;;;;ACV/B,mCAAmC,mBAAmB,oBAAoB,0BAA0B,uBAAuB,0BAA0B,wBAAwB,yBAAyB,yBAAyB,KAAK,aAAa,sBAAsB,kBAAkB,mBAAmB,oBAAoB,8BAA8B,0BAA0B,aAAa,cAAc,kCAAkC,KAAK,cAAc,sBAAsB,kBAAkB,iBAAiB,uBAAuB,sBAAsB,sCAAsC,KAAK,C;;;;;;;;;;;ACAzlB,uJAAuJ,uCAAuC,2JAA2J,k1BAAk1B,eAAe,2JAA2J,wzB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5xC;AACgB;AACvB;AACE;AAOpD;IAOE,6BAAoB,YAAsB;QAAtB,iBAAY,GAAZ,YAAY,CAAU;QAH1C,mBAAc,GAAG,EAAE,CAAC;QACpB,WAAM,GAAG,KAAK,CAAC;IAE8B,CAAC;IAE9C,sCAAQ,GAAR;IACA,CAAC;IAED,kCAAI,GAAJ,UAAK,cAAc,EAAE,eAAe;QAClC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,EAAC;YACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,EAAC,cAAc,EAAE,eAAe,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;QACvF,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;YACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,EAAE,EAAC,cAAc,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;QACzF,CAAC;IACH,CAAC;IAED,uCAAS,GAAT,UAAU,GAAW;QACnB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IA3BQ;QAAR,2DAAK,EAAE;kCAAU,uDAAO;wDAAC;IACjB;QAAR,2DAAK,EAAE;kCAAW,yDAAQ;yDAAC;IAHjB,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAQkC,mEAAQ;OAP/B,mBAAmB,CA+B/B;IAAD,0BAAC;CAAA;AA/B+B;;;;;;;;;;;;ACVhC,yBAAyB,oCAAoC,2BAA2B,qBAAqB,kBAAkB,gBAAgB,oBAAoB,4BAA4B,GAAG,gBAAgB,gBAAgB,GAAG,G;;;;;;;;;;;ACArO,8D;;;;;;;;;;;;;;;;;;;;;;;;ACAuD;AAOvD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IAJQ;QAAR,2DAAK,EAAE;;oDAAkB;IADf,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,sBAAsB,2BAA2B,GAAG,UAAU,mBAAmB,iBAAiB,sBAAsB,wBAAwB,6BAA6B,KAAK,cAAc,sBAAsB,sBAAsB,GAAG,iBAAiB,iBAAiB,sBAAsB,iBAAiB,wBAAwB,6BAA6B,GAAG,G;;;;;;;;;;;ACAhX,oJAAoJ,iBAAiB,8DAA8D,mLAAmL,aAAa,6BAA6B,eAAe,+CAA+C,4BAA4B,4BAA4B,+CAA+C,+BAA+B,iBAAiB,6IAA6I,kCAAkC,8BAA8B,qBAAqB,sBAAsB,IAAI,4BAA4B,IAAI,oCAAoC,uDAAuD,aAAa,2KAA2K,wBAAwB,6NAA6N,sEAAsE,cAAc,4BAA4B,aAAa,kRAAkR,sEAAsE,cAAc,oCAAoC,aAAa,qMAAqM,qEAAqE,cAAc,4BAA4B,aAAa,uQAAuQ,+BAA+B,mBAAmB,6CAA6C,gBAAgB,yEAAyE,4BAA4B,IAAI,oCAAoC,yVAAyV,wBAAwB,mVAAmV,wBAAwB,sfAAsf,wBAAwB,oUAAoU,0GAA0G,sCAAsC,uBAAuB,wEAAwE,oCAAoC,sBAAsB,8DAA8D,gDAAgD,4BAA4B,wEAAwE,+CAA+C,8BAA8B,wEAAwE,4BAA4B,4BAA4B,8DAA8D,0CAA0C,oCAAoC,6JAA6J,eAAe,kBAAkB,wLAAwL,eAAe,gIAAgI,eAAe,+BAA+B,sBAAsB,8+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1qL;AAE0B;AAC7B;AACuB;AAOtE;IAUE,kCAAoB,KAAqB,EAAU,eAAgC,EAC/D,aAA4B;QAD5B,UAAK,GAAL,KAAK,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAC/D,kBAAa,GAAb,aAAa,CAAe;QATzC,cAAS,GAAG,KAAK,CAAC;QAGlB,gBAAW,GAAG;YACnB,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,aAAa,EAAE,EAAE;SAClB;IAEmD,CAAC;IAErD,2CAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5E,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9E,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACxF,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IACM,kDAAe,GAAtB;QAAA,iBAQC;QAPC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAAK,KAAI,CAAC,QAAQ,GAAG,GAAG;YAC9E,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,CAAC,EACC,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACM,iDAAc,GAArB;QAAA,iBAKC;QAJC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7D,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAlCU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAW2B,8DAAc,EAA2B,mFAAe;YAChD,6EAAa;OAXrC,wBAAwB,CAmCpC;IAAD,+BAAC;CAAA;AAnCoC;;;;;;;;;;;;ACXrC,mB;;;;;;;;;;;ACAA,iF;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,qCAAqC,kBAAkB,iBAAiB,4BAA4B,oBAAoB,G;;;;;;;;;;;ACAxH,0EAA0E,gBAAgB,8BAA8B,eAAe,4GAA4G,aAAa,4D;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzM;AACR;AACuB;AAQtE;IAGE,gCAAoB,KAAqB,EACrB,aAA4B;QAD5B,UAAK,GAAL,KAAK,CAAgB;QACrB,kBAAa,GAAb,aAAa,CAAe;IAChD,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,mDAAkB,GAAlB;QAAA,iBAGC;QAFC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,MAAM,GAAG,CAAC,EAAf,CAAe,CAAC,CAAC;IAC5E,CAAC;IAdU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAI2B,8DAAc;YACN,6EAAa;OAJrC,sBAAsB,CAelC;IAAD,6BAAC;CAAA;AAfkC;;;;;;;;;;;;ACVnC,iCAAiC,iBAAiB,iBAAiB,6BAA6B,kBAAkB,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,KAAK,WAAW,qBAAqB,GAAG,SAAS,iBAAiB,GAAG,G;;;;;;;;;;;ACAnU,yJAAyJ,6BAA6B,uiBAAuiB,cAAc,uaAAua,2BAA2B,qCAAqC,0BAA0B,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5qC;AACM;AACvB;AAEY;AAClB;AAEgC;AAOzE;IAQE,+BAAoB,aAA4B,EAC5B,KAAqB,EACrB,cAA8B,EAC9B,QAAkB;QAHlB,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAU;QARtC,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAEX,cAAS,GAAG,KAAK,CAAC;IAMzB,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,kEAAY,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,EAAE,CAAC;IAEpB,CAAC;IAED,4CAAY,GAAZ,UAAa,gBAA2B;QAAxC,iBAYC;QAXC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC5D,KAAK,CAAC,gBAAgB,CAAC,CAAC;gBACxB,KAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACtD,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IAED,sCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,0CAAU,GAAV;QAAA,iBAMC;QALC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,WAAC;YAC5C,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IA5CU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCASmC,6EAAa;YACrB,8DAAc;YACL,gFAAc;YACpB,wDAAQ;OAX3B,qBAAqB,CA6CjC;IAAD,4BAAC;CAAA;AA7CiC;;;;;;;;;;;;ACdlC,+BAA+B,qBAAqB,GAAG,mBAAmB,oBAAoB,qBAAqB,sBAAsB,GAAG,mBAAmB,qBAAqB,sBAAsB,GAAG,K;;;;;;;;;;;ACA7M,+NAA+N,wMAAwM,eAAe,KAAK,iCAAiC,4NAA4N,0BAA0B,mFAAmF,eAAe,mGAAmG,gBAAgB,qlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv3B;AAED;AACuB;AACY;AAEN;AAO5E;IAUE,kCAAoB,KAAqB,EACrB,aAA4B,EAC5B,iBAAoC,EACpC,eAAgC;QAHhC,UAAK,GAAL,KAAK,CAAgB;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAiB;QAVpD,gBAAW,GAAG,CAAC,CAAC;QAChB,sBAAiB,GAAG,EAAE,CAAC;QAIhB,cAAS,GAAG,KAAK,CAAC;IAMzB,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,mDAAgB,GAAhB;QAAA,iBAWC;QAVC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC;iBAC7F,SAAS,CAAC,cAAI;gBACb,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC/B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACrC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC3C,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;YACpG,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAED,uDAAoB,GAApB,UAAqB,CAAS;QAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,2CAAQ,GAAR,UAAS,CAAS;QAChB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,0CAAO,GAAP,UAAQ,CAAS;QACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,yCAAM,GAAN;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,yCAAM,GAAN;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,yCAAM,GAAN,UAAO,CAAS;QACd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,8CAAW,GAAX;QAAA,iBAGC;QAFC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,YAAE,IAAI,YAAI,CAAC,QAAQ,GAAG,EAAE,EAAlB,CAAkB,CAAC,CAAC;IAC/E,CAAC;IApEU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAW2B,8DAAc;YACN,6EAAa;YACT,yFAAiB;YACnB,mFAAe;OAbzC,wBAAwB,CAqEpC;IAAD,+BAAC;CAAA;AArEoC;;;;;;;;;;;;ACbrC,uBAAuB,iBAAiB,GAAG,G;;;;;;;;;;;ACA3C,qfAAqf,YAAY,KAAK,cAAc,sXAAsX,SAAS,KAAK,WAAW,4vBAA4vB,KAAK,ma;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9lD;AACE;AACR;AAGT;AAOvD;IAYE,6BAAoB,cAA8B,EAC9B,WAAwB,EACxB,MAAc,EACd,KAAqB;QAHrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAdlC,iBAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,cAAS,GAAc,EAAE,CAAC;QAC1B,WAAM,GAAW,EAAE,CAAC;QAM3B,cAAS,GAAG,IAAI,CAAC;QAEP,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;IAID,CAAC;IAE9C,sCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3F,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACxC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YACvF,CAAC;QACH,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAClE,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACpE,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;QACxG,CAAC;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IACQ,2CAAa,GAApB;QAAA,iBAID;QAHC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,mBAAS;YAClD,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACQ,wCAAU,GAAjB,UAAkB,SAAiB;QAAnC,iBAID;QAHC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,gBAAM;YAClD,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACM,6CAAe,GAAtB,UAAuB,EAAU;QAC/B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC;IACM,0CAAY,GAAnB,UAAoB,EAAU;QAC5B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,CAAC;IACM,iDAAmB,GAA1B,UAA2B,WAAmB;QAC5C,IAAI,CAAC,sBAAsB,GAAG,WAAW,CAAC;IAC5C,CAAC;IACM,sCAAQ,GAAf;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC9G,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAE,EAAE,WAAW,EACpD;gBACE,OAAO,EAAE,IAAI,CAAC,iBAAiB;gBAC/B,IAAI,EAAE,IAAI,CAAC,cAAc;gBACzB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,aAAa,EAAE,IAAI,CAAC,sBAAsB;aAC3C,EAAC,CAAC,CAAC;QACR,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvB,OAAO,EAAE,IAAI,CAAC,iBAAiB;YAC/B,IAAI,EAAE,IAAI,CAAC,cAAc;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,aAAa,EAAE,IAAI,CAAC,sBAAsB;SAAC,CAAC,CAAC;IACjD,CAAC;IAjES;QAAT,4DAAM,EAAE;;+DAAqC;IAXnC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAaoC,+EAAc;YACjB,uEAAW;YAChB,sDAAM;YACP,8DAAc;OAf9B,mBAAmB,CA6E/B;IAAD,0BAAC;CAAA;AA7E+B;;;;;;;;;;;;ACZhC,mB;;;;;;;;;;;ACAA,wD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,2BAA2B,+BAA+B,uBAAuB,mCAAmC,iBAAiB,kBAAkB,+CAA+C,+CAA+C,oBAAoB,gBAAgB,eAAe,iBAAiB,GAAG,2BAA2B,QAAQ,iCAAiC,yBAAyB,EAAE,UAAU,mCAAmC,2BAA2B,EAAE,GAAG,mBAAmB,QAAQ,iCAAiC,yBAAyB,EAAE,UAAU,mCAAmC,2BAA2B,EAAE,GAAG,sBAAsB,oBAAoB,gBAAgB,iBAAiB,kBAAkB,4BAA4B,wBAAwB,WAAW,YAAY,sCAAsC,GAAG,G;;;;;;;;;;;ACA71B,4F;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;ACP7B,qB;;;;;;;;;;;ACAA,4jCAA4jC,cAAc,snB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxhC;AACE;AACwB;AACnC;AAOzC;IAIE,wBAAoB,IAAiB,EACjB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;QAJlC,aAAQ,GAAa,IAAI,yDAAQ,EAAE,CAAC;QACpC,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;IAEoB,CAAC;IAEvC,iCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,+BAAM,GAAN,UAAO,IAAe;QAAtB,iBAcC;QAbC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC5B,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBACzB,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACrB,KAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,CAAC,EAAE,eAAK;gBACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACtD,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IACD,gCAAO,GAAP;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IACD,iCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IA9BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAK0B,iFAAW;YACT,sDAAM;OALvB,cAAc,CA+B1B;IAAD,qBAAC;CAAA;AA/B0B;;;;;;;;;;;;ACV3B,mB;;;;;;;;;;;ACAA,gYAAgY,6BAA6B,i7FAAi7F,YAAY,KAAK,cAAc,uXAAuX,SAAS,KAAK,WAAW,gsBAAgsB,cAAc,sV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz5I;AAEV;AACoC;AAClB;AAEgB;AAER;AAQlE;IAQE,2BAAoB,IAAiB,EACjB,cAA8B,EAC9B,WAAwB,EACxB,MAAc;QAHd,SAAI,GAAJ,IAAI,CAAa;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAVlC,gBAAW,GAAgB,IAAI,+DAAW,EAAE,CAAC;QAK7C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;IAIoB,CAAC;IAEvC,oCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAMC;QALC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,YAAY;YACtD,KAAI,CAAC,SAAS,GAAG,YAAY,CAAC;YAC9B,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1C,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAa,GAAb,UAAc,EAAU;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;IACD,sCAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IACD,qCAAS,GAAT,UAAU,SAAiB;QAA3B,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,SAAS;YACtD,KAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7B,KAAI,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACpC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACC,kCAAM,GAAN,UAAO,YAAuB;QAA9B,iBAaD;QAZC,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;YACrD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC;YAChE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;gBACpD,KAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,CAAC,EAAE,eAAK;gBACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YACtD,CAAC,CAAC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IACD,oCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAvDU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAS0B,iFAAW;YACD,+EAAc;YACjB,uEAAW;YAChB,sDAAM;OAXvB,iBAAiB,CAwD7B;IAAD,wBAAC;CAAA;AAxD6B;;;;;;;;;;;;AChB9B,mB;;;;;;;;;;;ACAA,uLAAuL,kDAAkD,4HAA4H,sDAAsD,0IAA0I,wDAAwD,oM;;;;;;;;;;;;;;;;;;;;;;;;;ACA3iB;AACwB;AAO1E;IAGE,iCAAmB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAFpC,YAAO,GAAG,KAAK,CAAC;QAChB,SAAI,GAAG,EAAE,CAAC;IAC8B,CAAC;IAEzC,0CAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,aAAG,IAAI,YAAI,CAAC,OAAO,GAAG,GAAG,EAAlB,CAAkB,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IACnC,CAAC;IARU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAIyB,iFAAW;OAHzB,uBAAuB,CASnC;IAAD,8BAAC;CAAA;AATmC;;;;;;;;;;;;ACRpC,gCAAgC,qBAAqB,wBAAwB,GAAG,WAAW,iBAAiB,uBAAuB,GAAG,G;;;;;;;;;;;ACAtI,gJAAgJ,aAAa,8LAA8L,eAAe,yBAAyB,4BAA4B,oaAAoa,SAAS,qBAAqB,UAAU,qBAAqB,uBAAuB,qBAAqB,mBAAmB,0HAA0H,aAAa,kBAAkB,OAAO,uE;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7iC;AACH;AACmC;AAQlF;IAIE,iCAAoB,KAAqB,EAAU,eAAgC;QAA/D,UAAK,GAAL,KAAK,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAF5E,cAAS,GAAG,KAAK,CAAC;IAE8D,CAAC;IACxF,0CAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1F,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EACC,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAC,CAAC;IACvC,CAAC;IAbU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAK2B,8DAAc,EAA2B,mFAAe;OAJxE,uBAAuB,CAcnC;IAAD,8BAAC;CAAA;AAdmC;;;;;;;;;;;;ACVpC,2BAA2B,gBAAgB,uBAAuB,GAAG,mBAAmB,qBAAqB,wBAAwB,GAAG,G;;;;;;;;;;;ACAxI,qqBAAqqB,eAAe,mBAAmB,uBAAuB,mBAAmB,sBAAsB,mBAAmB,4BAA4B,qHAAqH,aAAa,yKAAyK,aAAa,8LAA8L,aAAa,6N;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvwC;AAE6B;AACA;AAQ/E;IAME,iCAAoB,eAAgC,EAAW,IAAiB;QAA5D,oBAAe,GAAf,eAAe,CAAiB;QAAW,SAAI,GAAJ,IAAI,CAAa;QAJzE,cAAS,GAAG,KAAK,CAAC;IAI2D,CAAC;IAErF,0CAAQ,GAAR;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAChD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,oDAAkB,GAAzB;QAAA,iBAOC;QANC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,oBAAU;YAC5D,KAAI,CAAC,YAAY,GAAG,UAAU,CAAC;YAC/B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,CAAC,EACD,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAC,CAAC;IACrC,CAAC;IApBU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAOqC,mFAAe,EAAiB,iFAAW;OANrE,uBAAuB,CAqBnC;IAAD,8BAAC;CAAA;AArBmC;;;;;;;;;;;;ACXpC,4BAA4B,mBAAmB,sBAAsB,GAAG,G;;;;;;;;;;;ACAxE,sJAAsJ,gBAAgB,GAAG,eAAe,sUAAsU,gBAAgB,iGAAiG,eAAe,8FAA8F,YAAY,8FAA8F,kBAAkB,qHAAqH,iBAAiB,qHAAqH,kBAAkB,wI;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnjC;AAEqB;AACE;AAOzE;IAME,uBAAoB,IAAiB,EAAU,eAAgC;QAA3D,SAAI,GAAJ,IAAI,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAL/E,cAAS,GAAG,KAAK,CAAC;QAElB,oBAAe,GAAG,CAAC,CAAC;QACpB,qBAAgB,GAAG,CAAC,CAAC;IAE8D,CAAC;IAEpF,gCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,cAAI;YAC3C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAE,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,iBAAO;YAClC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAE,oBAAU;oBAC7D,KAAI,CAAC,eAAe,GAAG,UAAU,CAAC,MAAM,CAAC;oBACzC,IAAI,gBAAgB,GAAG,CAAC,CAAC;oBACzB,UAAU,CAAC,OAAO,CAAC,kBAAQ,IAAI,uBAAgB,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,EAA9C,CAA8C,CAAE,CAAC;oBAChF,KAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;gBAAC,CAAC,CAAC,CAAC;YACjD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAxBU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAO0B,iFAAW,EAA2B,mFAAe;OANpE,aAAa,CAyBzB;IAAD,oBAAC;CAAA;AAzByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViB;AACkF;AAExF;AACiC;AAEtE;IAEE,wBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QACrC,iBAAY,GAAG,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;IADP,CAAC;IAEzC,kCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAsBC;QArBD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC5C,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;gBACpB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;oBAClB,UAAU,EAAE;wBACV,aAAa,EAAE,YAAU,KAAO;qBACnC;iBACJ,CAAC,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAE,0DAAG,CAAE,UAAC,EAAkB;YACtD,EAAE,CAAC,CAAC,EAAE,YAAY,iEAAY,CAAC,CAAC,CAAC;YAEjC,CAAC;QACL,CAAC,EAAE,UAAC,GAAQ;YACR,EAAE,CAAC,CAAC,GAAG,YAAY,sEAAiB,CAAC,CAAC,CAAC;gBACrC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACvB,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACtB,CAAC;YACH,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACJ,CAAC;IA1BU,cAAc;QAD1B,gEAAU,EAAE;yCAGe,iFAAW;OAF1B,cAAc,CA2B1B;IAAD,qBAAC;CAAA;AA3B0B;;;;;;;;;;;;;ACN3B;AAAA;AAAA;AAA4B;AAE5B;IAAA;QAIE,SAAI,GAAS,IAAI,0CAAI,EAAE,CAAC;IAC1B,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACPD;AAAA;AAAA;IAAA;IAIA,CAAC;IAAD,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACED;AAAA;AAAA;IAAA;IAUA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAoC;AAEpC;IAAA;QAGE,YAAO,GAAY,IAAI,gDAAO,EAAE,CAAC;IACnC,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACND;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACHD;AAAA;AAAA;IAAA;IAOA,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACPD;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACHD;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACHD;AAAA;AAAA;IAAA;IAWA,CAAC;IAAD,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACLD;AAAA;AAAA;IAAA;IAYA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAoC;AAEpC;IAAA;QAOI,YAAO,GAAY,IAAI,gDAAO,EAAE,CAAC;IACrC,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV+C;AACa;AAU7D;IAKE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJ5B,iBAAY,GAAG,eAAe,CAAC;QAC/B,YAAO,GAAG,sCAAsC,CAAC;QACjD,eAAU,GAAG,iCAAiC,CAAC;IAEf,CAAC;IAElC,2CAAgB,GAAvB,UAAwB,EAAU;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,YAAY,SAAI,EAAE,eAAY,CAAC,CAAC;IAC5E,CAAC;IACM,2CAAgB,GAAvB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IACM,uCAAY,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IACM,0CAAe,GAAtB,UAAwB,KAAsB,EAAE,EAAU;QACxD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAgB,EAAE,eAAY,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;IAC5E,CAAC;IACM,2CAAgB,GAAvB,UAAwB,GAAW,EAAE,IAAY;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,eAAe,GAAG,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,CAAC;IAC9E,CAAC;IACK,0CAAe,GAAtB,UAAuB,KAAsB,EAAE,EAAU;QACvD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,GAAG,EAAE,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;IAClE,CAAC;IAEM,oDAAyB,GAAhC,UAAiC,EAAU;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,mBAAiB,EAAI,CAAC,CAAC;IACzD,CAAC;IAtCU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,+DAAU;OALzB,gBAAgB,CAuC5B;IAAD,uBAAC;CAAA;AAvC4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXc;AACS;AACP;AAK7C;IAEE,0BAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAElE,sCAAW,GAAX;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;IACnC,CAAC;IATU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,yDAAW,EAAkB,sDAAM;OAFlD,gBAAgB,CAU5B;IAAD,uBAAC;CAAA;AAV4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPc;AACqB;AAC9B;AAEO;AAGJ;AAIrC;IAIE,qBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAC5D,CAAC;IAED,4BAAM,GAAN,UAAO,KAAe;QACpB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAC,CAAC,EAChG,EAAC,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACtB,cAAc,EAAG,kBAAkB;aAAE,CAAC;YACxC,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACP,CAAC;IAED,4BAAM,GAAN,UAAO,KAAkB;QACvB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAC1D,EAAC,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACtB,cAAc,EAAG,kBAAkB;aAAE,CAAC;YACxC,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACP,CAAC;IACD,8BAAQ,GAAR;QAAA,iBASC;QARC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,WAAW,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAE,cAAI;YAClD,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAC/B,IAAM,SAAS,GAAG,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,KAAK,YAAY,EAA1B,CAA0B,CAAC,CAAC;YACnF,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,CAAC;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,+BAAS,GAAT,UAAU,KAAa;QACrB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,8BAAQ,GAAR;QACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,6BAAO,GAAP;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,sBAAI,wCAAe;aAAnB;YACG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;QAChD,CAAC;;;OAAA;IAED,sBAAI,gCAAO;aAAX;YAAA,iBAYC;YAXC,MAAM,CAAC,+CAAU,CAAC,MAAM,CAAE,kBAAQ;gBAChC,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;oBACpC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;oBAC7B,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAE,aAAG;wBAC5B,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;wBAC7B,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;;;OAAA;IAED,sBAAI,oCAAW;aAAf;YAAA,iBAUC;YATC,MAAM,CAAC,+CAAU,CAAC,MAAM,CAAE,kBAAQ;gBAChC,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;oBACpC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;gBACnC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAE,aAAG;wBAC5B,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;;;OAAA;IACD,wCAAkB,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,WAAW,CAAC,CAAC;IAC1C,CAAC;IAlFU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU,EAAkB,sDAAM;OAJjD,WAAW,CAmFvB;IAAD,kBAAC;CAAA;AAnFuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXmB;AACiC;AACjC;AAM3C;IAGE,0BAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAF7D,iBAAY,GAAG,4BAA4B,CAAC;QAC5C,sBAAiB,GAAG,OAAO,CAAC;IACqC,CAAC;IAClE,sCAAW,GAAX,UAAY,KAA6B;QAAzC,iBAUC;QATC,IAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAE,cAAI;YACjC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,KAAK,YAAY,EAA1B,CAA0B,CAAC,CAAC,CAAC,CAAC;gBACvF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC/C,KAAK,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAC3B,CAAC;QACH,CAAC,CACF;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAdU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,yDAAW,EAAkB,sDAAM;OAHlD,gBAAgB,CAe5B;IAAD,uBAAC;CAAA;AAf4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACRY;AACoB;AAS7D;IAQE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAL5B,eAAU,GAAG,aAAa,CAAC;QAC3B,qBAAgB,GAAG,cAAc,CAAC;QAClC,oBAAe,GAAG,kBAAkB,CAAC;IAI7C,CAAC;IAED,0CAAiB,GAAjB,UAAkB,UAAkB,EAAE,QAAgB,EAAE,qBAA6B;QACnF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,gBAAgB,oBAAe,UAAU,kBAAa,QAAQ,uCAC7C,qBAAuB,CAAC,CAAC;IACtD,CAAC;IAED,mCAAU,GAAV,UAAW,EAAU;QACnB,IAAM,GAAG,GAAM,IAAI,CAAC,UAAU,SAAI,EAAI,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,CAAC,CAAC;IACrC,CAAC;IAED,uCAAc,GAAd,UAAe,EAAU;QACvB,IAAM,GAAG,GAAM,IAAI,CAAC,UAAU,SAAI,EAAI,CAAC;QACvC,IAAM,UAAU,GAAG;YACjB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAExC,CAAC;IAED,mCAAU,GAAV,UAAW,aAAqB;QAC9B,IAAM,cAAc,GAAG,UAAU,CAAC;QAClC,EAAE,CAAC,CAAC,aAAa,KAAK,cAAc,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED,+CAAsB,GAAtB,UAAuB,OAAO,EAAE,QAAQ;QACtC,IAAM,WAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,IAAM,YAAY,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAM,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IACjF,CAAC;IAGD,4CAAmB,GAAnB,UAAoB,OAAO,EAAE,QAAQ;QACnC,IAAI,WAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,YAAY,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,EAAE,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAEM,sCAAa,GAApB,UAAqB,aAA4B,EAAE,WAAmB;QACpE,IAAM,GAAG,GAAG,iBAAe,WAAa,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,EAAE;YACxC,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;YACF,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;IAED,iDAAwB,GAAxB,UAAyB,EAAU,EAAE,IAAY,EAAE,IAAY,EAAE,aAAqB;QACpF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,IAAI,CAAC,eAAe,SAAI,EAAE,4BAAuB,IAAI,cAAS,IAAI,uBAAkB,aAAe,CAAC,CAAC;IAC5G,CAAC;IA1EU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAS0B,+DAAU;OARzB,cAAc,CA2E1B;IAAD,qBAAC;CAAA;AA3E0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACVgB;AACK;AAShD;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,6BAAO,GAAd,UAAe,SAAiB;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,iBAAe,SAAS,YAAS,CAAC,CAAC;IAClE,CAAC;IANU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,WAAW,CAOvB;IAAD,kBAAC;CAAA;AAPuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACVmB;AACK;AAQhD;IAEE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,mCAAU,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,eAAe,CAAC,CAAC;IACnD,CAAC;IANU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgB;AACK;AAOhD;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,0CAAgB,GAAvB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,gBAAgB,CAAC,CAAC;IACrD,CAAC;IANU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;;;;;;;;;;;;;ACRe;AAK3C;IAEE;IAAgB,CAAC;IAEjB,0CAAc,GAAd,UAAe,WAAmB,EAAE,UAAkB;QACpD,IAAI,SAAiB,EAAE,OAAe,CAAC;QACvC,EAAE,CAAC,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC;YACrB,uCAAuC;YACvC,SAAS,GAAG,CAAC,CAAC;YACd,OAAO,GAAG,UAAU,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,4DAA4D;YAC5D,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnB,SAAS,GAAG,CAAC,CAAC;gBACd,OAAO,GAAG,EAAE,CAAC;YACjB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;gBACvC,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC;gBAC3B,OAAO,GAAG,UAAU,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,SAAS,GAAG,WAAW,GAAG,CAAC,CAAC;gBAC5B,OAAO,GAAG,WAAW,GAAG,CAAC,CAAC;YAC9B,CAAC;QACL,CAAC;QACA,0DAA0D;QAC1D,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,gBAAS,GAAG,CAAC,EAAb,CAAa,CAAC,CAAC;IACpF,CAAC;IAzBU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,iBAAiB,CA0B7B;IAAD,wBAAC;CAAA;AA1B6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACLa;AACK;AACC;AASjD;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,wCAAc,GAArB,UAAsB,KAAqB;QACzC,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC;IAEM,uCAAa,GAApB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,cAAc,CAAC,CAAC;IACnD,CAAC;IAEM,yCAAe,GAAtB,UAAuB,EAAU;QAC/B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,eAAe,GAAG,EAAE,CAAC,CAAC;IACvD,CAAC;IAEM,4CAAkB,GAAzB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,kBAAkB,CAAC,CAAC;IACvD,CAAC;IACM,wCAAc,GAArB,UAAsB,KAAqB,EAAE,EAAU;QACrD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,GAAG,EAAE,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;IACjE,CAAC;IAEM,gCAAM,GAAb,UAAc,iBAAyB,EACrC,cAAsB,EACtB,OAAe,EACf,QAAgB,EAChB,cAAsB,EACtB,UAAkB,EAClB,QAAgB;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,sBAAsB;YACnD,YAAY,GAAG,iBAAiB;YAChC,UAAU,GAAG,cAAc;YAC3B,WAAW,GAAG,OAAO;YACrB,YAAY,GAAG,QAAQ;YACvB,kBAAkB,GAAG,cAAc;YACnC,cAAc,GAAG,UAAU;YAC3B,YAAY,GAAG,QAAQ,CAAC,CAAC;IAC3B,CAAC;IAEM,wCAAc,GAArB,UAAsB,iBAAyB,EACvB,cAAsB,EACtB,OAAe,EACf,QAAgB,EAChB,cAAsB,EACtB,aAAqB,EACrB,WAAqB,EACrB,UAAoB,EACpB,UAAkB,EAClB,QAAgB;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,6BAA6B;YAC5D,YAAY,GAAG,iBAAiB;YAChC,UAAU,GAAG,cAAc;YAC3B,WAAW,GAAG,OAAO;YACrB,YAAY,GAAG,QAAQ;YACvB,kBAAkB,GAAG,cAAc;YACnC,SAAS,GAAG,aAAa;YACzB,eAAe,GAAG,WAAW;YAC7B,cAAc,GAAG,UAAU;YAC3B,cAAc,GAAG,UAAU;YAC3B,YAAY,GAAG,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAvEQ,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,eAAe,CAyE3B;IAAD,sBAAC;CAAA;AAzE2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AACK;AAUhD;IAEE,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,iDAAmB,GAA1B;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,kBAAkB,CAAC,CAAC;IAC3D,CAAC;IANU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACXS;AAGO;AACC;AAMjD;IAKE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,eAAU,GAAG,cAAc,CAAC;QAC5B,gBAAW,GAAG,eAAe,CAAC;IAGtC,CAAC;IAEM,0CAAkB,GAAzB,UAA0B,EAAU;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,UAAU,SAAI,EAAE,YAAS,CAAC,CAAC;IAClE,CAAC;IAEM,oCAAY,GAAnB,UAAoB,MAAoB,EAAE,EAAU;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,UAAU,SAAI,EAAE,YAAS,EAAE,MAAM,EAAE;YAC/D,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;YACF,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;IAEM,mDAA2B,GAAlC,UAAmC,EAAU,EAAE,IAAY,EAAE,IAAY;QACvE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,WAAW,SAAI,EAAE,sBAAiB,IAAI,cAAS,IAAM,CAAC,CAAC;IAChG,CAAC;IACM,kDAA0B,GAAjC,UAAkC,EAAU;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,gBAAgB,GAAG,EAAE,GAAG,gBAAgB,CAAC,CAAC;IACzE,CAAC;IA1BU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,+DAAU;OALzB,aAAa,CA2BzB;IAAD,oBAAC;CAAA;AA3ByB;;;;;;;;;;;;;ACV1B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './components/user/login/login.component';\nimport {RegisterComponent} from './components/user/register/register.component';\nimport {ListPropertyComponent} from './components/property/list-property/list-property.component';\nimport {CreatePropertyComponent} from './components/property/create-property/create-property.component';\nimport {ListApartmentComponent} from './components/apartment/list-apartment/list-apartment.component';\nimport {CreateApartmentComponent} from './components/apartment/create-apartment/create-apartment.component';\nimport {SearchComponent} from './components/search/search.component';\nimport {EditPropertyComponent} from './components/property/edit-property/edit-property.component';\nimport {PropertyComponent} from './components/property/property.component';\nimport {ListBookingComponent} from './components/booking/list-booking/list-booking.component';\nimport {BookingComponent} from './components/booking/booking.component';\nimport {ReviewBookingComponent} from './components/review/review-booking/review-booking.component';\nimport {ReviewCreateComponent} from './components/review/review-create/review-create.component';\nimport {BookingCreateComponent} from './components/booking/booking-create/booking-create.component';\nimport {OwnerPropertiesComponent} from './components/property/owner-properties/owner-properties.component';\nimport {GuestArrivalsComponent} from './components/booking/guest-arrivals/guest-arrivals.component';\nimport {UserComponent} from './components/user/user.component';\nimport {UserPropertiesComponent} from './components/user/user-profile/user-properties/user-properties.component';\nimport {ReviewsPropertyComponent} from './components/review/reviews-property/reviews-property.component';\nimport {UserApartmentsComponent} from './components/user/user-profile/user-properties/user-apartments/user-apartments.component';\nimport {AuthGuardService} from './services/authentication/auth-guard.service';\nimport {RoleGuardService} from './services/authentication/role-guard.service';\nimport {EditApartmentComponent} from './components/apartment/edit-apartment/edit-apartment.component';\nimport {PropertyDetailsComponent} from './components/property/property-details/property-details.component';\nimport {AdvancedSearchComponent} from './components/advanced-search/advanced-search.component';\nimport {NotfoundComponent} from './components/notfound/notfound.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'login', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'bookings', component: ListBookingComponent },\n  {path: 'booking/:id', component: BookingComponent},\n  {path: 'create-property', component: CreatePropertyComponent, canActivate: [AuthGuardService, RoleGuardService], data: {expectedRole: 'ROLE_OWNER'}},\n  {path: 'property', component: ListPropertyComponent},\n  {path: 'property/:id/apartments', component: ListApartmentComponent},\n  {path: 'property/:id/create-apartment', component: CreateApartmentComponent, canActivate: [AuthGuardService, RoleGuardService], data: {expectedRole: 'ROLE_OWNER' }},\n  {path: 'search', component: SearchComponent, canActivate: [AuthGuardService]},\n  {path: 'property-detailes/:id', component: PropertyDetailsComponent, canActivate: [AuthGuardService]},\n  {path: 'review-booking/:id', component: ReviewBookingComponent, canActivate: [AuthGuardService]},\n  {path: 'review-create/:id', component: ReviewCreateComponent, canActivate: [AuthGuardService]},\n  {path: 'booking-create/:id', component: BookingCreateComponent, canActivate: [AuthGuardService]},\n  {path: 'owner-properties', component: OwnerPropertiesComponent, canActivate: [AuthGuardService]},\n  {path: 'reviews-property/:id', component: ReviewsPropertyComponent, canActivate: [AuthGuardService]},\n  {path: 'advanced-search', component: AdvancedSearchComponent, canActivate: [AuthGuardService]},\n  {path: 'edit-property/:id', component: EditPropertyComponent, canActivate: [AuthGuardService, RoleGuardService], data: {expectedRole: 'ROLE_OWNER'}},\n  {path: 'user', component: UserComponent, canActivate: [AuthGuardService]},\n  {path: 'myproperties/:id/guest-arrivals/:filter', component: GuestArrivalsComponent, canActivate: [AuthGuardService, RoleGuardService], data: {expectedRole: 'ROLE_OWNER'}},\n  {path: 'myproperties', component: UserPropertiesComponent, canActivate: [AuthGuardService, RoleGuardService], data: {expectedRole: 'ROLE_OWNER'}},\n  {path: 'myproperty/:id/apartments', component: UserApartmentsComponent, canActivate: [AuthGuardService, RoleGuardService], data: {expectedRole: 'ROLE_OWNER'}},\n  {path: 'property/:pid/edit-apartment/:apid', component: EditApartmentComponent, canActivate: [AuthGuardService, RoleGuardService], data: {expectedRole: 'ROLE_OWNER'}},\n  {path: '**', component: NotfoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"*{\\n  box-sizing: border-box;\\n}\\nli {\\n    float: left;\\n    margin-right: 5px;\\n}\\nul {\\n    list-style-type: none;\\n}\\nnav { \\n    height: 30px;\\n}\\napp-spinner {\\n  display: contents;\\n}\\napp-footer {\\n  display: block;\\n  margin-top: 100%;\\n}\\n\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bookingliteClient';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS  } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { PropertyComponent } from './components/property/property.component';\nimport { CreatePropertyComponent } from './components/property/create-property/create-property.component';\nimport { ListPropertyComponent } from './components/property/list-property/list-property.component';\nimport { ApartmentComponent } from './components/apartment/apartment.component';\nimport { CreateApartmentComponent } from './components/apartment/create-apartment/create-apartment.component';\nimport { ListApartmentComponent } from './components/apartment/list-apartment/list-apartment.component';\nimport { BookingComponent } from './components/booking/booking.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { ListBookingComponent } from './components/booking/list-booking/list-booking.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport {JwtInterceptor} from './helpers/jwt.interceptor';\nimport { AppRoutingModule } from './/app-routing.module';\nimport {PhotoComponent} from './components/property/photo/photo.component';\nimport { PhotoListComponent } from './components/property/photo-list/photo-list.component';\nimport { UploadPhotoListComponent } from './components/property/create-property/upload-photo-list/upload-photo-list.component';\nimport { PropertyItemComponent } from './components/property/list-property/property-item/property-item.component';\nimport { PropertyService } from './services/property/property.service';\nimport { PropertyTypeService } from './services/propertyTypy/property-type.service';\nimport { ApartmentService } from './services/apartment/apartment.service';\nimport { CountryService } from './services/country/coutry.service';\nimport { CityService } from './services/city/city.service';\nimport {SearchFormComponent} from './components/search/search-form/search-form.component';\nimport { EditPropertyComponent } from './components/property/edit-property/edit-property.component';\nimport { BookingCreateComponent } from './components/booking/booking-create/booking-create.component';\nimport { GuestArrivalsComponent } from './components/booking/guest-arrivals/guest-arrivals.component';\nimport { ReviewBookingComponent } from './components/review/review-booking/review-booking.component';\nimport { ReviewCreateComponent } from './components/review/review-create/review-create.component';\nimport { OwnerPropertiesComponent } from './components/property/owner-properties/owner-properties.component';\nimport { UserNavigationComponent } from './components/user/user-navigation/user-navigation.component';\nimport { UserPropertiesComponent } from './components/user/user-profile/user-properties/user-properties.component';\nimport { UserApartmentsComponent } from './components/user/user-profile/user-properties/user-apartments/user-apartments.component';\nimport { EditApartmentComponent } from './components/apartment/edit-apartment/edit-apartment.component';\nimport { PaginationService } from './services/pagination/pagination.service';\nimport { ItemsSizeComponent } from './components/pagination/items-size/items-size.component';\nimport { PaginationComponent } from './components/pagination/pagination.component';\nimport { PhotoPopupComponent } from './components/property/photo-popup/photo-popup.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReviewsPropertyComponent } from './components/review/reviews-property/reviews-property.component';\nimport { PropertyDetailsComponent } from './components/property/property-details/property-details.component';\nimport { AdvancedSearchComponent } from './components/advanced-search/advanced-search.component';\nimport { NotfoundComponent } from './components/notfound/notfound.component';\nimport { SpinnerComponent } from './components/spinner/spinner.component';\nimport { FooterComponent } from './components/footer/footer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    LoginComponent,\n    RegisterComponent,\n    PropertyComponent,\n    CreatePropertyComponent,\n    ListPropertyComponent,\n    ApartmentComponent,\n    CreateApartmentComponent,\n    ListApartmentComponent,\n    BookingComponent,\n    SearchComponent,\n    ListBookingComponent,\n    HeaderComponent,\n    PhotoComponent,\n    PhotoListComponent,\n    UploadPhotoListComponent,\n    PropertyItemComponent,\n    SearchFormComponent,\n    EditPropertyComponent,\n    BookingCreateComponent,\n    GuestArrivalsComponent,\n    ReviewBookingComponent,\n    ReviewCreateComponent,\n    PaginationComponent,\n    ItemsSizeComponent,\n    PhotoPopupComponent,\n    OwnerPropertiesComponent,\n    UserNavigationComponent,\n    UserPropertiesComponent,\n    UserApartmentsComponent,\n    EditApartmentComponent,\n    ReviewsPropertyComponent,\n    PropertyDetailsComponent,\n    AdvancedSearchComponent,\n    NotfoundComponent,\n    SpinnerComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    NgbModule.forRoot()\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    PropertyService, CountryService, CityService, ApartmentService, PropertyTypeService, PaginationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".form-control-range{\\n  width: 40%;\\n}\\n\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-search-form (mainDataChange)='onMainDataChange($event)'></app-search-form>\\n  <div *ngIf=\\\"errorMsg\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">{{errorMsg}}</div>\\n  <div class=\\\"row\\\" style=\\\"margin-top: 5px\\\">\\n    <div class=\\\"col-md-3\\\">\\n      <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"card bg-warning\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <h3>Advance Search</h3>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"formControlRange\\\">Maximal Price: {{selectedPrice}}</label>\\n                    <input type=\\\"range\\\" class=\\\"form-control-range\\\" id=\\\"formControlRange\\\" min=\\\"0\\\" max=\\\"9999\\\" step=\\\"1\\\"\\n                           [(ngModel)]=\\\"selectedPrice\\\" name=\\\"priceInput\\\">\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                    <h5>Facilities</h5>\\n                    <div class=\\\"custom-control custom-checkbox\\\"\\n                         *ngFor=\\\"let facility of facilities\\\">\\n                      <input [checked]=\\\"selectedFasilityIds.includes(facility.id.toString())\\\"\\n                             (click)=\\\"onFacilitySelect(facility.id)\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\n                             id=\\\"customCheck{{facility.id}}\\\">\\n                      <label class=\\\"custom-control-label\\\"\\n                             for=\\\"customCheck{{facility.id}}\\\">{{facility.name}}</label>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                    <h5>Amenities</h5>\\n                    <div class=\\\"custom-control custom-checkbox\\\"\\n                         *ngFor=\\\"let am of amenities\\\">\\n                      <input [checked]=\\\"selectedAmenityIds.includes(am.id.toString())\\\" (click)=\\\"onAmenitySelect(am.id)\\\"\\n                             type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck2{{am.id}}\\\">\\n                      <label class=\\\"custom-control-label\\\"\\n                             for=\\\"customCheck2{{am.id}}\\\">{{am.name}}</label>\\n                    </div>\\n                  </div>\\n                  <hr>\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onApply()\\\">Apply</button>\\n                  <div class=\\\"pb-3\\\"></div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-9\\\">\\n\\n      <app-list-property [propertyList]=\\\"propertyList\\\"></app-list-property>\\n      <div *ngIf=\\\"totalElements == 0 \\\">\\n        <h3>In this city we not find such properties. </h3>\\n      </div>\\n\\n      <div class=\\\"row\\\" *ngIf=\\\"totalElements !=0\\\">\\n        <ul class=\\\"pagination\\\" style=\\\"margin-left: 25%\\\">\\n          <app-pagination\\n            [currentPage]=\\\"currentPage\\\"\\n            [totalPages]=\\\"totalPages\\\"\\n            [pagesToPagination]=\\\"pagesToPagination\\\"\\n            (goFirst)=\\\"onFirst($event)\\\"\\n            (goPrev)=\\\"onPrev()\\\"\\n            (goNext)=\\\"onNext()\\\"\\n            (goLast)=\\\"onLast($event)\\\"\\n            (goPage)=\\\"goToPage($event)\\\">\\n          </app-pagination>\\n        </ul>\\n      </div>\\n    </div>\\n    <app-spinner *ngIf=\\\"isLoading\\\"></app-spinner>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Property} from '../../models/property';\nimport {Facility} from '../../models/facility';\nimport {Amenity} from '../../models/amenity';\nimport {PropertyService} from '../../services/property/property.service';\nimport {ApartmentService} from '../../services/apartment/apartment.service';\nimport {CountryService} from '../../services/country/coutry.service';\nimport {CityService} from '../../services/city/city.service';\nimport {FacilityService} from '../../services/facility/facility.service';\nimport {PaginationService} from '../../services/pagination/pagination.service';\n\n@Component({\n  selector: 'app-advanced-search',\n  templateUrl: './advanced-search.component.html',\n  styleUrls: ['./advanced-search.component.css']\n})\nexport class AdvancedSearchComponent implements OnInit {\n  public NOT_SELECT_DATA_MESSAGE = 'Please, select country, city, checkin, checkout and number of guests';\n  public isLoading = false;\n  errorMsg: string;\n  propertyList: Property[];\n  public facilities: Facility[];\n  public amenities: Amenity[];\n  private DEFAULT_PRICE = 9999;\n  public selectedPrice = this.DEFAULT_PRICE;\n  public selectedCountryId: number;\n  public selectedCityId: number;\n  public checkIn: string;\n  public checkOut: string;\n  public selectedNumberOfGuests: number;\n  public selectedFasilityIds: string[] = [];\n  public selectedAmenityIds: string[] = [];\n\n  public currentPage: number;\n  public selectedItemsSize: number = 5;\n  public pagesToPagination: number [];\n  public totalPages: number;\n  public totalElements: number;\n\n  constructor(private propertyService: PropertyService,\n              private apartmentService: ApartmentService,\n              private route: ActivatedRoute,\n              private countryService: CountryService,\n              private cityService: CityService,\n              private facilityService: FacilityService,\n              private router: Router,\n              private paginationService: PaginationService) {\n  }\n\n  public ngOnInit() {\n    this.currentPage = 1;\n    this.readMainData();\n    this.readAdvancedData();\n    if (this.selectedCountryId && this.selectedCityId && this.checkIn && this.checkOut && this.selectedNumberOfGuests) {\n      if ((this.selectedFasilityIds.length !== 0) || (this.selectedAmenityIds.length !== 0) || this.selectedPrice !== this.DEFAULT_PRICE) {\n        this.advancedSearch();\n      } else {\n        this.mainSearch();\n      }\n    } else {\n      this.errorMsg = this.NOT_SELECT_DATA_MESSAGE;\n    }\n    this.getFacilities();\n    this.getAmenities();\n  }\n\n  public readMainData() {\n    if (this.route.snapshot.queryParamMap.has('country')) {\n      this.selectedCountryId = Number.parseInt(this.route.snapshot.queryParamMap.get('country'));\n      if (this.route.snapshot.queryParamMap.has('city')) {\n        this.selectedCityId = Number.parseInt(this.route.snapshot.queryParamMap.get('city'));\n      }\n    }\n    if (this.route.snapshot.queryParamMap.has('checkin')) {\n      this.checkIn = this.route.snapshot.queryParamMap.get('checkin');\n    }\n    if (this.route.snapshot.queryParamMap.has('checkout')) {\n      this.checkOut = this.route.snapshot.queryParamMap.get('checkout');\n    }\n    if (this.route.snapshot.queryParamMap.has('num_of_guests')) {\n      this.selectedNumberOfGuests = Number.parseInt(this.route.snapshot.queryParamMap.get('num_of_guests'));\n    }\n  }\n\n  public readAdvancedData() {\n    if (this.route.snapshot.queryParamMap.has('facilities')\n      && (this.route.snapshot.queryParamMap.get('facilities').length !== 0)) {\n      this.selectedFasilityIds = this.route.snapshot.queryParamMap.get('facilities').split(',');\n    }\n    if (this.route.snapshot.queryParamMap.has('amenities')\n      && (this.route.snapshot.queryParamMap.get('amenities').length !== 0)) {\n      this.selectedAmenityIds = this.route.snapshot.queryParamMap.get('amenities').split(',');\n    }\n    if (this.route.snapshot.queryParamMap.has('price')\n      && (this.route.snapshot.queryParamMap.get('price').length !== 0)) {\n      this.selectedPrice = Number.parseInt(this.route.snapshot.queryParamMap.get('price'));\n    }\n  }\n\n  public getFacilities() {\n    this.facilityService.getAllFacilities().subscribe(facility => {\n      this.facilities = facility;\n    });\n  }\n\n  public getAmenities() {\n    this.apartmentService.getAmenities().subscribe(amenity => {\n      this.amenities = amenity;\n    });\n  }\n\n  public onMainDataChange(newMainData) {\n    this.resetData();\n    this.selectedCountryId = newMainData.country;\n    this.selectedCityId = newMainData.city;\n    this.checkIn = newMainData.checkin;\n    this.checkOut = newMainData.checkout;\n    this.selectedNumberOfGuests = newMainData.num_of_guests;\n    this.mainSearch();\n  }\n\n  public resetData() {\n    this.errorMsg = null;\n    this.propertyList = undefined;\n    this.selectedCountryId = undefined;\n    this.selectedCityId = undefined;\n    this.checkIn = undefined;\n    this.checkOut = undefined;\n    this.selectedNumberOfGuests = undefined;\n    this.selectedFasilityIds = [];\n    this.selectedAmenityIds = [];\n  }\n\n  public onFacilitySelect(id: number) {\n    const index = this.selectedFasilityIds.indexOf(id.toString());\n    if (index !== -1) {\n      this.selectedFasilityIds.splice(index, 1);\n      return;\n    }\n    this.selectedFasilityIds.push(id.toString());\n  }\n\n  public onAmenitySelect(id: number) {\n    const index = this.selectedAmenityIds.indexOf(id.toString());\n    if (index !== -1) {\n      this.selectedAmenityIds.splice(index, 1);\n      return;\n    }\n    this.selectedAmenityIds.push(id.toString());\n  }\n\n  public onApply() {\n    let facilitiesValue;\n    if (this.selectedFasilityIds.length > 0) {\n      facilitiesValue = this.selectedFasilityIds.join(',');\n    }\n    let amenitiesValue;\n    if (this.selectedAmenityIds.length > 0) {\n      amenitiesValue = this.selectedAmenityIds.join(',');\n    }\n    this.router.navigate(['/advanced-search'], {\n      queryParams: {\n        country: this.selectedCountryId,\n        city: this.selectedCityId,\n        checkin: this.checkIn,\n        checkout: this.checkOut,\n        num_of_guests: this.selectedNumberOfGuests,\n        price: this.selectedPrice,\n        facilities: facilitiesValue,\n        amenities: amenitiesValue\n      }\n    });\n    this.advancedSearch();\n  }\n\n  public mainSearch() {\n    this.isLoading = true;\n    this.propertyService.search(this.selectedCountryId, this.selectedCityId, this.checkIn, this.checkOut,\n      this.selectedNumberOfGuests, this.currentPage - 1, this.selectedItemsSize)\n      .subscribe(data => {\n          this.propertyList = data['content'];\n          this.totalPages = data['totalPages'];\n          this.totalElements = data['totalElements'];\n          this.pagesToPagination = this.paginationService.calculatePages(this.currentPage, this.totalPages);\n          this.isLoading = false;\n        }, error => this.isLoading = false\n      );\n  }\n\n  public advancedSearch() {\n    this.isLoading = true;\n    this.propertyService.advancedSearch(\n      this.selectedCountryId,\n      this.selectedCityId,\n      this.checkIn,\n      this.checkOut,\n      this.selectedNumberOfGuests,\n      this.selectedPrice,\n      this.selectedFasilityIds,\n      this.selectedAmenityIds,\n      this.currentPage - 1,\n      this.selectedItemsSize).subscribe(data => {\n        this.propertyList = data['content'];\n        this.totalPages = data['totalPages'];\n        this.totalElements = data['totalElements'];\n        this.pagesToPagination = this.paginationService.calculatePages(this.currentPage, this.totalPages);\n        this.isLoading = false;\n      }, error => this.isLoading = false\n    );\n  }\n\n  goToPage(n: number): void {\n    this.currentPage = n;\n    if (this.selectedFasilityIds.length == 0 && this.selectedAmenityIds.length == 0) {\n      this.mainSearch();\n    }\n    else this.advancedSearch();\n  }\n\n  onFirst(n: number): void {\n    this.currentPage = n;\n    if (this.selectedFasilityIds.length == 0 && this.selectedAmenityIds.length == 0) {\n      this.mainSearch();\n    }\n    else this.advancedSearch();\n  }\n\n  onPrev(): void {\n    this.currentPage--;\n    if (this.selectedFasilityIds.length == 0 && this.selectedAmenityIds.length == 0) {\n      this.mainSearch();\n    }\n    else this.advancedSearch();\n  }\n\n  onNext(): void {\n    this.currentPage++;\n    if (this.selectedFasilityIds.length == 0 && this.selectedAmenityIds.length == 0) {\n      this.mainSearch();\n    }\n    else this.advancedSearch();\n  }\n\n  onLast(n: number): void {\n    this.currentPage = n;\n    if (this.selectedFasilityIds.length == 0 && this.selectedAmenityIds.length == 0) {\n      this.mainSearch();\n    }\n    else this.advancedSearch();\n  }\n\n}\n","module.exports = \"\\n\"","module.exports = \"<p>\\n  apartment works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apartment',\n  templateUrl: './apartment.component.html',\n  styleUrls: ['./apartment.component.css']\n})\nexport class ApartmentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"input {\\n  width: 20%;\\n}\\n#inner-box{\\n  margin-top: -250px;\\n}\\n.main-box{\\n\\n}\\n.display-4{\\n  text-align: center;\\n}\\n.card{\\n  width: 850px;\\n  height: 420px;\\n}\\n.form-control{\\n  width: 350px;\\n  height: 50px;\\n}\\nlabel{\\n  font-size: 19px;\\n}\\n#amen-box {\\n margin-top: 20px;\\n}\\n\\n\"","module.exports = \"<div id=\\\"menucard\\\" class=\\\"main-box\\\">\\n  <div class=\\\"box\\\" id=\\\"inner-box\\\">\\n    <div class=\\\"card\\\" id=\\\"card-id\\\">\\n      <article class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title mb-2 mt-1\\\">Create Apartment</h4>\\n\\n        <form #createApartmentForm=ngForm (ngSubmit)=\\\"createApartment(createApartmentForm)\\\"\\n              [ngClass]=\\\"{'was-validated' : !formValid}\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n\\n              <div class=\\\"form-group\\\">\\n                <label>Apartment Name</label>\\n                <input name=\\\"name\\\" #name=\\\"ngModel\\\" required [(ngModel)]=\\\"createdApartment.name\\\" class=\\\"form-control\\\"\\n                       maxlength=\\\"32\\\"\\n                       placeholder=\\\"Apartment Name\\\" type=\\\"text\\\">\\n                <div class=\\\"invalid-feedback\\\">Apartment Name is required!</div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label>Price</label>\\n                <input class=\\\"form-control\\\" name=\\\"price\\\" [(ngModel)]=\\\"createdApartment.price\\\"\\n                       placeholder=\\\"Price\\\" type=\\\"text\\\" required pattern=\\\"^\\\\d{0,8}(\\\\.\\\\d{1,4})?$\\\">\\n                <div class=\\\"invalid-feedback\\\">Price only number format, and (between 1 and 99999999)</div>\\n              </div>\\n\\n\\n              <div class=\\\"form-group\\\">\\n                <label>Number of guests  (between 1 and 8):</label>\\n                    <input class=\\\"form-control\\\" name=\\\"numberOfGuests\\\" #name=\\\"ngModel\\\"\\n                           [(ngModel)]=\\\"createdApartment.numberOfGuests\\\"\\n                       placeholder=\\\"Number of guests\\\" type=\\\"text\\\" required pattern=\\\"[1-8]\\\">\\n                <div class=\\\"invalid-feedback\\\">Number have be number type and (between 1 and 8)!</div>\\n              </div>\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Apartment Type</label>\\n              <select class=\\\"form-control\\\" #selectApartmentType\\n                      (change)=\\\"changeApartmentType(selectApartmentType.value)\\\">\\n                <option *ngFor=\\\"let ap of apartmentTypes\\\" value=\\\"{{ap.id}}\\\">{{ap.name}}\\n                </option>\\n              </select>\\n\\n              <div class=\\\"form-group\\\" id=\\\"amen-box\\\">\\n                <label>Amenities</label>\\n                <div class=\\\"custom-control custom-checkbox\\\"\\n                     *ngFor=\\\"let am of amenities\\\">\\n                  <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck{{am.id}}\\\"\\n                         (change)=\\\"workWithCheckboxes(am.id)\\\">\\n                  <label class=\\\"custom-control-label\\\"\\n                         for=\\\"customCheck{{am.id}}\\\">{{am.name}}</label>\\n                </div>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <ng-container *ngIf=\\\"errorMessage !== ''\\\">\\n            <div class=\\\"alert alert-danger\\\">\\n              {{errorMessage}}\\n            </div>\\n          </ng-container>\\n          <div class=\\\"form-group\\\" id=\\\"btn\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Create</button>\\n          </div>\\n        </form>\\n      </article>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ApartmentType} from '../../../models/apartment-type';\nimport {Amenity} from '../../../models/amenity';\nimport {ApartmentService} from '../../../services/apartment/apartment.service';\nimport {AuthService} from '../../../services/authentication/auth.service';\nimport {CreateApartment} from '../../../models/create-apartment';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-create-apartment',\n  templateUrl: './create-apartment.component.html',\n  styleUrls: ['./create-apartment.component.css']\n})\nexport class CreateApartmentComponent implements OnInit {\n\n  private authenticated;\n  apartmentTypes: ApartmentType[];\n  amenities: Amenity[];\n  createdApartment: CreateApartment;\n  public selectedTypeId: number;\n  formValid = true;\n  errorMessage = '';\n\n  constructor(private auth: AuthService,\n              private apartmentService: ApartmentService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.authenticated = this.auth.isAuthenticated;\n    this.getApartmentTypes();\n    this.getAmenities();\n    this.createdApartment = new CreateApartment();\n    this.createdApartment.amenitiesId = [];\n  }\n  getApartmentTypes() {\n    this.apartmentService.getApartmentType().subscribe((apType) => {\n      this.apartmentTypes = apType;\n      this.selectedTypeId = this.apartmentTypes[0].id;\n    });\n  }\n  changeApartmentType(id: number) {\n    this.selectedTypeId = id;\n  }\n  public getAmenities() {\n    this.apartmentService.getAmenities().subscribe(amenity => {\n      this.amenities = amenity;\n    });\n  }\n  public createApartment(createApartmentForm: FormGroup) {\n    if (createApartmentForm.valid) {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.createdApartment.apartmentTypeId = this.selectedTypeId;\n    this.apartmentService.createApartment(this.createdApartment, id).subscribe(res => {\n      this.onSubmit();\n      }, error => {\n      this.errorMessage = JSON.parse(error.error).message;\n    });\n    } else {\n      this.formValid = false;\n    }\n  }\n  public workWithCheckboxes(id: number) {\n    const index = this.createdApartment.amenitiesId.indexOf(id);\n    if (index !== -1) {\n      this.createdApartment.amenitiesId.splice(index, 1);\n      return;\n    }\n    this.createdApartment.amenitiesId.push(id);\n  }\n  onSubmit() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.router.navigate(['/myproperty/' + id + '/apartments']);\n  }\n}\n","module.exports = \".edit-box{\\n  width: 65%;\\n  margin: 0 auto ;\\n  padding-bottom: 25px;\\n}\\n\"","module.exports = \"<div class=\\\"edit-box\\\">\\n  <div class=\\\"box\\\">\\n    <h1 class=\\\"display-8\\\">BookingLite</h1>\\n    <div class=\\\"card\\\">\\n      <article class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title mb-4 mt-1\\\">Edit Apartment</h4>\\n\\n        <form #createApartmentForm=ngForm (ngSubmit)=updateApartment(createApartmentForm)\\n              [ngClass]=\\\"{'was-validated' : !formValid}\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"apartment\\\">\\n              <label>Apartment Name</label>\\n              <input class=\\\"form-control\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" required name=\\\"name\\\"\\n                     placeholder=\\\"Name\\\" [(ngModel)]=\\\"apartment.name\\\">\\n              <div class=\\\"invalid-feedback\\\">Apartment Name is required!</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"apartment\\\">\\n              <label>Price</label>\\n              <input class=\\\"form-control\\\" name=\\\"price\\\" [(ngModel)]=\\\"apartment.price\\\"\\n                     placeholder=\\\"Price\\\" type=\\\"text\\\" required pattern=\\\"^\\\\d{0,8}(\\\\.\\\\d{1,4})?$\\\">\\n              <div class=\\\"invalid-feedback\\\">Price only number format, and (between 1 and 99999999)</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"apartment\\\">\\n              <label>Number of guests  (between 1 and 8):</label>\\n              <input class=\\\"form-control\\\" name=\\\"numberOfGuests\\\"\\n                     [(ngModel)]=\\\"apartment.numberOfGuests\\\"\\n                     placeholder=\\\"Number of guests\\\" type=\\\"text\\\" required pattern=\\\"[1-8]\\\">\\n              <div class=\\\"invalid-feedback\\\">Number have be number type and (between 1 and 8)!</div>\\n            </div>\\n\\n\\n\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n\\n              <label>Apartment Type</label>\\n              <select class=\\\"form-control\\\" #selectApartmentType\\n                      (change)=\\\"changeApartmentTypes(selectApartmentType.value)\\\">\\n                <option *ngFor=\\\"let ap of apartmentTypes\\\" value=\\\"{{ap.id}}\\\">{{ap.name}}\\n                </option>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"amenities && apartment\\\">\\n              <label>Amenities</label>\\n              <div class=\\\"custom-control custom-checkbox\\\"\\n                   *ngFor=\\\"let amenity of amenities\\\">\\n                <input  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck{{amenity.id}}\\\"\\n                        (change)=workWithCheckboxes(amenity.id)>\\n                <label class=\\\"custom-control-label\\\"\\n                       for=\\\"customCheck{{amenity.id}}\\\">{{amenity.name}}</label>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Add Change\\n            </button>\\n          </div>\\n\\n        </form>\\n      </article>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Apartment} from '../../../models/apartment';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ApartmentService} from '../../../services/apartment/apartment.service';\nimport {ApartmentType} from '../../../models/apartment-type';\nimport {Amenity} from '../../../models/amenity';\nimport {CreateApartment} from '../../../models/create-apartment';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-apartment',\n  templateUrl: './edit-apartment.component.html',\n  styleUrls: ['./edit-apartment.component.css']\n})\nexport class EditApartmentComponent implements OnInit {\n\n  formValid = true;\n  errorMessage = '';\n  apartment: Apartment;\n  apartmentTypes: ApartmentType[];\n  amenities: Amenity[];\n  apartmentUpdate: CreateApartment;\n  public selectApartmentType: number;\n\n  constructor(private route: ActivatedRoute,\n              private apartmentService: ApartmentService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.apartmentUpdate = new CreateApartment();\n    this.getApartmentById();\n    this.getAmenities();\n    this.getApartmentTypes();\n    this.apartmentUpdate.amenitiesId = [];\n  }\n\n  public getApartmentById(): Apartment {\n    const apId = +this.route.snapshot.paramMap.get('apid');\n    const pId = +this.route.snapshot.paramMap.get('pid');\n    this.apartmentService.getApartmentById(2, apId).subscribe(res => this.apartment = res);\n    return this.apartment;\n  }\n\n  public getApartmentTypes() {\n    this.apartmentService.getApartmentType().subscribe(res => {\n      this.apartmentTypes = res;\n    });\n  }\n  changeApartmentTypes(id: number) {\n    this.selectApartmentType = id;\n  }\n  public getAmenities() {\n    this.apartmentService.getAmenities().subscribe(res => {\n      this.amenities = res;\n    });\n  }\n  public workWithCheckboxes(id: number) {\n    const index = this.apartmentUpdate.amenitiesId.indexOf(id);\n    if (index !== -1) {\n      this.apartmentUpdate.amenitiesId.splice(index, 1);\n      return;\n    }\n    this.apartmentUpdate.amenitiesId.push(id);\n  }\n  public updateApartment(createApartmentForm: FormGroup) {\n    if (createApartmentForm.valid) {\n      const id = +this.route.snapshot.paramMap.get('apid');\n      this.apartmentUpdate.name = this.apartment.name;\n      this.apartmentUpdate.price = this.apartment.price;\n      this.apartmentUpdate.numberOfGuests = this.apartment.numberOfGuests;\n      this.apartmentUpdate.apartmentTypeId = this.selectApartmentType;\n      this.apartmentService.updateApartment(this.apartmentUpdate, id).subscribe(res => {\n      this.onSubmit();\n      }, error => {\n        this.errorMessage = JSON.parse(error.error).message;\n      });\n    } else {\n      this.formValid = false;\n    }\n  }\n  onSubmit() {\n    const id = +this.route.snapshot.paramMap.get('pid');\n    this.router.navigate(['/myproperty/' + id + '/apartments']);\n  }\n}\n","module.exports = \"table {\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n}\\n\\ntd, th {\\n  border: 1px solid #dddddd;\\n  text-align: left;\\n  padding: 8px;\\n}\\n\\nth {\\n  background-color: #fffe82;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <table>\\n    <tr>\\n      <th>Name</th>\\n      <th>Apartment Type</th>\\n      <th>Amenities</th>\\n      <th>Price</th>\\n      <th>Reserve</th>\\n    </tr>\\n    <tr *ngFor=\\\"let apartment of aprtmentsList\\\" >\\n      <td>{{apartment.name}}</td>\\n      <td>{{apartment.apartmentType.name}}</td>\\n      <td><p *ngFor=\\\"let am of apartment.amenities\\\">{{am.name}}</p></td>\\n      <td>{{apartment.price}}</td>\\n      <td>\\n        <button type=\\\"button\\\" routerLink=\\\"/booking-create/{{apartment.id}}\\\" [queryParams]=\\\"queryParams\\\"\\n                   class=\\\"btn btn-primary\\\">Reserve Apartment</button>\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {AuthService} from '../../../services/authentication/auth.service';\nimport {ApartmentService} from '../../../services/apartment/apartment.service';\nimport {Apartment} from '../../../models/apartment';\nimport {ActivatedRoute} from '@angular/router';\nimport {PropertyService} from '../../../services/property/property.service';\nimport {Property} from '../../../models/property';\n\n@Component ({\n  selector: 'app-list-apartment',\n  templateUrl: './list-apartment.component.html',\n  styleUrls: ['./list-apartment.component.css']\n})\nexport class ListApartmentComponent implements OnInit {\n\n  private authenticated;\n  aprtmentsList: Apartment[];\n  @Input() property: Property;\n  public queryParams = {\n    checkin: '',\n    checkout: '',\n    num_of_guests: ''\n  }\n  constructor(private apartmentService: ApartmentService,\n              private propertyService: PropertyService,\n              private auth: AuthService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.authenticated = this.auth.isAuthenticated;\n    this.getApartmentsByPropertyId();\n    this.queryParams.checkin = this.route.snapshot.queryParamMap.get('checkin');\n    this.queryParams.checkout = this.route.snapshot.queryParamMap.get('checkout');\n    this.queryParams.num_of_guests = this.route.snapshot.queryParamMap.get('num_of_guests');\n  }\n\n  public getApartmentsByPropertyId() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.propertyService.getPropertyById(id).subscribe(pr => this.property = pr);\n    this.apartmentService.getAllApartments(id).subscribe(ap => {\n      this.aprtmentsList = ap;\n    });\n  }\n\n}\n","module.exports = \"\\n.display-4 {\\n  text-align: center;\\n}\\n\\n.card {\\n  width: 850px;\\n  height: 680px;\\n}\\n\\n.form-control {\\n  width: 350px;\\n  height: 50px;\\n  margin-left: 20px;\\n}\\n\\n.card {\\n  margin-top: 10px;\\n}\\n\\ndiv#menucard{\\n  padding: 30px;\\n  margin-top: 10px;\\n  height: auto;\\n}\\n\\nbutton{\\n  margin-left: 73%;\\n}\\n\\nlabel.createBooking{\\n  margin-left: 32px;\\n}\\n\"","module.exports = \"<div id=\\\"menucard\\\">\\n  <div class=\\\"box\\\">\\n    <div class=\\\"card\\\">\\n      <article class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title mb-4 mt-1\\\">My Booking : </h4>\\n        <div *ngIf=\\\"apartment\\\">\\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"createBooking\\\">Property Name : </label>\\n              <div class=\\\"col-sm-5\\\">\\n                <textarea class=\\\"form-control\\\" readonly>{{apartment.propertyDto.name}}</textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"createBooking\\\">Contact phone number : </label>\\n              <div class=\\\"col-sm-5\\\">\\n                <textarea class=\\\"form-control\\\" readonly>{{apartment.propertyDto.phoneNumber}}</textarea>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"createBooking\\\">Total days : </label>\\n              <div class=\\\"col-sm-5\\\">\\n                <textarea class=\\\"form-control\\\"\\n                          readonly>{{calculateTotalDays(booking.checkIn,booking.checkOut)}} day(s)</textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"createBooking\\\">Total price : </label>\\n              <div class=\\\"col-sm-5\\\">\\n                <div *ngIf=\\\"calculatePriceByDates(booking.checkIn,booking.checkOut) == 0\\\">\\n                  <textarea class=\\\"form-control\\\"\\n                            readonly>{{calculatePriceByDates(booking.checkIn,booking.checkOut)}} $</textarea>\\n                </div>\\n                <div *ngIf=\\\"calculatePriceByDates(booking.checkIn,booking.checkOut) > 0\\\">\\n                  <textarea class=\\\"form-control\\\" readonly>{{calculatePriceByDates(booking.checkIn,booking.checkOut) |  number: '2.'}} $</textarea>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <form #createBookingForm=ngForm (ngSubmit)=\\\"createBooking(createBookingForm)\\\"\\n                [ngClass]=\\\"{'was-validated' : !formValid}\\\">\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"createBooking\\\">Check In : </label>\\n                <div class=\\\"col-sm-5\\\">\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"in\\\" name=\\\"checkIn\\\" min=\\\"{{today | date:'yyyy-MM-dd' }}\\\"\\n                         [(ngModel)]=\\\"booking.checkIn\\\" required=\\\"required\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"createBooking\\\">Check Out : </label>\\n                <div class=\\\"col-sm-5\\\">\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"out\\\" name=\\\"checkOut\\\"\\n                         min=\\\"{{booking.checkIn | date:'yyyy-MM-dd'}}\\\"\\n                         [(ngModel)]=\\\"booking.checkOut\\\" required=\\\"required\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"createBooking\\\">Number of guests (between 1 and 8):</label>\\n              <input name=\\\"numberOfGuests\\\" class=\\\"form-control\\\" #name=\\\"ngModel\\\" [minlength]=\\\"1\\\" [maxlength]=\\\"1\\\"\\n                     [(ngModel)]=\\\"booking.numberOfGuests\\\"\\n                     type=\\\"text\\\" required pattern=\\\"[1-8]\\\">\\n              <div class=\\\"invalid-feedback\\\">Number of guests must be a number type between 1 and 8 !!!</div>\\n            </div>\\n            <ng-container *ngIf=\\\"errorMessage !== ''\\\">\\n              <div class=\\\"alert alert-danger\\\">\\n                {{errorMessage}}\\n              </div>\\n            </ng-container>\\n            <hr>\\n            <div class=\\\"form-group row\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\">Submit booking</button>\\n            </div>\\n          </form>\\n        </div>\\n      </article>\\n    </div>\\n  </div>\\n</div>\\n<app-spinner *ngIf=\\\"isLoading\\\"></app-spinner>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BookingService} from '../../../services/booking/booking.service';\nimport {Apartment} from '../../../models/apartment';\nimport {ApartmentService} from '../../../services/apartment/apartment.service';\nimport {BookingCreate} from '../../../models/booking-create';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-booking-create',\n  templateUrl: './booking-create.component.html',\n  styleUrls: ['./booking-create.component.css']\n})\nexport class BookingCreateComponent implements OnInit {\n  booking: BookingCreate = new BookingCreate();\n  apartment: Apartment;\n  today: Date;\n  formValid = true;\n  errorMessage = '';\n  public isLoading = false;\n\n  constructor(private bookingService: BookingService,\n              private apartmentService: ApartmentService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.booking = new BookingCreate();\n    this.today = new Date();\n    this.getApartmentById();\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.booking.checkIn = params['checkin'];\n      this.booking.checkOut = params['checkout'];\n      this.booking.numberOfGuests = params['num_of_guests'];\n    });\n  }\n   onSubmit() {\n     this.router.navigate(['/bookings']);\n   }\n\n  createBooking(createBookingForm: FormGroup) {\n    this.isLoading = true;\n    const id = +this.activatedRoute.snapshot.paramMap.get('id');\n    if (createBookingForm.valid) {\n      this.bookingService.createBooking(this.booking, id).subscribe(res => {\n        alert('Your booking created successful!');\n        this.onSubmit();\n        this.isLoading = false;\n      }, error => {\n        this.isLoading = false;\n        this.errorMessage = JSON.parse(error.error).message;\n      });\n    } else {\n      this.formValid = false;\n      this.isLoading = false;\n    }\n  }\n\n  getApartmentById(): void {\n    const id = +this.activatedRoute.snapshot.paramMap.get('id');\n    this.apartmentService.getApartmentByIdApartment(id).subscribe(apart => {\n      this.apartment = apart;\n    });\n  }\n\n  calculateTotalDays(checkIn, checkOut): number {\n    if (this.bookingService.calculateNumberOfDates(checkIn, checkOut) > 0) {\n      return this.bookingService.calculateNumberOfDates(checkIn, checkOut);\n    } else { return 0; }\n  }\n\n  calculatePriceByDates(checkIn, checkOut): number {\n    if ((checkOut > checkIn) && checkOut != null && checkIn != null) {\n      return (this.apartment.price * this.bookingService.calculateNumberOfDates(checkIn, checkOut));\n    } else {\n      return 0;\n    }\n  }\n}\n","module.exports = \".image{\\n  width: 220px;\\n  height: 220px;\\n}\\n.img-responsive {\\n  width: 220px;\\n  height: 200px;\\n  position: relative ;\\n  margin-left: auto;\\n  margin-right: auto;\\n  text-align: center;\\n}\\n\"","module.exports = \"<ul *ngIf=\\\"booking\\\" style=\\\"list-style: none\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-9  card-body\\\">\\n                  <div class=\\\"list-title\\\">\\n                    <ul class=\\\"list-inline list-unstyled\\\">\\n                      <li class=\\\"list-inline-item\\\">\\n                            <h3><b>{{booking.apartmentDto.propertyDto.name}}, \\n                              {{booking.apartmentDto.name}}</b></h3>     \\n                      </li>\\n                      <li class=\\\"list-inline-item text-warning\\\"><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i\\n                        class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star-half\\\"></i></li>\\n                      <li class=\\\"list-inline-item text-success\\\"><i class=\\\"fa fa-thumbs-up\\\"></i></li>\\n                    </ul>\\n                  </div>\\n                  <div class=\\\"list-location\\\">\\n                    <h4>Price: {{booking.totalPrice}} USD</h4> \\n                    <li>\\n                    <h4>Status:\\n                      <b *ngIf=\\\"isCanceled(booking.bookingStatus.name)\\\" style=\\\"color:red\\\">{{booking.bookingStatus.name}}</b>\\n                      <b *ngIf=\\\"!isCanceled(booking.bookingStatus.name)\\\"style=\\\"color:green\\\">{{booking.bookingStatus.name}}</b>\\n                    </h4>\\n                    </li>\\n                    <h4>Dates: {{booking.checkIn | date:'dd-MM-yyyy' }} - {{booking.checkOut | date:'dd-MM-yyyy' }}</h4>          \\n                    <h4>Number of guests: {{booking.apartmentDto.numberOfGuests}}</h4>  \\n                  </div>\\n                  <div class=\\\"list-descrip\\\">  \\n                    <br>\\n                    <h5>Apartment:</h5>\\n                    <small>Actual Price: {{booking.apartmentDto.price}} USD</small>                      \\n                    <br>\\n                    <small>Amenties: \\n                    </small> \\n                    <small *ngFor= \\\"let am of booking.apartmentDto.amenities\\\">{{am.name}}; \\n                    </small>           \\n                    <br>\\n                    <small>Apartment type: {{booking.apartmentDto.apartmentType.name}}</small>                      \\n                    <br><br>\\n                    <h5>Hotel:</h5>\\n                    <small>Rating: {{booking.apartmentDto.propertyDto.rating}}</small>                      \\n                    <br>\\n                    <small>Address: {{booking.apartmentDto.propertyDto.address.addressLine}}, \\n                        {{booking.apartmentDto.propertyDto.address.city.name}},\\n                        {{booking.apartmentDto.propertyDto.address.city.country.name}}\\n                    </small>                      \\n                    <br>\\n                    <small>Phone number: {{booking.apartmentDto.propertyDto.phoneNumber}}</small>                      \\n                    <br>\\n                    <small>Email: {{booking.apartmentDto.propertyDto.contactEmail}}</small>                      \\n                    <br>\\n                    <small>Facilities: </small>\\n                    <small *ngFor= \\\"let facilitie of booking.apartmentDto.propertyDto.facilities\\\">\\n                    {{facilitie.name}}; </small>                    \\n                    <br>\\n                    <small>Descroption: {{booking.apartmentDto.propertyDto.description}}</small>                      \\n                    <br>\\n                      <div *ngIf= \\\"booking?.reviewDto\\\">\\n                        <br>\\n                        <h5>Your review:</h5>\\n                        <small>Rating: {{booking.reviewDto.rating}}</small>\\n                        <br>\\n                        <small>Message: {{booking.reviewDto.message}}</small>\\n                        <br>\\n                     </div>\\n                     <br>\\n                      \\n                  </div>\\n                </div>  \\n                  <div class=\\\"col-md-3 border-left card-body\\\">\\n                    <img *ngIf=\\\"booking.apartmentDto.propertyDto.photos[0]\\\" class=\\\"img-responsive\\\"\\n                    alt=\\\"No Photo\\\" src={{booking.apartmentDto.propertyDto.photos[0].url}}>\\n                    <br><br>\\n                    <img *ngIf=\\\"booking.apartmentDto.propertyDto.photos[1]\\\" class=\\\"img-responsive\\\"\\n                    alt=\\\"No Photo\\\" src={{booking.apartmentDto.propertyDto.photos[1].url}}>\\n                    <br><br>\\n                    <img *ngIf=\\\"booking.apartmentDto.propertyDto.photos[2]\\\" class=\\\"img-responsive\\\"\\n                    alt=\\\"No Photo\\\" src={{booking.apartmentDto.propertyDto.photos[2].url}}>\\n                    <br><br>\\n\\n                    <app-photo-popup\\n                    [booking]=\\\"booking\\\">\\n                    </app-photo-popup> <!-- add conditionng ngIf-->\\n                    <br>\\n                    </div>\\n              </div>\\n              <hr>    \\n              <div >\\n                  <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"backToBookings()\\\">Back to bookings</button>\\n                  <div *ngIf=\\\"isBookingDateActual(booking?.checkIn, booking?.checkOut) && \\n                    !isCanceled(booking?.bookingStatus?.name)\\\">\\n                    <br>\\n                    <button class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"cancelBooking()\\\">Cancel Booking</button>\\n                  </div>                      \\n              </div>          \\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n</ul>\\n<app-spinner *ngIf=\\\"isLoading\\\"></app-spinner>\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport {Booking} from '../../models/booking';\nimport {BookingService} from '../../services/booking/booking.service';\nimport { ActivatedRoute } from '../../../../node_modules/@angular/router';\nimport { Router } from \"@angular/router\";\nimport { AuthService } from '../../services/authentication/auth.service';\n\n\n\n@Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css']\n})\nexport class BookingComponent implements OnInit {\n\n  @Input() booking: Booking;\n  private bookingsUrl = '/bookings'; \n  private authenticated;\n  public isLoading = false;\n\n  constructor(private auth: AuthService,\n    private route: ActivatedRoute,\n    private bookingService: BookingService,\n    private router: Router \n) {}\n\n  ngOnInit() {\n    this.authenticated = this.auth.isAuthenticated;\n    this.getBooking();\n  }\n\n  getBooking(): void {\n    this.isLoading = true;\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.bookingService.getBooking(id)\n      .subscribe(booking => {\n        this.booking = booking;\n        this.isLoading = false;}, error => this.isLoading = false);\n  }\n\n  cancelBooking() {\n    this.isLoading = true;\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.bookingService.cancelBookings(id)\n      .subscribe(res => {\n        this.isLoading = false;\n        this.backToBookings()}, error => this.isLoading = false);\n  }\n\n  isBookingDateActual(checkIn, checkOut):boolean {\n    return this.bookingService.isBookingDateActual(checkIn, checkOut)\n  }\n\n  isCanceled(bookingStatus: string): boolean {\n    return this.bookingService.isCanceled(bookingStatus);\n  }\n\n  isReview(idReview) {\n    if (!idReview) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  backToBookings() {\n    if( localStorage.getItem('urlToButtonBackToListBookings') ){\n      let urlFromLocalStorage: string = localStorage.getItem('urlToButtonBackToListBookings');\n      this.router.navigateByUrl( urlFromLocalStorage.split('/')[3] );\n    }\n    else{\n      this.router.navigate([this.bookingsUrl]);\n    }    \n  }\n\n}\n","module.exports = \".img-responsive {\\n  width: 210px;\\n  height: 180px;\\n  position: relative ;\\n}\\n\"","module.exports = \"<app-user-navigation></app-user-navigation>\\n<br>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"text-center\\\">\\n    <ul class=\\\"pagination\\\">\\n      <li class=\\\"page-item active\\\" [ngClass]=\\\"{active: filterBookings == futureBookings}\\\">\\n        <p class=\\\"page-link\\\" (click)=\\\"filterFutureBookings()\\\">Future bookings</p>\\n      </li>\\n      <li class=\\\"page-item active\\\" [ngClass]=\\\"{active: filterBookings == actualBookings }\\\">\\n        <p class=\\\"page-link\\\" (click)=\\\"filterActualBooking()\\\">Actual bookings</p>\\n      </li>\\n      <li class=\\\"page-item active\\\" [ngClass]=\\\"{active: filterBookings == pastBookings }\\\">\\n        <p class=\\\"page-link\\\" (click)=\\\"filterPastBooking()\\\">Past bookings</p>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n<div *ngIf=\\\"totalElements == 0 \\\" class=\\\"container\\\">\\n  <h1 style=\\\"color: #07B3F9\\\">You do not have bookings !</h1>\\n</div>\\n\\n<div *ngIf=\\\"totalElements !=0 \\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"form-group row\\\" id=\\\"items-size\\\">\\n      <h2 style=\\\"margin-right: 2%; height: content-box\\\">Reviews on page:</h2>\\n      <app-items-size\\n        (sentSelectedItemsSize)=\\\"setSelectedItemsSize($event)\\\">\\n      </app-items-size>\\n      <h1 style=\\\"margin-left: 20%\\\">{{property.name}} : {{property.rating | number: '1.1'}}</h1>\\n    </div>\\n    <br><br>\\n\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Apartment name</th>\\n        <th scope=\\\"col\\\">Check In</th>\\n        <th scope=\\\"col\\\">Check out</th>\\n        <th scope=\\\"col\\\">Number of Guests</th>\\n        <th scope=\\\"col\\\">Surname and Name</th>\\n      </tr>\\n      </thead>\\n      <tbody *ngFor=\\\"let booking of guestArrivalsList\\\">\\n      <tr>\\n        <th>{{booking.apartmentDto.name}}</th>\\n        <td>{{booking.checkIn | date:'dd-MM-yyyy'}}</td>\\n        <td>{{booking.checkOut | date:'dd-MM-yyyy'}}</td>\\n        <td>{{booking.apartmentDto.numberOfGuests}}</td>\\n        <td>{{booking.userDto.lastName}} {{booking.userDto.firstName}}</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n    <app-pagination\\n      [currentPage]=\\\"currentPage\\\"\\n      [totalPages]=\\\"totalPages\\\"\\n      [pagesToPagination]=\\\"pagesToPagination\\\"\\n      (goFirst)=\\\"onFirst($event)\\\"\\n      (goPrev)=\\\"onPrev()\\\"\\n      (goNext)=\\\"onNext()\\\"\\n      (goLast)=\\\"onLast($event)\\\"\\n      (goPage)=\\\"goToPage($event)\\\">\\n    </app-pagination>\\n\\n  </div>\\n\\n  <div *ngIf=\\\"totalElements == 0 \\\">\\n    <h3>You do not have any bookings !</h3>\\n  </div>\\n</div>\\n<app-spinner *ngIf=\\\"isLoading\\\"></app-spinner>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Booking} from '../../../models/booking';\nimport {BookingService} from '../../../services/booking/booking.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {PaginationService} from '../../../services/pagination/pagination.service';\nimport {PropertyService} from '../../../services/property/property.service';\nimport {Property} from '../../../models/property';\n\n@Component({\n  selector: 'app-guest-arrivals',\n  templateUrl: './guest-arrivals.component.html',\n  styleUrls: ['./guest-arrivals.component.css']\n})\nexport class GuestArrivalsComponent implements OnInit {\n  guestArrivalsList: Booking[];\n  currentPage = 1;\n  selectedItemsSize = 5;\n  pagesToPagination: number [];\n  totalPages: number;\n  totalElements: number;\n  filterBookings: string;\n  futureBookings = 'futureBookings';\n  actualBookings = 'actualBookings';\n  pastBookings = 'pastBookings';\n  public isLoading = false;\n  property: Property;\n\n  constructor(private bookingService: BookingService,\n              private route: ActivatedRoute,\n              private paginationService: PaginationService,\n              private propertyService: PropertyService) {\n  }\n\n  ngOnInit() {\n    if (window.location.href.split('/')[5] === this.actualBookings) {\n      this.filterBookings = this.actualBookings;\n    } else if (window.location.href.split('/')[5] === this.pastBookings) {\n      this.filterBookings = this.pastBookings;\n    } else {\n      this.filterBookings = this.futureBookings;\n    }\n    this.getBookingsByPage();\n    this.getProperty();\n  }\n\n  getBookingsByPage(): void {\n    this.isLoading = true;\n    const id = +this.route.snapshot.paramMap.get('id');\n    if (this.selectedItemsSize) {\n      this.bookingService.getPageGuestArrivalsList(id, this.currentPage - 1, this.selectedItemsSize,\n        this.filterBookings).subscribe(data => {\n        this.guestArrivalsList = data['content'];\n        this.totalPages = data['totalPages'];\n        this.totalElements = data['totalElements'];\n        this.pagesToPagination = this.paginationService.calculatePages(this.currentPage, this.totalPages);\n        this.isLoading = false;\n      });\n    }\n  }\n\n  setSelectedItemsSize(n: number): void {\n    this.selectedItemsSize = n;\n    this.currentPage = 1;\n    this.getBookingsByPage();\n  }\n\n  goToPage(n: number): void {\n    this.currentPage = n;\n    this.getBookingsByPage();\n  }\n\n  onFirst(n: number): void {\n    this.currentPage = n;\n    this.getBookingsByPage();\n  }\n\n  onPrev(): void {\n    this.currentPage--;\n    this.getBookingsByPage();\n  }\n\n  onNext(): void {\n    this.currentPage++;\n    this.getBookingsByPage();\n  }\n\n  onLast(n: number): void {\n    this.currentPage = n;\n    this.getBookingsByPage();\n  }\n\n  filterFutureBookings() {\n    const newUrl: string = window.location.protocol + '//' + window.location.host + '/'\n      + window.location.pathname.split('/')[1] + '/'\n      + window.location.pathname.split('/')[2] + '/'\n      + window.location.pathname.split('/')[3] + '/'\n      + this.futureBookings;\n    if (window.location.href !== newUrl) {\n      history.pushState(null, null, newUrl);\n      if (this.filterBookings !== this.futureBookings) {\n        this.currentPage = 1;\n      }\n      this.filterBookings = this.futureBookings;\n      this.getBookingsByPage();\n    }\n  }\n\n  filterActualBooking() {\n    const newUrl: string = window.location.protocol + '//' + window.location.host + '/'\n      + window.location.pathname.split('/')[1] + '/'\n      + window.location.pathname.split('/')[2] + '/'\n      + window.location.pathname.split('/')[3] + '/'\n      + this.actualBookings;\n    if (window.location.href !== newUrl) {\n      history.pushState(null, null, newUrl);\n      if (this.filterBookings !== this.actualBookings) {\n        this.currentPage = 1;\n      }\n      this.filterBookings = this.actualBookings;\n      this.getBookingsByPage();\n    }\n  }\n\n  filterPastBooking() {\n    const newUrl: string = window.location.protocol + '//' + window.location.host + '/'\n      + window.location.pathname.split('/')[1] + '/'\n      + window.location.pathname.split('/')[2] + '/'\n      + window.location.pathname.split('/')[3] + '/'\n      + this.pastBookings;\n    if (window.location.href !== newUrl) {\n      history.pushState(null, null, newUrl);\n      if (this.filterBookings !== this.pastBookings) {\n        this.currentPage = 1;\n      }\n      this.filterBookings = this.pastBookings;\n      this.getBookingsByPage();\n    }\n  }\n  getProperty(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.propertyService.getPropertyById(id).subscribe(pr => this.property = pr);\n  }\n}\n","module.exports = \".img-responsive {\\n    width: 210px;\\n    height: 180x;\\n    position: relative ;\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n      <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"card bg-warning\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-md-12\\\">\\n                  <h3>Bookings Filter</h3>                \\n\\n                  <div class=\\\"form-group\\\">\\n                    <h5>Booking on page</h5>\\n                    <app-items-size (sentSelectedItemsSize)=\\\"setSelectedItemsSize($event)\\\">\\n                    </app-items-size>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                    <h5>Filter by dates</h5>\\n                    <div>\\n                      <ul style=\\\"padding:0; list-style-type: none\\\"> \\n                        <li class=\\\"page-item active\\\" [ngClass]=\\\"{active: filterBookingsByDates == allBookingsString }\\\">\\n                            <p class=\\\"page-link\\\"  (click)=\\\"filterAllBookings()\\\">All bookings</p>\\n                        </li>\\n                        <li class=\\\"page-item active\\\" [ngClass]=\\\"{active: filterBookingsByDates == actualBookingsString }\\\">\\n                            <p class=\\\"page-link\\\"  (click)=\\\"fiterActualBookings()\\\">Actual bookings</p>\\n                        </li>\\n                        <li class=\\\"page-item active\\\" [ngClass]=\\\"{active: filterBookingsByDates == archieveBookingsString }\\\">\\n                            <p class=\\\"page-link\\\"  (click)=\\\"filterArchieveBookings()\\\">Archieve bookings</p>\\n                        </li>\\n                      </ul>\\n                    </div>\\n                  </div>\\n                 </div>             \\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-9\\\">  \\n    <div *ngIf=\\\"totalElements !=0 \\\">\\n      <ul style=\\\"list-style: none\\\">\\n        <li *ngFor=\\\"let booking of bookings\\\">\\n          <div class=\\\"row mb-3\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"card\\\" style=\\\"max-height: 300px\\\">\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-md-3\\\">\\n                      <img *ngIf=\\\"booking.apartmentDto.propertyDto.photos.length > 0\\\" class=\\\"img-responsive\\\" \\n                      src={{booking.apartmentDto.propertyDto.photos[0].url}}\\n                           alt=\\\"{{booking.apartmentDto.propertyDto.name}}\\\">\\n                      <img *ngIf=\\\"booking.apartmentDto.propertyDto.photos.length === 0\\\" class=\\\"img-responsive\\\" \\n                      src=\\\"assets/image/Capture.PNG\\\" alt=\\\"{{booking.apartmentDto.propertyDto.name}}\\\">\\n                    </div>    \\n      \\n                    <div class=\\\"col-md-6  card-body\\\" style=\\\"margin-left: 10%; width: 300px\\\">\\n                      <div class=\\\"list-title\\\">\\n                        <ul class=\\\"list-inline list-unstyled\\\">\\n                          <li class=\\\"list-inline-item\\\">\\n                            <a routerLink=\\\"/booking/{{booking.bookingId}}\\\">\\n                                <h4  (click)=\\\"setUlrToLocalStorage()\\\">\\n                                  <b>{{booking.apartmentDto.propertyDto.name}}, \\n                                   {{booking.apartmentDto.name}}</b>\\n                                </h4>     \\n                            </a>\\n                          </li>\\n                          <li class=\\\"list-inline-item text-warning\\\"><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i\\n                            class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star-half\\\"></i></li>\\n                          <li class=\\\"list-inline-item text-success\\\"><i class=\\\"fa fa-thumbs-up\\\"></i></li>\\n                        </ul>\\n                      </div>      \\n      \\n                      <div class=\\\"list-descrip\\\">\\n                        <small style=\\\"font-size: 15px\\\">Dates: {{booking.checkIn | date:'dd-MM-yyyy' }} - {{booking.checkOut | date:'dd-MM-yyyy' }}</small>\\n                        <br>\\n                        <small style=\\\"font-size: 15px ;\\\">Number of guests: {{booking.apartmentDto.numberOfGuests}}</small>\\n                        <br>\\n                        <small style=\\\"font-size: 15px\\\">Apartment type: {{booking.apartmentDto.apartmentType.name}}</small>\\n                        <br>\\n                      </div>\\n                    </div>                    \\n      \\n                    <div class=\\\"col-md-3 border-left card-body\\\">\\n                      <ul class=\\\"list-unstyled\\\">\\n                        <li>\\n                            <h2>\\n                            <b *ngIf=\\\"isCanceled(booking.bookingStatus.name)\\\" style=\\\"color:red\\\">{{booking.bookingStatus.name}}</b>\\n                            <b *ngIf=\\\"!isCanceled(booking.bookingStatus.name)\\\"style=\\\"color:green\\\">{{booking.bookingStatus.name}}</b>\\n                            </h2>\\n                        </li>\\n                        <li><h4>Price:</h4></li>\\n                        <li><h4>{{booking.totalPrice}}*\\n                          <p style=\\\"font-size: 14px\\\">*number of days: {{calculateNumberOfDates(booking.checkIn , booking.checkOut )}}</p>\\n                         </h4></li>\\n                        </ul>\\n                      <div *ngIf=\\\" !isBookingDateActual(booking.checkIn, booking.checkOut)\\\">\\n                        <div *ngIf=\\\"!booking.reviewDto\\\">\\n                          <hr>\\n                          <button type=\\\"button\\\" routerLink=\\\"/review-create/{{booking.bookingId}}\\\"\\n                                  class=\\\"btn btn-outline-primary\\\">Write Review</button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n      <div *ngIf=\\\"totalElements == 0 \\\">\\n        <h3>You not have booking yet. </h3>\\n      </div>\\n\\n      <div class=\\\"row\\\" *ngIf=\\\"totalElements !=0\\\">\\n        <ul class=\\\"pagination\\\" style=\\\"margin-left: 25%\\\">\\n          <app-pagination\\n            [currentPage]=\\\"currentPage\\\"\\n            [totalPages]= \\\"totalPages\\\"\\n            [pagesToPagination]= \\\"pagesToPagination\\\"    \\n            (goFirst)=\\\"onFirst($event)\\\"\\n            (goPrev)=\\\"onPrev()\\\"\\n            (goNext)=\\\"onNext()\\\"\\n            (goLast)=\\\"onLast($event)\\\"\\n            (goPage)=\\\"goToPage($event)\\\">\\n        </app-pagination>\\n        </ul>\\n      </div>\\n  </div>\\n</div>\\n     \\n</div> \\n<app-spinner *ngIf=\\\"isLoading\\\"></app-spinner>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BookingService } from '../../../services/booking/booking.service';\nimport { PaginationService } from '../../../services/pagination/pagination.service';\nimport { AuthService } from '../../../services/authentication/auth.service';\nimport {BookingDto} from '../../../models/bookingDto';\nimport { ActivatedRoute } from '../../../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-list-booking',\n  templateUrl: './list-booking.component.html',\n  styleUrls: ['./list-booking.component.css']\n})\nexport class ListBookingComponent implements OnInit {\n\n  private authenticated;\n  public isLoading = false;\n  public bookings: BookingDto[];\n  public currentPage: number ;\n  public selectedItemsSize: number;\n  public pagesToPagination : number [];//count page to show in pagination\n  public totalPages: number; // all pages (to last page in pagination)\n  public totalElements: number;// condition in html. If==0 you not have booking\n  public filterBookingsByDates: string; //selected filter(all, actual, archieve)\n  public allBookingsString: string = \"allBookings\";\n  public actualBookingsString: string = \"actualBookings\";\n  public archieveBookingsString: string = \"archieveBookings\";\n  public baseBookingUrl: string = window.location.protocol+ \"//\"\n                       +window.location.host +\"/\"\n                       + \"bookings\" ;                     \n  \n\nconstructor(private auth: AuthService,\n              private bookingService: BookingService,\n              private paginationService: PaginationService,\n              private route: ActivatedRoute) { }\n  \n  ngOnInit() {\n    this.authenticated = this.auth.isAuthenticated;\n    if( this.route.snapshot.queryParamMap.get('filter') ){\n      this.filterBookingsByDates=  this.route.snapshot.queryParamMap.get('filter');\n    }\n    else{\n      this.filterBookingsByDates= this.allBookingsString;\n    }    \n\n    if(localStorage.getItem('selectedItemsSize')){//if localStorage!=null, else get value from item-size comp\n      this.selectedItemsSize = Number (localStorage.getItem('selectedItemsSize'));\n    }\n\n    if( Number(this.route.snapshot.queryParamMap.get('page')) ){//when you back with booking to list-bokings      \n      this.currentPage= Number(this.route.snapshot.queryParamMap.get('page')); \n    }\n    else{\n    this.currentPage= 1;     \n    }\n\n    if( !Number(this.route.snapshot.queryParamMap.get('page'))\n          && !this.route.snapshot.queryParamMap.get('filter')){\n      let newUrl: string = this.getUrlWithPageAndFilter(this.currentPage, this.filterBookingsByDates);        \n      history.pushState(null, null, newUrl);    \n    }    \n    this.getBookingsByPage();\n  }\n\n  getBookingsByPage(): void { \n    this.isLoading = true;\n      this.bookingService.getBookingsByPage( this.currentPage -1, this.selectedItemsSize,\n        this.filterBookingsByDates).subscribe(data =>   {\n          this.bookings= data['content'];\n          this.totalPages= data['totalPages'];\n          this.totalElements=  data['totalElements'];\n          this.pagesToPagination= this.paginationService.calculatePages(this.currentPage, this.totalPages);\n          this.isLoading = false;\n      }, error => this.isLoading = false ); \n  }\n  \n  setSelectedItemsSize(n: number): void{ \n    this.selectedItemsSize= n;\n    this.currentPage= 1; \n    let newUrl: string = this.getUrlWithPageAndFilter(1, this.filterBookingsByDates);                \n    history.pushState(null, null, newUrl);    \n    this.getBookingsByPage();\n  }\n\n  setUlrToLocalStorage(){\n    localStorage.setItem('urlToButtonBackToListBookings', window.location.href);\n  }\n\n  goToPage(n: number): void {\n    this.currentPage= n;\n    let newUrl: string = this.getUrlWithPageAndFilter(this.currentPage, this.filterBookingsByDates);    \n    history.pushState(null, null, newUrl);    \n    this.getBookingsByPage();\n  }\n\n  onFirst(n: number): void {\n    this.currentPage= n;\n    let newUrl: string = this.getUrlWithPageAndFilter(this.currentPage, this.filterBookingsByDates);            \n    history.pushState(null, null, newUrl);    \n    this.getBookingsByPage();\n  }\n\n  onPrev(): void {\n    this.currentPage--;\n    let newUrl: string = this.getUrlWithPageAndFilter(this.currentPage, this.filterBookingsByDates);               \n    history.pushState(null, null, newUrl);    \n    this.getBookingsByPage();\n}\n\n  onNext(): void {    \n    this.currentPage++;\n    let newUrl: string = this.getUrlWithPageAndFilter(this.currentPage, this.filterBookingsByDates);   \n    history.pushState(null, null, newUrl);    \n    this.getBookingsByPage();\n  }\n\n  onLast(n: number): void {\n    this.currentPage= n;\n    let newUrl: string = this.getUrlWithPageAndFilter(this.currentPage, this.filterBookingsByDates);\n    history.pushState(null, null, newUrl);    \n    this.getBookingsByPage();\n  }\n\n  isCanceled( bookingStatus: string): boolean {\n    return  this.bookingService.isCanceled(bookingStatus);\n  }\n\n  isBookingDateActual(checkIn, checkOut):boolean {\n    return this.bookingService.isBookingDateActual(checkIn, checkOut);\n  }\n\n  calculateNumberOfDates(checkIn, checkOut): number {\n    return this.bookingService.calculateNumberOfDates(checkIn, checkOut);\n  }\n\n  filterAllBookings(){\n    let newUrl: string = this.getUrlWithPageAndFilter(1, this.allBookingsString);\n    if( this.route.snapshot.queryParamMap.get('filter') != this.allBookingsString ){\n      this.currentPage= 1; \n      history.pushState(null, null, newUrl);\n      this.filterBookingsByDates= this.allBookingsString;\n      this.getBookingsByPage();\n    }      \n  }\n\n  fiterActualBookings(){    \n    let newUrl: string = this.getUrlWithPageAndFilter(1, this.actualBookingsString);\n    if( this.route.snapshot.queryParamMap.get('filter') != this.actualBookingsString ){\n      this.currentPage= 1; \n      history.pushState(null, null, newUrl);      \n      this.filterBookingsByDates= this.actualBookingsString;\n      this.getBookingsByPage();\n    }            \n  }\n\n  filterArchieveBookings(){\n    let newUrl: string = this.getUrlWithPageAndFilter(1, this.archieveBookingsString);\n      if( this.route.snapshot.queryParamMap.get('filter') != this.archieveBookingsString ){\n      this.currentPage= 1; \n      history.pushState(null, null, newUrl);\n      this.filterBookingsByDates= this.archieveBookingsString;\n      this.getBookingsByPage();\n    }      \n  }\n\n  getUrlWithPageAndFilter(page: number, filter: string): string{\n    return this.baseBookingUrl  + \"?page=\"+ page +\"&filter=\"+ filter;\n  }\n}\n","module.exports = \"\"","module.exports = \"<footer class=\\\"page-footer\\\">\\n  <div class=\\\"footer-copyright text-center py-3\\\">© 2018 Copyright:\\n    <a routerLink=\\\"/search\\\">BookingLite.com</a>\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#navbarRightSide {\\n  justify-content: flex-end;\\n}\\n.user-dropdown {\\n  display: block;\\n}\\n.dropdown-toggle {\\n  cursor: pointer;\\n}\\n\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\" routerLink=\\\"/search\\\">\\n    <img src=\\\"assets/image/logo.png\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\n    Bookinglite\\n  </a>\\n  <div class=\\\"collapse navbar-collapse\\\" >\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"auth.isAuthenticated\\\" routerLink=\\\"/bookings\\\">Bookings</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarRightSide\\\" >\\n    <ul class=\\\"navbar-nav \\\">\\n      <div class=\\\"dropdown show\\\" (click)=\\\"onClick()\\\">\\n        <a class=\\\"navbar-brand dropdown-toggle\\\" role=\\\"button\\\" *ngIf=\\\"auth.isAuthenticated\\\">\\n          <img src=\\\"assets/image/profile.png\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\" [ngClass]=\\\"{'user-dropdown' : isOpen}\\\">\\n          <a [ngClass]=\\\"{'dropdown-item' : true, 'active' : href.includes('user')}\\\" routerLink=\\\"/user\\\">Profile</a>\\n          <a [ngClass]=\\\"{'dropdown-item' : true, 'active' : href.includes('bookings')}\\\" routerLink=\\\"/bookings\\\">Bookings</a>\\n          <a [ngClass]=\\\"{'dropdown-item' : true, 'active' : href.includes('properties')}\\\" routerLink=\\\"/myproperties\\\" *ngIf=\\\"isOwner\\\">Properies</a>\\n        </div>\\n      </div>\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" *ngIf=\\\"auth.isAuthenticated\\\">Logout</a>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" *ngIf=\\\"!auth.isAuthenticated\\\">Login</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/authentication/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  constructor(public auth: AuthService) { }\n  isOpen = false;\n  isOwner: boolean;\n  href = '';\n  ngOnInit() {\n    this.auth.isOwner.subscribe( isOwner => this.isOwner = isOwner );\n  }\n  onClick() {\n    this.href = window.location.href;\n    this.isOpen = !this.isOpen;\n  }\n}\n","module.exports = \"*\\n{\\n  font-family: 'PT Sans Caption', sans-serif, 'arial', 'Times New Roman';\\n}\\n/* Error Page */\\n.error .clip .shadow\\n{\\n  height: 180px;  /*Contrall*/\\n}\\n.error .clip:nth-of-type(2) .shadow\\n{\\n  width: 130px;   /*Contrall play with javascript*/\\n}\\n.error .clip:nth-of-type(1) .shadow, .error .clip:nth-of-type(3) .shadow\\n{\\n  width: 250px; /*Contrall*/\\n}\\n.error .digit\\n{\\n  width: 150px;   /*Contrall*/\\n  height: 150px;  /*Contrall*/\\n  line-height: 150px; /*Contrall*/\\n  font-size: 120px;\\n  font-weight: bold;\\n}\\n.error h2   /*Contrall*/\\n{\\n  font-size: 32px;\\n}\\n.error .msg /*Contrall*/\\n{\\n  top: -190px;\\n  left: 30%;\\n  width: 80px;\\n  height: 80px;\\n  line-height: 80px;\\n  font-size: 32px;\\n}\\n.error span.triangle    /*Contrall*/\\n{\\n  top: 70%;\\n  right: 0%;\\n  border-left: 20px solid #535353;\\n  border-top: 15px solid transparent;\\n  border-bottom: 15px solid transparent;\\n}\\n.error .container-error-404\\n{\\n  margin-top: 10%;\\n  position: relative;\\n  height: 250px;\\n  padding-top: 40px;\\n}\\n.error .container-error-404 .clip\\n{\\n  display: inline-block;\\n  -webkit-transform: skew(-45deg);\\n          transform: skew(-45deg);\\n}\\n.error .clip .shadow\\n{\\n\\n  overflow: hidden;\\n}\\n.error .clip:nth-of-type(2) .shadow\\n{\\n  overflow: hidden;\\n  position: relative;\\n  box-shadow: inset 20px 0px 20px -15px rgba(150, 150, 150,0.8), 20px 0px 20px -15px rgba(150, 150, 150,0.8);\\n}\\n.error .clip:nth-of-type(3) .shadow:after, .error .clip:nth-of-type(1) .shadow:after\\n{\\n  content: \\\"\\\";\\n  position: absolute;\\n  right: -8px;\\n  bottom: 0px;\\n  z-index: 9999;\\n  height: 100%;\\n  width: 10px;\\n  background: linear-gradient(90deg, transparent, rgba(173,173,173, 0.8), transparent);\\n  border-radius: 50%;\\n}\\n.error .clip:nth-of-type(3) .shadow:after\\n{\\n  left: -8px;\\n}\\n.error .digit\\n{\\n  position: relative;\\n  top: 8%;\\n  color: white;\\n  background: #07B3F9;\\n  border-radius: 50%;\\n  display: inline-block;\\n  -webkit-transform: skew(45deg);\\n          transform: skew(45deg);\\n}\\n.error .clip:nth-of-type(2) .digit\\n{\\n  left: -10%;\\n}\\n.error .clip:nth-of-type(1) .digit\\n{\\n  right: -20%;\\n}\\n.error .clip:nth-of-type(3) .digit\\n {\\n   left: -20%;\\n }\\n.error h2\\n{\\n  color: #A2A2A2;\\n  font-weight: bold;\\n  padding-bottom: 20px;\\n}\\n.error .msg\\n{\\n  position: relative;\\n  z-index: 9999;\\n  display: block;\\n  background: #535353;\\n  color: #A2A2A2;\\n  border-radius: 50%;\\n  font-style: italic;\\n}\\n.error .triangle\\n{\\n  position: absolute;\\n  z-index: 999;\\n  -webkit-transform: rotate(45deg);\\n          transform: rotate(45deg);\\n  content: \\\"\\\";\\n  width: 0;\\n  height: 0;\\n}\\n/* Error Page */\\n@media(max-width: 767px)\\n{\\n  /* Error Page */\\n  .error .clip .shadow\\n  {\\n    height: 100px;  /*Contrall*/\\n  }\\n  .error .clip:nth-of-type(2) .shadow\\n  {\\n    width: 80px;   /*Contrall play with javascript*/\\n  }\\n  .error .clip:nth-of-type(1) .shadow, .error .clip:nth-of-type(3) .shadow\\n  {\\n    width: 100px; /*Contrall*/\\n  }\\n  .error .digit\\n  {\\n    width: 80px;   /*Contrall*/\\n    height: 80px;  /*Contrall*/\\n    line-height: 80px; /*Contrall*/\\n    font-size: 52px;\\n  }\\n  .error h2   /*Contrall*/\\n  {\\n    font-size: 24px;\\n  }\\n  .error .msg /*Contrall*/\\n  {\\n    top: -110px;\\n    left: 15%;\\n    width: 40px;\\n    height: 40px;\\n    line-height: 40px;\\n    font-size: 18px;\\n  }\\n  .error span.triangle    /*Contrall*/\\n  {\\n    top: 70%;\\n    right: -3%;\\n    border-left: 10px solid #535353;\\n    border-top: 8px solid transparent;\\n    border-bottom: 8px solid transparent;\\n  }\\n  .error .container-error-404\\n  {\\n    height: 150px;\\n  }\\n  /* Error Page */\\n}\\n/*--------------------------------------------Framework --------------------------------*/\\n.overlay { position: relative; z-index: 20; }\\n/*done*/\\n.ground-color { background: white; }\\n/*done*/\\n.item-bg-color { background: #EAEAEA }\\n/*done*/\\n/* Padding Section*/\\n.padding-top { padding-top: 10px; }\\n/*done*/\\n.padding-bottom { padding-bottom: 10px; }\\n/*done*/\\n.padding-vertical { padding-top: 10px; padding-bottom: 10px; }\\n.padding-horizontal { padding-left: 10px; padding-right: 10px; }\\n.padding-all { padding: 10px; }\\n/*done*/\\n.no-padding-left { padding-left: 0px; }\\n/*done*/\\n.no-padding-right { padding-right: 0px; }\\n/*done*/\\n.no-vertical-padding { padding-top: 0px; padding-bottom: 0px; }\\n.no-horizontal-padding { padding-left: 0px; padding-right: 0px; }\\n.no-padding { padding: 0px; }\\n/*done*/\\n/* Padding Section*/\\n/* Margin section */\\n.margin-top { margin-top: 10px; }\\n/*done*/\\n.margin-bottom { margin-bottom: 10px; }\\n/*done*/\\n.margin-right { margin-right: 10px; }\\n/*done*/\\n.margin-left { margin-left: 10px; }\\n/*done*/\\n.margin-horizontal { margin-left: 10px; margin-right: 10px; }\\n/*done*/\\n.margin-vertical { margin-top: 10px; margin-bottom: 10px; }\\n/*done*/\\n.margin-all { margin: 10px; }\\n/*done*/\\n.no-margin { margin: 0px; }\\n/*done*/\\n.no-vertical-margin { margin-top: 0px; margin-bottom: 0px; }\\n.no-horizontal-margin { margin-left: 0px; margin-right: 0px; }\\n.inside-col-shrink { margin: 0px 20px; }\\n/*done - For the inside sections that has also Title section*/\\n/* Margin section */\\nhr\\n{ margin: 0px; padding: 0px; border-top: 1px dashed #999; }\\n/*--------------------------------------------FrameWork------------------------*/\\n\"","module.exports = \"<div class=\\\"error\\\">\\n  <div class=\\\"container-floud\\\">\\n    <div class=\\\"col-xs-12 ground-color text-center\\\">\\n      <div class=\\\"container-error-404\\\">\\n        <div class=\\\"clip\\\"><div class=\\\"shadow\\\"><span class=\\\"digit thirdDigit\\\">4</span></div></div>\\n        <div class=\\\"clip\\\"><div class=\\\"shadow\\\"><span class=\\\"digit secondDigit\\\">0</span></div></div>\\n        <div class=\\\"clip\\\"><div class=\\\"shadow\\\"><span class=\\\"digit firstDigit\\\">4</span></div></div>\\n        <div class=\\\"msg\\\">OH!<span class=\\\"triangle\\\"></span></div>\\n      </div>\\n      <h2 class=\\\"h1\\\">Sorry! Page not found</h2>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <select class=\\\"custom-select my-1 mr-sm-2\\\" id=\\\"inlineFormCustomSelectPref\\\" \\n        [(ngModel)]=selectedItemsSize (ngModelChange)='onSelectedItemsSize()'>\\n        <option [value]=\\\" itemsSize[0]\\\" selected>{{ itemsSize[0]}}</option>\\n        <option *ngFor=\\\"let item of itemsSize.slice(1)\\\"  [value]=\\\"item\\\" >{{item}}</option>\\n    </select>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-items-size',\n  templateUrl: './items-size.component.html',\n  styleUrls: ['./items-size.component.css']\n})\nexport class ItemsSizeComponent implements OnInit {\n\n  itemsSize:  number[] = [5, 10, 25];\n  selectedItemsSize: number;\n\n  @Output() sentSelectedItemsSize = new EventEmitter<number>();\n\n  constructor() { }\n\n  ngOnInit() {\n    if(  localStorage.getItem('selectedItemsSize')){\n      this.selectedItemsSize = Number (localStorage.getItem('selectedItemsSize'));\n    }\n    else{\n      this.selectedItemsSize = this.itemsSize[0];\n      this.onSelectedItemsSize();\n    }\n  }\n\n  onSelectedItemsSize(): void {\n    localStorage.setItem('selectedItemsSize', String(this.selectedItemsSize));\n    this.sentSelectedItemsSize.emit(this.selectedItemsSize);\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"itemOnPage\\\">\\n    <select class=\\\"custom-select my-1 mr-sm-2\\\" id=\\\"inlineFormCustomSelectPref\\\" \\n        [(ngModel)]=selectedItemOnPage (ngModelChange)='onSelectedItemOnPage()'>\\n        <option [value]=\\\" itemOnPage[0]\\\" selected>{{ itemOnPage[0]}}</option>\\n        <option *ngFor=\\\"let item of itemOnPage.slice(1)\\\"  [value]=\\\"item\\\" >{{item}}</option>\\n    </select>\\n</div>\\n\\n<div>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"text-center\\\">\\n            <ul  class=\\\"pagination\\\"> \\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled: currentPage === 1}\\\">\\n                    <p class=\\\"page-link\\\"  (click)=\\\"onFirst()\\\">First</p>\\n                </li>\\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled: currentPage === 1}\\\">\\n                    <p class=\\\"page-link\\\"  (click)=\\\"onPrev()\\\">Previous</p>\\n                </li>\\n                <li class=\\\"page-item active\\\" *ngFor=\\\"let pageNum of pagesToPagination\\\" [ngClass]=\\\"{active: pageNum === currentPage}\\\">\\n                    <p class=\\\"page-link\\\"  (click)=\\\"onPage(pageNum)\\\">{{pageNum}}</p>\\n                </li>\\n                <li class=\\\"page-item\\\" color=\\\"#blue\\\" [ngClass]=\\\"{disabled: currentPage === totalPages}\\\">\\n                    <p class=\\\"page-link\\\"  (click)=\\\"onNext()\\\">Next</p>\\n                </li>\\n                <li class=\\\"page-item\\\" [ngClass]=\\\"{disabled: currentPage === totalPages}\\\">\\n                    <p class=\\\"page-link\\\"  (click)=\\\"onLast()\\\">Last</p>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { BookingService } from '../../services/booking/booking.service';\n\n\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n\n  private firstPage = 1;\n  @Input() currentPage: number;\n  @Input() totalPages: number;\n  @Input() pagesToPagination: number [];\n\n  @Output() goFirst = new EventEmitter<number>();\n  @Output() goPrev = new EventEmitter<boolean>();\n  @Output() goNext = new EventEmitter<boolean>();\n  @Output() goLast = new EventEmitter<number>();\n  @Output() goPage = new EventEmitter<number>();\n\n  constructor(private bookingService: BookingService) { }\n\n  ngOnInit() {\n  }\n\n  onPage(n: number): void {\n    this.goPage.emit(n);\n  }\n\n  onFirst(): void {\n    this.goFirst.emit(this.firstPage);\n  }\n\n  onPrev(): void {\n    this.goPrev.emit(true);\n  }\n\n  onNext(next: boolean): void {\n    this.goNext.emit(next);\n  }\n\n  onLast(): void {\n    this.goLast.emit(this.totalPages);\n  }  \n}\n","module.exports = \".display-4{\\n  text-align: center;\\n}\\n.card{\\n  width: 850px;\\n  height: 680px;\\n}\\n.form-control{\\n  width: 350px;\\n  height: 50px;\\n}\\nlabel{\\n  font-size: 19px;\\n}\\n\"","module.exports = \"<div id=\\\"menucard\\\" style=\\\"margin-top: 4%; max-height: 600px\\\">\\n    <div class=\\\"box\\\">\\n\\n      <div class=\\\"card\\\">\\n        <article class=\\\"card-body\\\">\\n          <h4 class=\\\"card-title mb-2 mt-1\\\">Create Property</h4>\\n\\n          <form #createPropertyForm=ngForm (ngSubmit)=\\\"createProperty(createPropertyForm)\\\"\\n                [ngClass]=\\\"{'was-validated' : !formValid}\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Property Name</label>\\n                  <input name=\\\"name\\\" #name=\\\"ngModel\\\" required [(ngModel)]=\\\"propertyCreate.name\\\" class=\\\"form-control\\\"\\n                         placeholder=\\\"Property Name\\\" type=\\\"text\\\">\\n                  <div class=\\\"invalid-feedback\\\">Property Name is required!</div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label>Email</label>\\n                  <input class=\\\"form-control\\\" required name=\\\"email\\\" [(ngModel)]=\\\"propertyCreate.contactEmail\\\"\\n                         placeholder=\\\"Email\\\" type=\\\"email\\\" required pattern=\\\"[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+\\\">\\n                  <div class=\\\"invalid-feedback\\\">Valid email is required!</div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label>Phone Number</label>\\n                  <input name=\\\"phone number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"propertyCreate.phoneNumber\\\"\\n                         placeholder=\\\"phone number\\\" type=\\\"text\\\" required pattern=\\\"[0-9]{10}\\\">\\n                  <div class=\\\"invalid-feedback\\\">Phone Number can hold only number format and 10 digits!</div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label>Property Type</label>\\n                  <select class=\\\"form-control\\\" #selectPropertyType\\n                          (change)=\\\"changePropertyTypes(selectPropertyType.value)\\\">\\n                    <option *ngFor=\\\"let propertyType of propertyTypes\\\" value=\\\"{{propertyType.id}}\\\">{{propertyType.name}}\\n                    </option>\\n                  </select>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label>Facilities</label>\\n                  <div class=\\\"custom-control custom-checkbox\\\"\\n                       *ngFor=\\\"let facility of facilities\\\">\\n                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck{{facility.id}}\\\"\\n                           (change)=\\\"workWithCheckboxes(facility.id)\\\">\\n                    <label class=\\\"custom-control-label\\\"\\n                           for=\\\"customCheck{{facility.id}}\\\">{{facility.name}}</label>\\n                  </div>\\n                </div>\\n\\n              </div>\\n\\n              <div class=\\\"col-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Address Line</label>\\n                  <input class=\\\"form-control\\\" required name=\\\"addressline\\\" [(ngModel)]=\\\"propertyCreate.addressLine\\\"\\n                         placeholder=\\\"Address Line\\\" type=\\\"text\\\">\\n                  <div class=\\\"invalid-feedback\\\">Address line is required!</div>\\n                </div>\\n\\n\\n                <div class=\\\"form-group\\\">\\n                  <label>Country</label>\\n                  <select class=\\\"form-control\\\" #selectCountry (change)=\\\"changeCountry(selectCountry.value)\\\">\\n                    <option *ngFor=\\\"let country of countries\\\" value=\\\"{{country.id}}\\\">{{country.name}}</option>\\n                  </select>\\n                </div>\\n\\n                <div *ngIf=\\\"cities\\\" class=\\\"form-group\\\">\\n                  <label>City</label>\\n                  <select class=\\\"form-control\\\" #selectCity (change)=\\\"changeCity(selectCity.value)\\\">\\n                    <option *ngFor=\\\"let city of cities\\\" value=\\\"{{city.id}}\\\">{{city.name}}</option>\\n                  </select>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label>Zip</label>\\n                  <input class=\\\"form-control\\\" required name=\\\"zip\\\"\\n                         [(ngModel)]=\\\"propertyCreate.zip\\\" placeholder=\\\"12345\\\" type=\\\"text\\\" required pattern=\\\"[0-9]{5}\\\">\\n                  <div class=\\\"invalid-feedback\\\">Zip can hold only number format and 5 digits!</div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label>Description</label>\\n                  <textarea class=\\\"form-control\\\" id=\\\"FormControlTextarea\\\" rows=\\\"4\\\"\\n                            placeholder=\\\"write your descrition...\\\"\\n                            [(ngModel)]=\\\"propertyCreate.description\\\" name=\\\"message\\\"></textarea>\\n                </div>\\n              </div>\\n\\n            </div>\\n            <ng-container *ngIf=\\\"errorMessage !== ''\\\">\\n              <div class=\\\"alert alert-danger\\\">\\n                {{errorMessage}}\\n              </div>\\n            </ng-container>\\n\\n            <div class=\\\"form-group\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Create</button>\\n            </div>\\n          </form>\\n        </article>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {Route, Router} from '@angular/router';\n\n// models\nimport { Country } from '../../../models/country';\nimport { City } from '../../../models/city';\nimport {PropertyType} from '../../../models/property-type';\nimport {PropertyCreate} from '../../../models/property-create';\nimport {Facility} from '../../../models/facility';\n\n// services\nimport {CountryService} from '../../../services/country/coutry.service';\nimport {CityService} from '../../../services/city/city.service';\nimport { PropertyService } from '../../../services/property/property.service';\nimport {PropertyTypeService} from '../../../services/propertyTypy/property-type.service';\nimport {AuthService} from '../../../services/authentication/auth.service';\nimport {FacilityService} from '../../../services/facility/facility.service';\n\n@Component ({\n  selector: 'app-create-property',\n  templateUrl: './create-property.component.html',\n  styleUrls: ['./create-property.component.css']\n})\nexport class CreatePropertyComponent implements OnInit {\n\n  public propertyCreate: PropertyCreate;\n  public propertyTypes: PropertyType[];\n  public countries: Country[] = [];\n  public cities: City[] = [];\n  public facilities: Facility[];\n  public selectedCountryId: number;\n  public selectedCityId: number;\n  public selectedPropertyTypeId: number;\n\n  formValid = true;\n  errorMessage = '';\n  private authenticated;\n  constructor(private auth: AuthService,\n              private propertyService: PropertyService,\n              private propertyTypeService: PropertyTypeService,\n              private facilityService: FacilityService,\n              private countryService: CountryService,\n              private cityService: CityService,\n              private router: Router) { }\n  ngOnInit() {\n    this.authenticated = this.auth.isAuthenticated;\n    this.propertyCreate = new PropertyCreate();\n    this.propertyCreate.facilityId = [];\n    this.getFacilities();\n    this.getPropertyTypes();\n    this.getCountries();\n  }\n  getCountries() {\n    this.countryService.getCountry().subscribe((countriesarr) => {\n      this.countries = countriesarr;\n      this.selectedCountryId = countriesarr[0].id;\n      this.getCities(this.selectedCountryId);\n    });\n  }\n  changeCountry(id: number) {\n    this.selectedCountryId = id;\n    this.getCities(id);\n  }\n  changeCity(id: number) {\n    this.selectedCityId = id;\n  }\n  getCities(countryId: number) {\n    this.cityService.getCity(countryId).subscribe((citiesarr) => {\n      this.cities = citiesarr;\n      if (citiesarr.length !== 0) {\n        this.selectedCityId = citiesarr[0].id;\n      }\n    });\n  }\n  getPropertyTypes() {\n    this.propertyTypeService.getAllPropertyTypes().subscribe((properties) => {\n      this.propertyTypes = properties;\n      this.selectedPropertyTypeId = properties[0].id;\n    });\n  }\n  changePropertyTypes(id: number) {\n    this.selectedPropertyTypeId = id;\n  }\n  public createProperty(createPropertyForm: FormGroup) {\n    if (createPropertyForm.valid) {\n      this.propertyCreate.countryId = this.selectedCountryId;\n      this.propertyCreate.cityId = this.selectedCityId;\n      this.propertyCreate.propertyTypeId = this.selectedPropertyTypeId;\n      this.propertyService.createProperty(this.propertyCreate).subscribe(res => {\n        this.onSubmit();\n        }, error => {\n         this.errorMessage = JSON.parse(error.error).message;\n        });\n    } else {\n      this.formValid = false;\n    }\n  }\n  public getFacilities() {\n    this.facilityService.getAllFacilities().subscribe(facility => {\n      this.facilities = facility;\n    });\n  }\n  public workWithCheckboxes(id: number) {\n    const index = this.propertyCreate.facilityId.indexOf(id);\n    if (index !== -1) {\n      this.propertyCreate.facilityId.splice(index, 1);\n      return;\n    }\n    this.propertyCreate.facilityId.push(id);\n  }\n  onSubmit() {\n    this.router.navigate(['/myproperties']);\n  }\n}\n","module.exports = \"/*.ion-md-close{\\n  padding-top: 5%;\\n}*/\\n.ion-md-close:hover{\\n  opacity: 0.5;\\n}\\n.btn{\\n  margin: 20px;\\n}\\n.exist-photo{\\n  max-height: 100px;\\n  margin: 10px;\\n  border:3px solid #b3cccc!important;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"alert alert-primary\\\" role=\\\"alert\\\">\\n    This property have {{existPhotos.length}} photos\\n  </div>\\n\\n  <div class=\\\"row justify-content-start\\\">\\n    <div class=\\\"col-3\\\" *ngFor=\\\"let photo of existPhotos\\\">\\n      <input type=\\\"checkbox\\\" (change)=\\\"markPhoto(photo)\\\">\\n      <img class=\\\"exist-photo\\\" [src]=\\\"photo.url\\\">\\n    </div>\\n  </div>\\n  <button *ngIf=\\\"existPhotos.length > 0\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePhotos()\\\">Delete</button>\\n\\n  <div *ngIf=\\\"property\\\">\\n    <form>\\n      <div *ngIf=\\\"seccessMessages.length\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\"><p\\n        *ngFor=\\\"let secces of seccessMessages\\\">{{secces}}</p></div>\\n      <div *ngIf=\\\"errorMessages.length\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\"><p *ngFor=\\\"let error of errorMessages\\\">\\n        {{error}}</p></div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"custom-file\\\">\\n          <input type=\\\"file\\\" multiple class=\\\"custom-file-input\\\" id=\\\"validatedCustomFile\\\" #input0\\n                 (change)=\\\"addPhotos($event)\\\">\\n          <label class=\\\"custom-file-label\\\" for=\\\"validatedCustomFile\\\">{{infoMessage}}</label>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 offset-md-4\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"uploadPhotos()\\\">Upload</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"clearInput()\\\">Cancle</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Property} from '../../../../models/property';\nimport {HttpClient} from '@angular/common/http';\nimport {PropertyService} from '../../../../services/property/property.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-upload-photo-list',\n  templateUrl: './upload-photo-list.component.html',\n  styleUrls: ['./upload-photo-list.component.css']\n})\nexport class UploadPhotoListComponent implements OnInit {\n  START_INFO_MESSAGE = 'Choose files...';\n  UPLOAD_INFO_MESSAGE = 'click \"upload\" for photo uploading';\n  SECCESS_MESSAGE = ': uploaded seccessfully';\n  FILE_PARAM_NAME = 'file';\n  RESOURCE_PARAM_NAME = 'id';\n  propertyId: number;\n  property: Property;\n  existPhotos = [];\n  files: File[] = [];\n  infoMessage = this.START_INFO_MESSAGE;\n  seccessMessages: string[] = [];\n  errorMessages: string[] = [];\n  @ViewChild('input0')\n  input0;\n  constructor(private http: HttpClient, private propertyService: PropertyService, private route: ActivatedRoute) {}\n  ngOnInit() {\n    this.initExistPhotos();\n  }\n  initExistPhotos() {\n    this.propertyId = Number.parseInt( this.route.snapshot.paramMap.get(this.RESOURCE_PARAM_NAME) );\n    this.propertyService.getPropertyById(this.propertyId).subscribe(\n      pr => {\n        this.property = pr;\n        this.existPhotos = [];\n        for (const photo of this.property.photos) {\n          this.existPhotos.push({url: photo.url, isMark: false});\n        }\n      }\n    );\n  }\n  addPhotos(event) {\n    this.clearMessages();\n    this.infoMessage = this.UPLOAD_INFO_MESSAGE;\n    this.files = event.target.files;\n  }\n  uploadPhotos() {\n    this.clearMessages();\n    this.infoMessage = this.START_INFO_MESSAGE;\n    let answerCount = 0;\n    Array.from(this.files).forEach((el, ind) => {\n      const uploadData = new FormData();\n      uploadData.append(this.FILE_PARAM_NAME, this.files[ind]);\n      this.http.post('/api/property/' + this.propertyId + '/photo', uploadData)\n        .subscribe(data => {\n            this.seccessMessages.push(this.files[ind].name + this.SECCESS_MESSAGE);\n            if (++answerCount === this.files.length) {\n            this.input0.nativeElement.value = '';\n            setTimeout(() => { this.initExistPhotos(); }, 2000);\n            }\n          },\n          err => {\n              this.errorMessages.push(this.files[ind].name + ': ' + err.error.message);\n              if (++answerCount === this.files.length) {\n              this.input0.nativeElement.value = '';\n              setTimeout(() => { this.initExistPhotos(); }, 2000);\n            }\n          });\n    });\n  }\n  clearInput() {\n    this.clearMessages();\n    this.infoMessage = this.START_INFO_MESSAGE;\n    this.input0.nativeElement.value = '';\n  }\n  markPhoto(photo) {\n    photo.isMark = !photo.isMark;\n  }\n  deletePhotos() {\n    for (const photo of this.existPhotos) {\n      if (photo.isMark) {\n        this.http.delete('api/photo/' + photo.url.substring(photo.url.lastIndexOf('/'), photo.url.lastIndexOf('.')))\n          .subscribe(\n          ans => {\n            this.initExistPhotos();\n          }\n        );\n      }\n    }\n  }\n  clearMessages() {\n    this.infoMessage = null;\n    this.errorMessages = [];\n    this.seccessMessages = [];\n  }\n}\n","module.exports = \".edit-box{\\n  /*margin-bottom: 200px;*/\\n/*margin-top: 20px;*/\\n}\\n\\n.edit-box{\\n  width: 65%;\\n  margin: 0 auto ;\\n  padding-bottom: 25px;\\n}\\n\"","module.exports = \"<div class=\\\"edit-box\\\">\\n  <div class=\\\"box\\\">\\n    <h1 class=\\\"display-8\\\">BookingLite</h1>\\n    <div class=\\\"card\\\">\\n      <article class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title mb-4 mt-1\\\">Edit Property</h4>\\n\\n        <form #createPropertyForm=ngForm (ngSubmit)=updateProperty(createPropertyForm)\\n        [ngClass]=\\\"{'was-validated' : !formValid}\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"property\\\">\\n              <label>Property Name</label>\\n              <input class=\\\"form-control\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" required name=\\\"name\\\"\\n                     [(ngModel)]=\\\"property.name\\\">\\n              <div class=\\\"invalid-feedback\\\">Valid name is required!</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"property\\\">\\n              <label>Email</label>\\n              <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\"  required name=\\\"email\\\"\\n                     [(ngModel)]=\\\"property.contactEmail\\\" required pattern=\\\"[^@\\\\s]+@[^@\\\\s]+\\\\.[^@\\\\s]+\\\">\\n              <div class=\\\"invalid-feedback\\\">Valid email is required!</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"property\\\">\\n              <label>Phone Number</label>\\n              <input name=\\\"phone number\\\" required class=\\\"form-control\\\"\\n                     placeholder=\\\"phone number\\\" type=\\\"text\\\" required pattern=\\\"[0-9]{10}\\\"\\n                     [(ngModel)]=\\\"property.phoneNumber\\\">\\n              <div class=\\\"invalid-feedback\\\">Phone Number can hold only number format and 10 digits!</div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"facilities\\\">\\n              <label>Facilities</label>\\n              <div class=\\\"custom-control custom-checkbox\\\"\\n                   *ngFor=\\\"let facility of facilities\\\">\\n                <input  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck{{facility.id}}\\\"\\n                       (change)=workWithCheckboxes(facility.id)>\\n                <label class=\\\"custom-control-label\\\"\\n                       for=\\\"customCheck{{facility.id}}\\\">{{facility.name}}</label>\\n              </div>\\n            </div>\\n         </div>\\n\\n\\n          <div class=\\\"col-6\\\" *ngIf=\\\"property\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Description</label>\\n              <input name=\\\"description\\\" class=\\\"form-control\\\"\\n                     placeholder=\\\"description\\\" type=\\\"text\\\"\\n                     [(ngModel)]=\\\"property.description\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\" *ngIf=\\\"propertyTypes\\\">\\n              <label>Property Type</label>\\n              <select class=\\\"form-control\\\" #selectPropertyType\\n                      (change)=\\\"changePropertyTypes(selectPropertyType.value)\\\">\\n                <option *ngFor=\\\"let propertyType of propertyTypes\\\" value=\\\"{{propertyType.id}}\\\">\\n                  {{propertyType.name}}\\n                </option>\\n              </select>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Add Change\\n          </button>\\n        </div>\\n\\n\\n        </form>\\n      </article>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"box-photo\\\">\\n  <app-upload-photo-list></app-upload-photo-list>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {AuthService} from '../../../services/authentication/auth.service';\nimport {Property} from '../../../models/property';\nimport {PropertyService} from '../../../services/property/property.service';\nimport {PropertyTypeService} from '../../../services/propertyTypy/property-type.service';\nimport {PropertyType} from '../../../models/property-type';\nimport { FacilityService } from '../../../services/facility/facility.service';\nimport {Facility} from '../../../models/facility';\nimport { FormGroup} from '@angular/forms';\nimport {PropertyCreate} from '../../../models/property-create';\n\n@Component({\n  selector: 'app-edit-property',\n  templateUrl: './edit-property.component.html',\n  styleUrls: ['./edit-property.component.css']\n})\nexport class EditPropertyComponent implements OnInit {\n\n\n  formValid = true;\n  errorMessage = '';\n  private authentication;\n  property: Property;\n  propertyTypes: PropertyType[];\n  public facilities: Facility[];\n  public propertyUpdate: PropertyCreate;\n  public selectedPropertyTypeId: number;\n  options = Array<Facility>();\n\n  constructor(private route: ActivatedRoute,\n              private auth: AuthService,\n              private propertyService: PropertyService,\n              private propertyTypeService: PropertyTypeService,\n              private facilityService: FacilityService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.authentication = this.auth.isAuthenticated;\n    this.propertyUpdate = new PropertyCreate();\n    this.getPropertyById();\n    this.getFacilities();\n    this.getPropertyTypes();\n    this.propertyUpdate.facilityId = [];\n    this.selectedPropertyTypeId = 1;\n  }\n  public getPropertyById(): Property {\n    const id = +this.route.snapshot.paramMap.get('id');\n     this.propertyService.getPropertyById(id).subscribe(res => this.property = res);\n    return this.property;\n  }\n  public getPropertyTypes() {\n    this.propertyTypeService.getAllPropertyTypes().subscribe(res => {\n      this.propertyTypes = res;\n    });\n  }\n    changePropertyTypes(id: number) {\n      this.selectedPropertyTypeId = id;\n  }\n\n  public updateProperty(createPropertyForm: FormGroup) {\n    if (createPropertyForm.valid) {\n      const id = +this.route.snapshot.paramMap.get('id');\n      this.propertyUpdate.propertyTypeId = this.selectedPropertyTypeId;\n      this.propertyUpdate.name = this.property.name;\n      this.propertyUpdate.description = this.property.description;\n      this.propertyUpdate.contactEmail = this.property.contactEmail;\n      this.propertyUpdate.phoneNumber = this.property.phoneNumber;\n      this.propertyService.updateProperty(this.propertyUpdate, id).subscribe(res => {\n         this.onSubmit();\n      }, error => {\n        this.errorMessage = JSON.parse(error.error).message;\n      });\n       } else {\n      this.formValid = false;\n    }\n  }\n  public getFacilities() {\n    this.facilityService.getAllFacilities().subscribe(facility => {\n      this.facilities = facility;\n    });\n  }\n  public workWithCheckboxes(id: number) {\n    const index = this.propertyUpdate.facilityId.indexOf(id);\n    if (index !== -1) {\n      this.propertyUpdate.facilityId.splice(index, 1);\n      return;\n    }\n    this.propertyUpdate.facilityId.push(id);\n  }\n\n  // public isChecked(): boolean {\n  //   this.facilities.forEach(res => {\n  //     this.property.facilities.forEach(alreadyChecked => {\n  //       console.log(alreadyChecked.id + 'my');\n  //       if ( res.id === alreadyChecked.id) {\n  //         console.log('збіглося');\n  //         return true;\n  //            } else {\n  //         console.log('NE-збіглося');\n  //         return false;\n  //       }\n  //     });\n  //   });\n  //   return false;\n  // }\n  //\n  // public check() {\n  //   console.log(this.getPropertyById().facilities[0].id);\n  //   this.getPropertyById().facilities.forEach(value => {\n  //     const element = this.options.find(x => x.id === value.id);\n  //     if (element) {\n  //       element.checked = true;\n  //     }\n  //   });\n  // }\n  onSubmit() {\n    this.router.navigate(['/myproperties']);\n  }\n}\n","module.exports = \"*{\\n  box-sizing: border-box;\\n}\\n\\n  /*.container {*/\\n\\n  /*position: fixed;*/\\n\\n  /*}*/\\n\\n  .img-responsive {\\n  padding-bottom: 4%;\\n  width: 250px;\\n  height: 170px;\\n  position: absolute ;\\n  border-radius: 15px;\\n}\\n\"","module.exports = \"<ul style=\\\"list-style: none\\\">\\n  <li *ngFor=\\\"let property of propertyList \\\">\\n    <div class=\\\"row mb-3\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\" style=\\\"max-height: 200px\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n\\n              <div class=\\\"col-md-3\\\">\\n                <img *ngIf=\\\"property.photos.length > 0\\\" class=\\\"img-responsive\\\" src={{property.photos[0].url}}\\n                     alt=\\\"{{property.name}}\\\">\\n                <img *ngIf=\\\"property.photos.length === 0\\\" class=\\\"img-responsive\\\" src=\\\"assets/image/Capture.PNG\\\"\\n                     alt=\\\"{{property.name}}\\\">\\n              </div>\\n\\n\\n              <div class=\\\"col-md-6  card-body\\\" style=\\\"margin-left: 10%; width: 300px\\\">\\n                <div class=\\\"list-title\\\">\\n                  <ul class=\\\"list-inline list-unstyled\\\">\\n                    <li class=\\\"list-inline-item\\\"><a *ngIf=\\\"property\\\" routerLink=\\\"/property-detailes/{{property.id}}\\\">\\n                      <h4>\\n                        <b>{{property.name}}</b></h4></a></li>\\n                    <li class=\\\"list-inline-item text-warning\\\"><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i\\n                      class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star-half\\\"></i></li>\\n                    <li class=\\\"list-inline-item text-success\\\"><i class=\\\"fa fa-thumbs-up\\\"></i></li>\\n                  </ul>\\n                </div>\\n\\n                <div class=\\\"list-location\\\">\\n                 <i class=\\\"fa fa-map-marker\\\"></i>\\n                    <small style=\\\"font-size: 14px\\\" *ngIf=\\\"property\\\">Location : {{property.address.addressLine}}, zip : {{property.address.zip}},\\n                      {{property.address.city.name}},{{property.address.city.country.name}}\\n                    </small>\\n                </div>\\n\\n                <div class=\\\"list-descrip\\\">\\n                  <small style=\\\"font-size: 15px\\\" *ngIf=\\\"property\\\">Email: {{property.contactEmail}}</small>\\n                  <br>\\n                  <small style=\\\"font-size: 15px ;\\\" *ngIf=\\\"property\\\">Phone Number: {{property.phoneNumber}}</small>\\n                  <br>\\n                  <small style=\\\"font-size: 15px\\\" *ngIf=\\\"property\\\">Type: {{property.propertyType.name}}</small>\\n                  <br>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"col-md-3 border-left card-body\\\">\\n                <h4>Ranking {{property.rating}}</h4>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/property-detailes/{{property.id}}\\\">\\n                  Property Detail\\n                </button>\\n                <br> <br> <br>\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/property/{{property.id}}/apartments\\\"\\n                        [queryParams]=\\\"queryParams\\\">Select Apartments\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </li>\\n</ul>\\n\"","import {Component, Input, OnInit} from '@angular/core';\n\nimport {Property} from '../../../models/property';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-list-property',\n  templateUrl: './list-property.component.html',\n  styleUrls: ['./list-property.component.css']\n})\nexport class ListPropertyComponent implements OnInit {\n\n  @Input() propertyList: Property[]\n  public queryParams = {\n    checkin: '',\n    checkout: '',\n    num_of_guests: ''\n  }\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.queryParams.checkin = this.route.snapshot.queryParamMap.get('checkin');\n    this.queryParams.checkout = this.route.snapshot.queryParamMap.get('checkout');\n    this.queryParams.num_of_guests = this.route.snapshot.queryParamMap.get('num_of_guests');\n  }\n }\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { Property } from '../../../../models/property';\nimport { PropertyService } from '../../../../services/property/property.service';\n\n@Component ({\n  selector: 'app-property-item',\n  templateUrl: './property-item.component.html',\n  styleUrls: ['./property-item.component.css']\n})\nexport class PropertyItemComponent implements OnInit {\n\n  constructor(private propertyService: PropertyService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul style=\\\"list-style: none\\\">\\n  <li *ngFor=\\\"let property of propertyList\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-3\\\">\\n                 <!-- <img class=\\\"img-responsive\\\" src={{property.photos[0].url}} onerror=\\\"this.src = 'assets/image/Capture.gif'\\\">-->\\n                </div>\\n                <div class=\\\"col-md-6  card-body\\\">\\n                  <div class=\\\"list-title\\\">\\n                    <ul class=\\\"list-inline list-unstyled\\\">\\n                      <li class=\\\"list-inline-item\\\"><h4>{{property.name}}</h4></li>\\n                      <li class=\\\"list-inline-item text-warning\\\"><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i\\n                        class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star\\\"></i><i class=\\\"fa fa-star-half\\\"></i></li>\\n                      <li class=\\\"list-inline-item text-success\\\"><i class=\\\"fa fa-thumbs-up\\\"></i></li>\\n                      <ul>\\n                        <li><p *ngFor=\\\"let facility of property.facilities\\\">{{facility.name}}</p></li>\\n                      </ul>\\n                    </ul>\\n                  </div>\\n                  <div class=\\\"list-location\\\">\\n                    <small>{{property.description}}</small>\\n                  </div>\\n                  <div class=\\\"list-descrip\\\">\\n                    <small>{{property.contactEmail}}\\n                    </small>\\n                    <small>{{property.phoneNumber}}\\n                    </small>\\n                    <br>\\n                    <small>{{property.propertyType.name}}\\n                    </small>\\n\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3 border-left card-body\\\">\\n                  <ul class=\\\"list-unstyled\\\">\\n                    <li><h3>Rating {{property.rating}}</h3></li>\\n                  </ul>\\n                  <button type=\\\"button\\\"\\n                          routerLink=\\\"/reviews-property/{{property.id}}\\\"\\n                          class=\\\"btn btn-outline-primary\\\">\\n                    Reviews\\n                  </button>\\n                  <br><br>\\n                  <button type=\\\"button\\\"\\n                          routerLink=\\\"/myproperties/{{property.id}}/guest-arrivals/futureBookings\\\"\\n                          class=\\\"btn btn-outline-primary\\\">\\n                    Guest Arrivals\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </li>\\n</ul>\\n<router-outlet></router-outlet>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Property} from '../../../models/property';\nimport {PropertyService} from '../../../services/property/property.service';\nimport {ReviewService} from '../../../services/review/review.service';\nimport {ApartmentService} from '../../../services/apartment/apartment.service';\nimport {AuthService} from '../../../services/authentication/auth.service';\n\n@Component({\n  selector: 'app-owner-properties',\n  templateUrl: './owner-properties.component.html',\n  styleUrls: ['./owner-properties.component.css']\n})\nexport class OwnerPropertiesComponent implements OnInit {\n\n  authentication;\n  propertyList: Property[];\n\n  constructor(private propertyService: PropertyService,\n              private reviewService: ReviewService,\n              private apartmentService: ApartmentService,\n              private auth: AuthService) {\n  }\n\n  ngOnInit() {\n    this.authentication = this.auth.isAuthenticated;\n    this.getOwnerProperties();\n  }\n\n  getOwnerProperties(): void {\n    this.propertyService.getOwnerProperties().subscribe(properties => {\n      this.propertyList = properties;\n    });\n  }\n}\n","module.exports = \"#blocker{\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  top: 0;\\n  left: 0;\\n  background: rgba(0,0,0,0.5);\\n}\\n#zoom-img{\\n  position: fixed;\\n  z-index: 99;\\n  opacity: 1;\\n  cursor: zoom-out;\\n  max-height: 70%;\\n  border:5px solid #fff!important;\\n}\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-start\\\">\\n    <div class=\\\"col-3\\\" *ngFor=\\\"let photo of photos\\\" (click)=\\\"openPhoto(photo.url)\\\">\\n      <app-photo [photoUrl]='photo.url'></app-photo>\\n    </div>\\n  </div>\\n</div>\\n<ng-container *ngIf=\\\"opened\\\">\\n  <div id=\\\"blocker\\\" (click)=\\\"closePhoto()\\\"><img id=\\\"zoom-img\\\" [src]=\\\"openedPhotoUrl\\\" (click)=\\\"closePhoto()\\\">\\n  </div>\\n</ng-container>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Photo} from '../../../models/photo';\nimport {ActivatedRoute} from '@angular/router';\nimport {PropertyService} from '../../../services/property/property.service';\n\n@Component({\n  selector: 'app-photo-list',\n  templateUrl: './photo-list.component.html',\n  styleUrls: ['./photo-list.component.css']\n})\nexport class PhotoListComponent implements OnInit {\n  /*@Input() urls: string[];*/\n  propertyId: number;\n  photos: Photo[];\n  openedPhotoUrl = '';\n  opened = false;\n  constructor(private route: ActivatedRoute, private propertyService: PropertyService) { }\n\n  ngOnInit() {\n    this.propertyId = Number.parseInt( this.route.snapshot.paramMap.get('id') );\n    this.propertyService.getPropertyById(this.propertyId)\n                          .subscribe(property => this.photos = property.photos);\n  }\n  openPhoto(url: string) {\n    this.openedPhotoUrl = url;\n    this.opened = true;\n  }\n  closePhoto() {\n    this.opened = false;\n  }\n}\n\n","module.exports = \".img-responsive {\\n    width: 220px;\\n    height: 200px;\\n    position: relative ;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n    margin-left: auto;\\n    margin-right: auto;\\n    text-align: center;\\n  }\\n  #blocker{\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    top: 0;\\n    left: 0;\\n    background: rgba(0,0,0,0.5);\\n  }\\n  #zoom-img{\\n    position: fixed;\\n    z-index: 99;\\n    opacity: 1;\\n    cursor: zoom-out;\\n    max-height: 70%;\\n    border:5px solid #fff!important;\\n  }\"","module.exports = \"<ng-template #bookingContent let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-booking\\\">Photos {{booking.apartmentDto.propertyDto.name}}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form>\\n      <div class=\\\"form-group\\\">\\n        <div *ngIf= \\\"booking\\\">    \\n          <div class=\\\"row \\\">  \\n            <div class=\\\"col-4\\\" *ngFor=\\\"let photo of booking.apartmentDto.propertyDto.photos\\\" (click)=\\\"openPhoto(photo.url)\\\">\\n              <app-photo [photoUrl]='photo.url'></app-photo>\\n            </div>\\n            <ng-container *ngIf=\\\"opened\\\">\\n              <div id=\\\"blocker\\\" (click)=\\\"closePhoto()\\\"><img id=\\\"zoom-img\\\" [src]=\\\"openedPhotoUrl\\\" (click)=\\\"closePhoto()\\\">\\n              </div>\\n            </ng-container>\\n          </div>\\n        </div>  \\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n<ng-template #propertyContent let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-property\\\">Photos {{property.name}}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form>\\n      <div class=\\\"form-group\\\">\\n        <div *ngIf= \\\"property\\\">    \\n          <div class=\\\"row \\\">  \\n            <div class=\\\"col-4\\\" *ngFor=\\\"let photo of property.photos\\\" (click)=\\\"openPhoto(photo.url)\\\">\\n              <app-photo [photoUrl]='photo.url'></app-photo>\\n            </div>\\n            <ng-container *ngIf=\\\"opened\\\">\\n              <div id=\\\"blocker\\\" (click)=\\\"closePhoto()\\\"><img id=\\\"zoom-img\\\" [src]=\\\"openedPhotoUrl\\\" (click)=\\\"closePhoto()\\\">\\n              </div>\\n            </ng-container>\\n          </div>\\n        </div>  \\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<button class=\\\"btn btn-lg btn-outline-primary\\\" (click)=\\\"open(bookingContent, propertyContent)\\\">\\n  More photos</button>\\n\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { Booking } from '../../../models/booking';\nimport { Property } from '../../../models/property';\n\n@Component({\n  selector: 'app-photo-popup',\n  templateUrl: './photo-popup.component.html',\n  styleUrls: ['./photo-popup.component.css']\n})\nexport class PhotoPopupComponent implements OnInit {\n\n  @Input() booking: Booking;\n  @Input() property: Property;\n  openedPhotoUrl = '';\n  opened = false;\n  \n  constructor(private modalService: NgbModal) {}\n\n  ngOnInit() {\n  }\n\n  open(bookingContent, propertyContent) {\n    this.opened = false;\n    if(this.booking){\n      this.modalService.open(bookingContent, {ariaLabelledBy: 'modal-booking', size: 'lg'})\n    }\n    else if(this.property){\n      this.modalService.open(propertyContent, {ariaLabelledBy: 'modal-property', size: 'lg'})\n    }\n  }\n\n  openPhoto(url: string) {\n    this.openedPhotoUrl = url;\n    this.opened = true;\n  }\n\n  closePhoto() {\n    this.opened = false;\n  }\n\n}\n","module.exports = \".photo{\\n  border:1px solid #ccc!important;\\n  padding:8px !important;\\n  max-width: 230px;\\n  height: 160px;\\n  margin: 6px;\\n  cursor: zoom-in;\\n  transition: opacity .4s;\\n}\\n.photo:hover {\\n  opacity: .8;\\n}\\n\"","module.exports = \"<img [src]=\\\"photoUrl\\\" class=\\\"photo\\\" >\\n\"","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-photo',\n  templateUrl: './photo.component.html',\n  styleUrls: ['./photo.component.css']\n})\nexport class PhotoComponent implements OnInit {\n  @Input() photoUrl: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n*{\\n  box-sizing: border-box;\\n}\\n.thumb {\\n  display: block;\\n  width: 600px;\\n  max-height: 300px;\\n  border-radius: 20px;\\n  border: 3px outset black;\\n\\n}\\n#photo-list{\\n  min-height: 580px;\\n  max-height: 580px;\\n}\\n.media-object {\\n  width: 250px;\\n  min-height: 125px;\\n  margin: 10px;\\n  border-radius: 20px;\\n  border: 2px double black;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"property\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-8\\\">\\n      <h2 style=\\\"width: 90%; margin-left: 3%; margin-top: 1%\\\"><a href=\\\"#\\\" style=\\\"text-decoration: none;\\\"\\n                                                                 *ngIf=\\\"property\\\"\\n                                                                 routerLink=\\\"/property/{{property.id}}/apartments\\\">\\n        <b>{{property.name}}</b></a><span\\n        style=\\\"font-size: 14px; margin-left: 17%\\\">Type: {{property.propertyType.name}}</span>\\n        <span style=\\\"font-size: 13px; margin-left: 10%\\\">Ranking: {{property.rating}}</span>\\n      </h2>\\n      <img src=\\\"assets/image/pin.png\\\" style=\\\"width: 25px\\\">\\n      <span *ngIf=\\\"property\\\" style=\\\"font-size: 14px; font-style:italic\\\">Location : {{property.address.addressLine}},\\n          zip : {{property.address.zip}}, {{property.address.city.name}}, {{property.address.city.country.name}} <span style=\\\"margin-left: 10%\\\">\\n          Review:{{countReview}}\\n        </span></span>\\n\\n      <div class=\\\"featured-article\\\">\\n        <img class=\\\"thumb\\\" alt=\\\"No Photo\\\" *ngIf=\\\"property.photos.length > 0\\\"\\n             src={{property.photos[0].url}}>\\n        <div class=\\\"col-md-8\\\" style=\\\"margin-top: 4px\\\" *ngIf=\\\"property\\\">\\n          <ul class=\\\"pagination\\\">\\n            <li class=\\\"page-item active\\\">\\n              <p class=\\\"page-link\\\" style=\\\"width: 100%; font-size: 13px\\\">\\n                <a style=\\\"text-decoration: none; color: white;\\\" routerLink=\\\"/property/{{property.id}}/apartments\\\"\\n                   [queryParams]=\\\"queryParams\\\">\\n                  Info about apartments and price</a></p>\\n            </li>\\n\\n            <li class=\\\"page-item active\\\" style=\\\"margin-left: 5%\\\">\\n              <p class=\\\"page-link\\\" style=\\\"width: 110%; font-size: 13px\\\">\\n                <a style=\\\"text-decoration: none; color: white;\\\" routerLink=\\\"/reviews-property/{{property.id}}\\\">\\n                  Show all review</a></p>\\n            </li>\\n\\n            <li class=\\\"page-item active\\\" style=\\\"margin-left: 5%\\\">\\n              <p class=\\\"page-link\\\" style=\\\"width: 110%; font-size: 13px\\\"><a\\n                style=\\\"text-decoration: none; color: white;\\\" routerLink=\\\"/property/{{property.id}}/apartments\\\"\\n                [queryParams]=\\\"queryParams\\\">Book now</a></p>\\n            </li>\\n\\n          </ul>\\n        </div>\\n\\n        <div class=\\\"block-title\\\" style=\\\"margin-top: 1%\\\">\\n          <img src=\\\"assets/image/medal.png\\\" style=\\\"width: 25px;\\n             display: inline; margin-left: 10px;\\\">\\n          <span style=\\\"font-size: 15px; color: #ffa21c; font-style:oblique\\\">One of our most popular lodging in\\n             {{property.address.city.name}}, {{property.address.city.country.name}}</span>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-4 border-left card-body\\\" id=\\\"photo-list\\\" *ngIf='property'>\\n      <ul class=\\\"media-list main-list\\\">\\n        <li class=\\\"media\\\">\\n\\n          <img class=\\\"media-object\\\"\\n               alt=\\\"No Photo\\\" *ngIf=\\\"property.photos.length > 0\\\"\\n               src={{property.photos[0].url}}>\\n          <img class=\\\"media-object\\\"\\n               alt=\\\"No Photo\\\" *ngIf=\\\"property.photos.length === 0\\\"\\n               src=\\\"assets/image/Capture.PNG\\\">\\n        </li>\\n        <li class=\\\"media\\\">\\n          <img class=\\\"media-object\\\"\\n               alt=\\\"No Photo\\\" *ngIf=\\\"property.photos.length > 0\\\"\\n               src={{property.photos[1].url}}>\\n          <img class=\\\"media-object\\\"\\n               alt=\\\"No Photo\\\" *ngIf=\\\"property.photos.length === 0\\\"\\n               src=\\\"assets/image/Capture.PNG\\\">\\n        </li>\\n\\n        <li class=\\\"media\\\">\\n          <img class=\\\"media-object\\\"\\n               alt=\\\"No Photo\\\" *ngIf=\\\"property.photos.length === 0\\\"\\n               src=\\\"assets/image/Capture.PNG\\\">\\n          <img class=\\\"media-object\\\"\\n               alt=\\\"No Photo\\\" *ngIf=\\\"property.photos.length > 0\\\"\\n               src={{property.photos[2].url}}>\\n        </li>\\n      </ul>\\n      <app-photo-popup style=\\\"margin-left: 33%\\\"\\n                       [property]=\\\"property\\\">\\n      </app-photo-popup>\\n    </div>\\n\\n    <div class=\\\"col-md-5\\\" style=\\\"margin-top: -11%\\\">\\n      <ul class=\\\"menu-items\\\" style=\\\"list-style: none\\\">\\n        <li style=\\\"font-size: 18px; color: #bb5500\\\">Information about property</li>\\n        <li style=\\\"font-family: 'Bitstream Vera Sans'; font-size: 14px\\\"> Contact Email : {{property.contactEmail}}\\n        </li>\\n        <li style=\\\"font-family: 'Bitstream Vera Sans'; font-size: 14px\\\">Phone Number : {{property.phoneNumber}}</li>\\n        <li style=\\\"font-family: 'Bitstream Vera Sans'; font-size: 14px\\\">Property Type :\\n          {{property.propertyType.name}}\\n        </li>\\n        <li style=\\\"font-family: 'Bitstream Vera Sans'; font-size: 14px\\\">Address Line :\\n          {{property.address.addressLine}}\\n        </li>\\n        <li style=\\\"font-family: 'Bitstream Vera Sans'; font-size: 14px\\\">City : {{property.address.city.name}}</li>\\n        <li style=\\\"font-family: 'Bitstream Vera Sans'; font-size: 14px\\\">Country :\\n          {{property.address.city.country.name}}\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"col-md-2 border-left card-body\\\" style=\\\"margin-top: -11%\\\">\\n      <li style=\\\"font-size: 18px; color:#bb5500; list-style: none; margin-left: 1px\\\">Facilities</li>\\n      <ul class=\\\"list-group\\\" style=\\\"list-style: none\\\" *ngFor=\\\"let facility of property.facilities\\\">\\n        <li style=\\\"font-size: 14px\\\">{{facility.name}}</li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"col-md-8 border-top card-body\\\">\\n      <h6 style=\\\"font-family: 'Fira Code';color: #300027; font-size: 13px\\\">\\n        {{property.description}}\\n        All rooms feature simple furnishings. They come with a TV with satellite channels, a hairdryer and all the\\n        necessary amenities for making coffee / tea. All rooms at this hotel also have their own bathroom with a range\\n        of toiletries.\\n        The spacious lounge area offers light snacks and a variety of drinks. Guests can also visit the modern\\n        cocktail bar. Every morning, the hotel serves a full breakfast.\\n        From Queensway Station, the Metro to Oxford Street shopping is a 5-minute walk, and Buckingham Palace is 20\\n        minutes away. Paddington Rail Station, which provides express services to Heathrow Airport, is a 15-minute\\n        walk from the hotel.\\n        Westminster is a great choice for travelers who are interested in shopping, visiting parks and history.\\n        This place especially likes couples - they rated it at 8.2 for a trip together\\n      </h6>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-spinner *ngIf=\\\"isLoading\\\"></app-spinner>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Property} from '../../../models/property';\nimport {PropertyService} from '../../../services/property/property.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {ReviewService} from '../../../services/review/review.service';\n\n@Component({\n  selector: 'app-property-details',\n  templateUrl: './property-details.component.html',\n  styleUrls: ['./property-details.component.css']\n})\nexport class PropertyDetailsComponent implements OnInit {\n\n  public isLoading = false;\n  property: Property;\n  countReview: number;\n  public queryParams = {\n    checkin: '',\n    checkout: '',\n    num_of_guests: ''\n  }\n  constructor(private route: ActivatedRoute, private propertyService: PropertyService,\n              private reviewService: ReviewService) { }\n\n  ngOnInit() {\n    this.getPropertyById();\n    this.queryParams.checkin = this.route.snapshot.queryParamMap.get('checkin');\n    this.queryParams.checkout = this.route.snapshot.queryParamMap.get('checkout');\n    this.queryParams.num_of_guests = this.route.snapshot.queryParamMap.get('num_of_guests');\n    this.getCountReview();\n  }\n  public getPropertyById(): Property {\n    this.isLoading = true;\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.propertyService.getPropertyById(id).subscribe(res => {this.property = res\n    this.isLoading = false;\n    },\n      error => this.isLoading = false);\n    return this.property;\n  }\n  public getCountReview() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.reviewService.getCountReviewByPropertyId(id).subscribe(res => {\n      this.countReview = res;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>Property Details</h1>\\n<app-photo-list></app-photo-list>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-property',\n  templateUrl: './property.component.html',\n  styleUrls: ['./property.component.css']\n})\nexport class PropertyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"div.reviewBooking {\\n  height: 300px;\\n  width: 500px;\\n  border: 1px solid black;\\n  padding: 30px\\n}\\n\"","module.exports = \"<div class=\\\"reviewBooking\\\" *ngIf=\\\"review\\\" >\\n  <p>{{review.message}}</p>\\n  <hr>\\n  <p>Rating : {{review.rating}}</p>\\n</div>\\n<div class=\\\"reviewBooking\\\" class=\\\"reviewBooking\\\" *ngIf=\\\"!review\\\" style=\\\"height: 300px ;width: 500px; border: 1px solid black\\\">\\n  <h1>No review</h1>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ReviewService} from '../../../services/review/review.service';\nimport {Review} from '../../../models/review';\n\n@Component({\n  selector: 'app-review-booking',\n  templateUrl: './review-booking.component.html',\n  styleUrls: ['./review-booking.component.css']\n})\nexport class ReviewBookingComponent implements OnInit {\n  review: Review;\n\n  constructor(private route: ActivatedRoute,\n              private reviewService: ReviewService) {\n  }\n\n  ngOnInit() {\n    this.getReviewByBooking();\n  }\n\n  getReviewByBooking() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.reviewService.getReviewByBooking(id).subscribe(r => this.review = r);\n  }\n}\n","module.exports = \"div.reviewDiv {\\n  height: auto;\\n  width: 750px;\\n  border: 1px solid silver;\\n  padding: 30px;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n\\n}\\ndiv#btns{\\n  margin-left: 40%;\\n}\\nbutton{\\n  width: 200px;\\n}\\n\"","module.exports = \"<div class=\\\"reviewDiv\\\" *ngIf=\\\"!flag\\\">\\n  <form #createReviewForm=ngForm (ngSubmit)=\\\"createReview(createReviewForm)\\\" [ngClass]=\\\"{'was-validated' : !formValid}\\\">\\n    <label for=\\\"FormControlTextarea\\\">Review : </label>\\n    <textarea class=\\\"form-control z-depth-1\\\" id=\\\"FormControlTextarea\\\" rows=\\\"8\\\" placeholder=\\\"write your review...\\\"\\n              [(ngModel)]=\\\"review.message\\\" name=\\\"message\\\" required=\\\"required\\\"></textarea>\\n    <hr>\\n    <p>Rating :<input type=\\\"number\\\" min=\\\"1\\\" max=\\\"10\\\" [(ngModel)]=\\\"review.rating\\\" name=\\\"rating\\\"\\n                      required=\\\"required\\\"></p>\\n    <ng-container *ngIf=\\\"errorMessage !== ''\\\">\\n      <div class=\\\"alert alert-danger\\\">\\n        {{errorMessage}}\\n      </div>\\n    </ng-container>\\n    <div class=\\\"form-row\\\" id=\\\"btns\\\">\\n      <button (click)=\\\"goBack()\\\" class=\\\"btn-danger\\\">Cancel</button>\\n      <button type=\\\"submit\\\" class=\\\"btn-info\\\">Save Review</button>\\n    </div>\\n  </form>\\n</div>\\n\\n\\n<div class=\\\"reviewDiv\\\" *ngIf=\\\"flag\\\">\\n  <label for=\\\"FormControlTextarea\\\">Review : </label>\\n  <textarea class=\\\"form-control z-depth-1\\\" readonly rows=\\\"8\\\">{{booking.reviewDto.message}}</textarea>\\n  <hr>\\n  <p>Rating : {{booking.reviewDto.rating}}</p>\\n  <div class=\\\"form-row\\\">\\n    <button (click)=\\\"goBack()\\\" class=\\\"btn-danger\\\">Back</button>\\n  </div>\\n</div>\\n<app-spinner *ngIf=\\\"isLoading\\\"></app-spinner>\\n\"","import {Component, OnInit, enableProdMode} from '@angular/core';\nimport {ReviewService} from '../../../services/review/review.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {FormGroup} from '@angular/forms';\nimport {CreateReview} from '../../../models/create-review';\nimport {Location} from '@angular/common';\nimport {Booking} from '../../../models/booking';\nimport {BookingService} from '../../../services/booking/booking.service';\n\n@Component({\n  selector: 'app-review-create',\n  templateUrl: './review-create.component.html',\n  styleUrls: ['./review-create.component.css']\n})\nexport class ReviewCreateComponent implements OnInit {\n  review: CreateReview;\n  booking: Booking;\n  formValid = true;\n  errorMessage = '';\n  flag: boolean;\n  public isLoading = false;\n\n  constructor(private reviewService: ReviewService,\n              private route: ActivatedRoute,\n              private bookingService: BookingService,\n              private location: Location) {\n  }\n\n  ngOnInit() {\n    this.review = new CreateReview();\n    this.getBooking();\n\n  }\n\n  createReview(createReviewForm: FormGroup) {\n    const id = +this.route.snapshot.paramMap.get('id');\n    if (createReviewForm.valid) {\n      this.reviewService.createReview(this.review, id).subscribe(res => {\n        alert('Review created');\n        this.getBooking();\n      }, error => {\n        this.errorMessage = JSON.parse(error.error).message;\n      });\n    } else {\n      this.formValid = false;\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  getBooking() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.bookingService.getBooking(id).subscribe(b => {\n      this.booking = b;\n      this.flag = !!b.reviewDto;\n    });\n  }\n}\n","module.exports = \"span.rating {\\n  margin-left: 70%;\\n}\\n\\ndiv.reviewDiv {\\n  margin-top: 1px;\\n  margin-left: 10%;\\n  margin-right: 10%;\\n}\\n\\ndiv#items-size{\\n  margin-left: 10%;\\n  margin-right: 15%;\\n}\\n\\n\"","module.exports = \"<app-user-navigation></app-user-navigation>\\n<br>\\n<div *ngIf=\\\"totalElements !=0 \\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"form-group row\\\" id=\\\"items-size\\\">\\n      <h2 style=\\\"margin-right: 2%; height: content-box\\\">Reviews on page:</h2>\\n      <app-items-size\\n        (sentSelectedItemsSize)=\\\"setSelectedItemsSize($event)\\\">\\n      </app-items-size>\\n      <h1 style=\\\"margin-left: 20%\\\">{{property.name}} : {{property.rating | number: '1.1'}}</h1>\\n    </div>\\n    <br><br>\\n    <div class=\\\"reviewDiv\\\">\\n      <div class=\\\"align-items-center\\\" *ngFor=\\\"let review of reviews\\\">\\n        <label for=\\\"FormControlTextarea\\\"><strong style=\\\"margin-left: 20px\\\">{{review.userDto.firstName}} : </strong> </label>\\n        <span class=\\\"rating\\\"><strong>Rating : </strong> {{review.rating}}</span>\\n        <textarea class=\\\"form-control\\\" id=\\\"FormControlTextarea\\\" rows=\\\"4\\\" readonly>{{review.message}}</textarea>\\n        <hr>\\n        <div class=\\\"form-row\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <app-pagination\\n      [currentPage]=\\\"currentPage\\\"\\n      [totalPages]=\\\"totalPages\\\"\\n      [pagesToPagination]=\\\"pagesToPagination\\\"\\n      (goFirst)=\\\"onFirst($event)\\\"\\n      (goPrev)=\\\"onPrev()\\\"\\n      (goNext)=\\\"onNext()\\\"\\n      (goLast)=\\\"onLast($event)\\\"\\n      (goPage)=\\\"goToPage($event)\\\">\\n    </app-pagination>\\n\\n  </div>\\n\\n  <div *ngIf=\\\"totalElements ===0 \\\">\\n    <h3>You not have booking yet!</h3>\\n  </div>\\n</div>\\n<app-spinner *ngIf=\\\"isLoading\\\"></app-spinner>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Review} from '../../../models/review';\nimport {ActivatedRoute} from '@angular/router';\nimport {ReviewService} from '../../../services/review/review.service';\nimport {PaginationService} from '../../../services/pagination/pagination.service';\nimport {Property} from '../../../models/property';\nimport {PropertyService} from '../../../services/property/property.service';\n\n@Component({\n  selector: 'app-reviews-property',\n  templateUrl: './reviews-property.component.html',\n  styleUrls: ['./reviews-property.component.css']\n})\nexport class ReviewsPropertyComponent implements OnInit {\n  reviews: Review [];\n  property: Property;\n  currentPage = 1;\n  selectedItemsSize = 10;\n  pagesToPagination: number [];\n  totalPages: number;\n  totalElements: number;\n  public isLoading = false;\n\n  constructor(private route: ActivatedRoute,\n              private reviewService: ReviewService,\n              private paginationService: PaginationService,\n              private propertyService: PropertyService) {\n  }\n\n  ngOnInit() {\n    this.getReviewsByPage();\n    this.getProperty();\n  }\n\n  getReviewsByPage(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    if (this.selectedItemsSize) {\n      this.reviewService.getPageAllReviewsByProperty(id, this.currentPage - 1, this.selectedItemsSize)\n        .subscribe(data => {\n          this.reviews = data['content'];\n          this.totalPages = data['totalPages'];\n          this.totalElements = data['totalElements'];\n          this.pagesToPagination = this.paginationService.calculatePages(this.currentPage, this.totalPages);\n        });\n    }\n  }\n\n  setSelectedItemsSize(n: number): void {\n    this.selectedItemsSize = n;\n    this.currentPage = 1;\n    this.getReviewsByPage();\n  }\n\n  goToPage(n: number): void {\n    this.currentPage = n;\n    this.getReviewsByPage();\n  }\n\n  onFirst(n: number): void {\n    this.currentPage = n;\n    this.getReviewsByPage();\n  }\n\n  onPrev(): void {\n    this.currentPage--;\n    this.getReviewsByPage();\n  }\n\n  onNext(): void {\n    this.currentPage++;\n    this.getReviewsByPage();\n  }\n\n  onLast(n: number): void {\n    this.currentPage = n;\n    this.getReviewsByPage();\n  }\n\n  getProperty(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.propertyService.getPropertyById(id).subscribe(pr => this.property = pr);\n  }\n}\n","module.exports = \".btn{\\n  margin: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\" style = \\\"margin-left:20%\\\">\\n  <div class=\\\"col-md-12\\\" style=\\\"width: 98% \\\">\\n\\n    <form class=\\\"form-inline searchform\\\">\\n\\n      <div class=\\\"form-group mr-2\\\">\\n        <select class=\\\"form-control\\\" value=\\\"\\\" #country (change)=\\\"onCountrySelect(country.value)\\\" required>\\n          <option disabled>Country</option>\\n          <option *ngFor=\\\"let country of countries\\\" [selected]=\\\"country.id === this.selectedCountryId\\\"\\n                  value=\\\"{{country.id}}\\\">{{country.name}}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div *ngIf=\\\"cities\\\" class=\\\"form-group mr-2\\\">\\n        <select class=\\\"form-control\\\" #city (change)=\\\"onCitySelect(city.value)\\\" required>\\n          <option disabled>City</option>\\n          <option *ngFor=\\\"let city of cities\\\" [selected]=\\\"city.id === this.selectedCityId\\\"\\n                  value=\\\"{{city.id}}\\\">{{city.name}}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group mr-2\\\">\\n        <input placeholder=\\\"Check-in\\\" class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"checkIn\\\" name=\\\"in\\\" required>\\n      </div>\\n\\n\\n      <div class=\\\"form-group mr-2\\\">\\n        <input placeholder=\\\"Check-out\\\" class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"checkOut\\\" name=\\\"out\\\" required>\\n      </div>\\n\\n      <div class=\\\"form-group mr-2\\\">\\n        <select class=\\\"form-control\\\" #numOfGuestsSelect (change)=\\\"onNumOfGuestsSelect(numOfGuestsSelect.value)\\\"\\n                required>\\n          <option disabled>Number of guests</option>\\n          <option *ngFor=\\\"let num of numsOfGuests\\\" [selected]=\\\"num === this.selectedNumberOfGuests\\\">{{num}}</option>\\n        </select>\\n      </div>\\n\\n\\n      <div class=\\\"btn-group btn-group-justified\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSearch()\\\">Search</button>\\n      </div>\\n      <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"!formValid\\\">\\n        Please, select Country, city, check in, check out and number of guests\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {CountryService} from '../../../services/country/coutry.service';\nimport {CityService} from '../../../services/city/city.service';\nimport {Country} from '../../../models/country';\nimport {City} from '../../../models/city';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.css']\n})\nexport class SearchFormComponent implements OnInit {\n  public numsOfGuests = [1, 2, 3, 4, 5, 6, 7, 8];\n  public countries: Country[] = [];\n  public cities: City[] = [];\n  public selectedCountryId: number;\n  public selectedCityId: number;\n  public checkIn: string;\n  public checkOut: string;\n  public selectedNumberOfGuests: number;\n  formValid = true;\n\n  @Output() mainDataChange = new EventEmitter();\n  constructor(private countryService: CountryService,\n              private cityService: CityService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    if (this.route.snapshot.queryParamMap.has('country')) {\n      this.selectedCountryId = Number.parseInt(this.route.snapshot.queryParamMap.get('country'));\n      this.initCities(this.selectedCountryId);\n      if (this.route.snapshot.queryParamMap.has('city')) {\n        this.selectedCityId = Number.parseInt(this.route.snapshot.queryParamMap.get('city'));\n      }\n    }\n    if (this.route.snapshot.queryParamMap.has('checkin')) {\n      this.checkIn = this.route.snapshot.queryParamMap.get('checkin');\n    }\n    if (this.route.snapshot.queryParamMap.has('checkout')) {\n      this.checkOut = this.route.snapshot.queryParamMap.get('checkout');\n    }\n    if (this.route.snapshot.queryParamMap.has('num_of_guests')) {\n      this.selectedNumberOfGuests = Number.parseInt(this.route.snapshot.queryParamMap.get('num_of_guests'));\n    }\n    this.initCountries();\n  }\n    public initCountries() {\n    this.countryService.getCountry().subscribe(countries => {\n      this.countries = countries;\n    });\n  }\n    public initCities(CountryId: number) {\n    this.cityService.getCity(CountryId).subscribe(cities => {\n      this.cities = cities;\n    });\n  }\n  public onCountrySelect(id: number) {\n    this.selectedCountryId = id;\n    this.initCities(id);\n  }\n  public onCitySelect(id: number) {\n    this.selectedCityId = id;\n  }\n  public onNumOfGuestsSelect(numOfGuests: number) {\n    this.selectedNumberOfGuests = numOfGuests;\n  }\n  public onSearch() {\n    this.formValid = true;\n    if (!this.selectedCityId || !this.checkIn || !this.checkOut || !this.checkOut || !this.selectedNumberOfGuests) {\n      this.formValid = false;\n      return;\n    }\n    this.router.navigate(['/advanced-search'], { queryParams:\n        {\n          country: this.selectedCountryId,\n          city: this.selectedCityId,\n          checkin: this.checkIn,\n          checkout: this.checkOut,\n          num_of_guests: this.selectedNumberOfGuests\n        }});\n    this.mainDataChange.emit({\n      country: this.selectedCountryId,\n      city: this.selectedCityId,\n      checkin: this.checkIn,\n      checkout: this.checkOut,\n      num_of_guests: this.selectedNumberOfGuests});\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-search-form></app-search-form>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".loader {\\n  border: 16px solid #f3f3f3;\\n  border-radius: 50%;\\n  border-top: 16px solid #3498db;\\n  width: 120px;\\n  height: 120px;\\n  -webkit-animation: spin 2s linear infinite;\\n          animation: spin 2s linear infinite;\\n  position: fixed;\\n  z-index: 99;\\n  opacity: 1;\\n  margin: auto;\\n}\\n@-webkit-keyframes spin {\\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n}\\n@keyframes spin {\\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n}\\n#spinner-background{\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  top: 0;\\n  left: 0;\\n  background: rgba(255,255,255,0.5);\\n}\\n\"","module.exports = \"<div id=\\\"spinner-background\\\">\\n  <div class=\\\"loader\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n\"","module.exports = \"<div id=\\\"menucard\\\">\\n    <div>\\n        <h1 class=\\\"display-4\\\" style=\\\"text-align: center\\\">BookingLite</h1>\\n    <div class=\\\"card\\\" style=\\\"width:400px\\\">\\n        <article class=\\\"card-body\\\">\\n            <h4 class=\\\"card-title mb-4 mt-1\\\">Login</h4>\\n            <form #loginForm=ngForm (ngSubmit)=\\\"signIn(loginForm)\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Your email</label>\\n                    <input id=\\\"email\\\" required email [(ngModel)]=\\\"loginDto.email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                    <label>Your password</label>\\n                    <input id=\\\"password\\\" required [(ngModel)]=\\\"loginDto.password\\\"  name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"******\\\" type=\\\"password\\\" >\\n                </div>\\n                <ng-container *ngIf=\\\"errorMessage !== ''\\\">\\n                    <div class=\\\"alert alert-danger\\\">\\n                            {{errorMessage}}\\n                    </div>\\n                </ng-container>\\n                <ng-container *ngIf=\\\"!formValid\\\">\\n                    <div class=\\\"alert alert-warning\\\">\\n                    Check input data. Password and valid email is required!\\n                    </div>\\n                </ng-container>  \\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Login</button>\\n                </div>\\n                <a routerLink=\\\"/register\\\">Don’t have account? Sign Up!</a>\\n            </form>\\n        </article>\\n    </div> \\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginDto } from '../../../models/loginDto';\nimport { AuthService } from '../../../services/authentication/auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginDto: LoginDto = new LoginDto();\n  formValid = true;\n  errorMessage = '';\n  constructor(private auth: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.signOut();\n  }\n  signIn(form: FormGroup) {\n    if (form.valid) {\n    this.auth.signIn(this.loginDto)\n      .subscribe(res => {\n        this.auth.saveToken(res);\n        this.auth.loadUser();\n        this.onSubmit();\n        }, error => {\n        console.log(error);\n        this.errorMessage = JSON.parse(error.error).message;\n      });\n    } else {\n      this.formValid = false;\n    }\n  }\n  signOut() {\n    this.auth.signOut();\n  }\n  onSubmit() {\n    this.router.navigate(['/search']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div id=\\\"menucard\\\">\\n    <div>\\n        <h1 class=\\\"display-4\\\" style=\\\"text-align: center\\\">BookingLite</h1>\\n        <div class=\\\"card\\\" style=\\\"width:600px\\\">\\n            <article class=\\\"card-body\\\">\\n                <h4 class=\\\"card-title mb-4 mt-1\\\">Register</h4>\\n                <form #registerForm=ngForm (ngSubmit)=\\\"signUp(registerForm)\\\" [ngClass]=\\\"{'was-validated' : !formValid}\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>First Name</label>\\n                        <input name=\\\"firstname\\\" #firstname=\\\"ngModel\\\" required [(ngModel)]=\\\"registerDto.firstName\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\">\\n                        <div class=\\\"invalid-feedback\\\">First name is required!</div>\\n                    </div> \\n                    <div class=\\\"form-group\\\">\\n                        <label>Last Name</label>\\n                        <input  name=\\\"lastname\\\" required class=\\\"form-control\\\" [(ngModel)]=\\\"registerDto.lastName\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\">\\n                        <div class=\\\"invalid-feedback\\\">Last name is required!</div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Email</label>\\n                        <input  class=\\\"form-control\\\" required name=\\\"email\\\" [(ngModel)]=\\\"registerDto.email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\n                        <div class=\\\"invalid-feedback\\\">Valid email is required!</div>\\n                    </div>  \\n                    <div class=\\\"form-group\\\">\\n                        <label>Your password</label>\\n                        <input  class=\\\"form-control\\\" required minlength=\\\"8\\\" name=\\\"password\\\"  [(ngModel)]=\\\"registerDto.password\\\" placeholder=\\\"******\\\" type=\\\"password\\\">\\n                        <div class=\\\"invalid-feedback\\\">Minimum length 8</div>\\n                    </div> \\n                    <div class=\\\"form-group\\\">\\n                        <label>Phone Number</label>\\n                        <input  class=\\\"form-control\\\" required name=\\\"phonenumber\\\" [(ngModel)]=\\\"registerDto.phoneNumber\\\" placeholder=\\\"Phone\\\" type=\\\"text\\\">\\n                        <div class=\\\"invalid-feedback\\\">Phone number is required!</div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label>Register as owner? <input name=\\\"owner\\\" [(ngModel)]=\\\"registerDto.owner\\\" type=\\\"checkbox\\\"></label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                            <label>Address Line</label>\\n                            <input  class=\\\"form-control\\\" required name=\\\"addressline\\\" [(ngModel)]=\\\"registerDto.address.addressLine\\\" placeholder=\\\"Address Line\\\" type=\\\"text\\\">\\n                            <div class=\\\"invalid-feedback\\\">Address line is required!</div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label>Country</label>\\n                        <select class=\\\"form-control\\\" #selectCountry (change)=\\\"changeCountry(selectCountry.value)\\\">\\n                            <option *ngFor=\\\"let country of countries\\\" value=\\\"{{country.id}}\\\">{{country.name}}</option>\\n                        </select>\\n                    </div>\\n                    <div *ngIf=\\\"cities\\\" class=\\\"form-group\\\">\\n                            <label>City</label>\\n                        <select class=\\\"form-control\\\" #selectCity (change)=\\\"changeCity(selectCity.value)\\\">\\n                            <option *ngFor=\\\"let city of cities\\\" value=\\\"{{city.id}}\\\">{{city.name}}</option>\\n                        </select>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                            <label>Zip</label>\\n                            <input class=\\\"form-control\\\" required maxlength=\\\"5\\\" minlength=\\\"5\\\" name=\\\"zip\\\" [(ngModel)]=\\\"registerDto.address.zip\\\" placeholder=\\\"12345\\\" type=\\\"text\\\">\\n                            <div class=\\\"invalid-feedback\\\">Valid zip is required!</div>\\n                    </div>\\n                    </div>\\n                    </div>\\n                    <ng-container *ngIf=\\\"errorMessage !== ''\\\">\\n                            <div class=\\\"alert alert-danger\\\">\\n                                    {{errorMessage}}\\n                            </div>\\n                    </ng-container>\\n                    <div class=\\\"form-group\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Register</button>\\n                    </div> \\n                </form>\\n            </article>\\n        </div> \\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router} from '@angular/router';\nimport { AuthService } from '../../../services/authentication/auth.service';\nimport { RegisterDto } from '../../../models/registerDto';\nimport { Country } from '../../../models/country';\nimport { CountryService } from '../../../services/country/coutry.service';\nimport { City } from '../../../models/city';\nimport { CityService } from '../../../services/city/city.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerDto: RegisterDto = new RegisterDto();\n  countries: Country[];\n  cities: City[];\n  selectedCity: number;\n  selectedCountry: number;\n  formValid = true;\n  errorMessage = '';\n  constructor(private auth: AuthService,\n              private countryService: CountryService,\n              private cityService: CityService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.getCountries();\n  }\n\n  getCountries() {\n    this.countryService.getCountry().subscribe((countriesarr) => {\n      this.countries = countriesarr;\n      this.selectedCountry = countriesarr[0].id;\n      this.getCities(this.selectedCountry);\n    });\n  }\n  changeCountry(id: number) {\n    this.selectedCountry = id;\n    this.getCities(id);\n  }\n  changeCity(id: number) {\n    this.selectedCity = id;\n  }\n  getCities(countryId: number) {\n    this.cityService.getCity(countryId).subscribe((citiesarr) => {\n      this.cities = citiesarr;\n      if (citiesarr.length !== 0) {\n      this.selectedCity = citiesarr[0].id;\n      }\n    });\n  }\n    signUp(registerForm: FormGroup) {\n    if (registerForm.valid) {\n      this.registerDto.address.city.id = this.selectedCity;\n      this.registerDto.address.city.country.id = this.selectedCountry;\n      this.auth.signUp(this.registerDto).subscribe((result) => {\n      this.onSubmit();\n      }, error => {\n      console.log(error);\n      this.errorMessage = JSON.parse(error.error).message;\n    });\n    } else {\n      this.formValid = false;\n    }\n  }\n  onSubmit() {\n    this.router.navigate(['/login']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card-header\\\">\\n    <ul class=\\\"nav nav-pills card-header-pills\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a [ngClass]=\\\"{'nav-link': true, 'active': href.includes('user')}\\\" routerLink=\\\"/user\\\">Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [ngClass]=\\\"{'nav-link': true, 'active': href.includes('bookings')}\\\"\\n         routerLink=\\\"/bookings\\\">Bookings</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"isOwner\\\">\\n        <a [ngClass]=\\\"{'nav-link': true, 'active': href.includes('properties')}\\\" routerLink=\\\"/myproperties\\\">Properties</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"#\\\">Settings</a>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../../services/authentication/auth.service';\n\n@Component({\n  selector: 'app-user-navigation',\n  templateUrl: './user-navigation.component.html',\n  styleUrls: ['./user-navigation.component.css']\n})\nexport class UserNavigationComponent implements OnInit {\n  isOwner = false;\n  href = '';\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n    this.auth.isOwner.subscribe( res => this.isOwner = res);\n    this.href = window.location.href;\n  }\n}\n","module.exports = \"#addApartment{\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n.action {\\n  width: 117px;\\n  text-align: center;\\n}\\n\"","module.exports = \"<app-user-navigation></app-user-navigation>\\n<div class=\\\"container\\\">\\n  <button *ngIf=\\\"property\\\" routerLink=\\\"/property/{{property.id}}/create-apartment\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"addApartment\\\">New Apartment</button>\\n  <div *ngIf=\\\"property\\\" class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n    <strong>{{property.name}}</strong> have <strong>{{property.apartments.length}}</strong> apartments\\n  </div>\\n    <table class=\\\"table\\\">\\n    <thead class=\\\"thead-light\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">Name</th>\\n      <th scope=\\\"col\\\">Price</th>\\n      <th scope=\\\"col\\\">Type</th>\\n      <th scope=\\\"col\\\">Number of guests</th>\\n      <th scope=\\\"col\\\">Action</th>\\n    </tr>\\n    </thead>\\n    <tbody *ngIf=\\\"property\\\">\\n      <tr *ngFor=\\\"let ap of property.apartments\\\">\\n        <td>{{ap.name}}</td>\\n        <td>{{ap.price}}</td>\\n        <td>{{ap.apartmentType.name}}</td>\\n        <td>{{ap.numberOfGuests}}</td>\\n        <td><button type=\\\"button\\\" class=\\\"btn btn-primary action\\\"\\n                    routerLink=\\\"/property/{{property.id}}/edit-apartment/{{ap.id}}\\\">Edit</button></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {PropertyService} from '../../../../../services/property/property.service';\nimport {Property} from '../../../../../models/property';\n\n@Component({\n  selector: 'app-user-apartments',\n  templateUrl: './user-apartments.component.html',\n  styleUrls: ['./user-apartments.component.css']\n})\nexport class UserApartmentsComponent implements OnInit {\n\n  public isLoading = false;\n  property: Property;\n  constructor(private route: ActivatedRoute, private propertyService: PropertyService) { }\n  ngOnInit() {\n    this.isLoading = true;\n    this.propertyService.getPropertyById(Number.parseInt(this.route.snapshot.paramMap.get('id')))\n      .subscribe(property => {\n        this.property = property;\n        this.isLoading = false;\n      },\n        error => this.isLoading = false);\n  }\n}\n","module.exports = \".action {\\n width: 117px;\\n  text-align: center;\\n}\\n.new-appartment {\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\" id=\\\"box\\\">\\n  <table class=\\\"table\\\">\\n    <thead class=\\\"thead-light\\\">\\n    <a href=\\\"#\\\" routerLink=\\\"/create-property\\\" class=\\\"btn btn-primary btn-xs pull-right new-appartment\\\"><b>+</b> Add new property</a>\\n    <tr>\\n      <th scope=\\\"col\\\">Name</th>\\n      <th scope=\\\"col\\\">ContactEmail</th>\\n      <th scope=\\\"col\\\">PhoneNumber</th>\\n      <th scope=\\\"col\\\">Property Type</th>\\n      <th class=\\\"text-center\\\">Edit</th>\\n      <th class=\\\"text-center\\\">Apartments</th>\\n      <th class=\\\"text-center\\\">Guest Arrivals</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let property of propertyList\\\">\\n      <td>{{property.name}}</td>\\n      <td>{{property.contactEmail}}</td>\\n      <td>{{property.phoneNumber}}</td>\\n      <td>{{property.propertyType.name}}</td>\\n      <td class=\\\"text-center\\\">\\n        <a class='btn btn-info btn-xs action' routerLink=\\\"/edit-property/{{property.id}}\\\">\\n        <span class=\\\"glyphicon glyphicon-edit\\\"></span>Edit</a>\\n      </td>\\n      <td>\\n        <a class='btn btn-info btn-xs action' routerLink=\\\"/myproperty/{{property.id}}/apartments\\\">\\n          <span class=\\\"glyphicon glyphicon-edit\\\"></span>Apartments</a>\\n      </td>\\n      <td>\\n        <a class='btn btn-info btn-xs action' routerLink=\\\"/myproperties/{{property.id}}/guest-arrivals/futureBookings\\\">\\n          <span class=\\\"glyphicon glyphicon-edit\\\"></span>Guest Arrivals</a>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<app-spinner *ngIf=\\\"isLoading\\\"></app-spinner>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport {PropertyService} from '../../../../services/property/property.service';\nimport { AuthService } from '../../../../services/authentication/auth.service';\nimport { Property } from '../../../../models/property';\n\n@Component({\n  selector: 'app-user-properties',\n  templateUrl: './user-properties.component.html',\n  styleUrls: ['./user-properties.component.css']\n})\nexport class UserPropertiesComponent implements OnInit {\n\n  public isLoading = false;\n  private authentication;\n  propertyList: Property[];\n\n  constructor(private propertyService: PropertyService , private auth: AuthService) { }\n\n  ngOnInit() {\n    this.authentication = this.auth.isAuthenticated;\n    this.getOwnerProperties();\n  }\n\n  public getOwnerProperties() {\n    this.isLoading = true;\n    this.propertyService.getOwnerProperties().subscribe(properties => {\n      this.propertyList = properties;\n      this.isLoading = false;\n      },\n      error => this.isLoading = false);\n  }\n}\n\n","module.exports = \".username{\\n  margin-top: 5%;\\n  margin-bottom: 5%;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4 offset-1\\\">\\n      <h3 class=\\\"username\\\" *ngIf=\\\"user\\\">{{user.firstName}} {{user.lastName}}</h3>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-3 offset-1\\\"><img src=\\\"assets/image/user.png\\\" alt=\\\"user\\\" class=\\\"img-thumbnail\\\"></div>\\n    <div class=\\\"col-5 offset-1\\\">\\n      <table class=\\\"table\\\">\\n        <tbody>\\n        <tr *ngIf=\\\"user\\\">\\n          <td>Firstname:</td>\\n          <td>{{user.firstName}}</td>\\n        </tr>\\n        <tr *ngIf=\\\"user\\\">\\n          <td>Lastname:</td>\\n          <td>{{user.lastName}}</td>\\n        </tr>\\n        <tr *ngIf=\\\"user\\\">\\n          <td>email:</td>\\n          <td>{{user.email}}</td>\\n        </tr>\\n        <tr *ngIf=\\\"user\\\">\\n          <td>phone:</td>\\n          <td>{{user.phoneNumber}}</td>\\n        </tr>\\n        <tr *ngIf=\\\"isOwner\\\">\\n          <td>Number of your properties:</td>\\n          <td>{{myPropertyCount}}</td>\\n        </tr>\\n        <tr *ngIf=\\\"isOwner\\\">\\n          <td>Number of your apartments:</td>\\n          <td>{{myApartmentCount}}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<app-spinner *ngIf=\\\"isLoading\\\"></app-spinner>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../../models/user';\nimport {AuthService} from '../../services/authentication/auth.service';\nimport {PropertyService} from '../../services/property/property.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  isLoading = false;\n  user: User;\n  myPropertyCount = 0;\n  myApartmentCount = 0;\n  isOwner: boolean;\n  constructor(private auth: AuthService, private propertyService: PropertyService) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.auth.getUserFromBackEnd().subscribe(user => {\n      this.user = user;\n      this.isLoading = false;\n    }, error => this.isLoading = false );\n    this.auth.isOwner.subscribe( isOwner => {\n      this.isOwner = isOwner;\n      if (isOwner) {\n        this.propertyService.getOwnerProperties().subscribe( properties => {\n          this.myPropertyCount = properties.length;\n          let myApartmentCount = 0;\n          properties.forEach(property => myApartmentCount += property.apartments.length );\n          this.myApartmentCount = myApartmentCount; });\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../services/authentication/auth.service';\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private auth: AuthService) {}\n  ingoreRoutes = ['/api/login', '/api/register'];\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n  if (!(this.ingoreRoutes.includes(request.url))) {\n    const token = localStorage.getItem('token');\n    if (token != null) {\n    request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n        }\n    });\n    }\n  }\n  return next.handle(request).pipe( tap( (ev: HttpEvent<any>) => {\n      if (ev instanceof HttpResponse) {\n\n      }\n  }, (err: any) => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 401) {\n          this.auth.signOut();\n        }\n      }\n  }));\n  }\n}\n","import {City} from './city';\n\nexport class Address {\n  id: number;\n  addressLine: string;\n  zip: string;\n  city: City = new City();\n}\n","export class BookingCreate {\n  checkIn: Date;\n  checkOut: Date;\n  numberOfGuests: number;\n}\n","import {Apartment} from './apartment';\nimport {User} from './user';\nimport {Review} from './review';\nimport {BookingStatus} from './booking-status';\n\n\nexport class Booking {\n  reviewDto: any;\n  bookingId: number;\n  apartment: Apartment;\n  user: User;\n  checkIn: string;\n  checkOut: string;\n  totalPrice: number;\n  bookingStatus: BookingStatus;\n  review: Review;\n}\n","import { Country } from './country';\n\nexport class City {\n  id: number;\n  name: string;\n  country: Country = new Country();\n}\n","export class Country {\n  id: number;\n  name: string;\n}\n","export class CreateApartment {\n  id: number;\n  name: string;\n  price: number;\n  numberOfGuests: number;\n  apartmentTypeId: number;\n  amenitiesId: number[];\n}\n","export class CreateReview {\n  rating: number;\n  message: string;\n}\n","export class LoginDto {\n  email: string;\n  password: string;\n}\n","export class PropertyCreate {\n  name: string;\n  description: string;\n  phoneNumber: string;\n  contactEmail: string;\n  cityId: number;\n  countryId: number;\n  addressLine: string;\n  zip: string;\n  propertyTypeId: number;\n  facilityId: number[];\n}\n","import { PropertyType } from './property-type';\nimport { Facility } from './facility';\nimport {Photo} from './photo';\nimport {Apartment} from './apartment';\nimport {Address} from './address';\n\nexport class Property {\n  id: number;\n  name: string;\n  description: string;\n  rating: number;\n  phoneNumber: string;\n  contactEmail: string;\n  propertyType: PropertyType;\n  facilities: Facility[];\n  address: Address;\n  photos: Photo[];\n  apartments: Apartment[];\n}\n","import { Address } from './address';\n\nexport class RegisterDto {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    phoneNumber: string;\n    owner: boolean;\n    address: Address = new Address();\n}\n","import {Injectable, Input} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Apartment} from '../../models/apartment';\nimport {ApartmentType} from '../../models/apartment-type';\nimport {Amenity} from '../../models/amenity';\nimport {CreateApartment} from '../../models/create-apartment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApartmentService {\n  private apartmentUrl = '/api/property';\n  private typeUrl = '/api/create-apartment/apartment-type';\n  private amenityUrl = '/api/create-apartment/amenities';\n\n  constructor(private http: HttpClient) { }\n\n  public getAllApartments(id: number): Observable<Apartment[]> {\n    return this.http.get<Apartment[]>(`${this.apartmentUrl}/${id}/apartment`);\n  }\n  public getApartmentType(): Observable<ApartmentType[]> {\n    return this.http.get<ApartmentType[]>(this.typeUrl);\n  }\n  public getAmenities(): Observable<Amenity[]> {\n    return this.http.get<Amenity[]>(this.amenityUrl);\n  }\n  public createApartment (model: CreateApartment, id: number) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(`api/property/${id}/apartment`, model, httpOptions);\n  }\n  public getApartmentById(pId: number, apId: number): Observable<Apartment> {\n   return this.http.get<Apartment>('api/property/' + pId + '/apartment/' + apId);\n   }\n  public updateApartment(model: CreateApartment, id: number) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.put('api/apartment/' + id, model, httpOptions);\n  }\n\n  public getApartmentByIdApartment(id: number): Observable<Apartment> {\n    return this.http.get<Apartment>(`api/apartment/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated) {\n      this.router.navigate(['/login']);\n    }\n    return this.auth.isAuthenticated;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {LoginDto} from '../../models/loginDto';\nimport { Router } from '@angular/router';\nimport { RegisterDto } from '../../models/registerDto';\nimport { User } from '../../models/user';\nimport { tap } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _currentUser: User;\n  private _isOwner: boolean;\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  signIn(model: LoginDto): Observable<any> {\n    console.log('In auth service');\n    console.log('json', JSON.stringify(model));\n    return this.http.post('/api/login', JSON.stringify({email: model.email, password: model.password}),\n      {headers: new HttpHeaders({\n          'Content-Type':  'application/json' }),\n        responseType: 'text'\n      });\n  }\n\n  signUp(model: RegisterDto): Observable<any> {\n    console.log('json', JSON.stringify(model));\n    return this.http.post('/api/register', JSON.stringify(model),\n      {headers: new HttpHeaders({\n          'Content-Type':  'application/json' }),\n        responseType: 'text'\n      });\n  }\n  loadUser(): Observable<User> {\n    return this.http.get<User>('/api/user').pipe(tap( user => {\n        this._currentUser = user;\n        console.log(this._currentUser);\n        const ownerrole = this._currentUser.roles.find(role => role.name === 'ROLE_OWNER');\n        if (ownerrole) {\n          this._isOwner = true;\n        }\n    }));\n  }\n\n  saveToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken(): string {\n    return localStorage.getItem('token');\n  }\n\n  signOut(): void {\n    localStorage.removeItem('token');\n    this._currentUser = undefined;\n    this._isOwner = false;\n    this.router.navigate(['/login']);\n  }\n\n  get isAuthenticated(): boolean {\n     return localStorage.getItem('token') != null;\n  }\n\n  get isOwner(): Observable<boolean> {\n    return Observable.create( observer => {\n      if (this._currentUser !== undefined) {\n        observer.next(this._isOwner);\n        observer.complete();\n      } else {\n        this.loadUser().subscribe( res => {\n          observer.next(this._isOwner);\n          observer.complete();\n        });\n      }\n    });\n  }\n\n  get currentUser(): Observable<User> {\n    return Observable.create( observer => {\n      if (this._currentUser !== undefined) {\n        observer.next(this._currentUser);\n      } else {\n        this.loadUser().subscribe( res => {\n          observer.next(res);\n        });\n      }\n    });\n  }\n  getUserFromBackEnd(): Observable<User> {\n    return this.http.get<User>('/api/user');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuardService implements CanActivate {\n  errorMessage = 'You are not property owner';\n  errorNavigateLink = '/user';\n  constructor(private auth: AuthService, private router: Router) { }\n  canActivate(route: ActivatedRouteSnapshot) {\n    const expectedRole = route.data.expectedRole;\n    this.auth.currentUser.subscribe( user => {\n        if (!this.auth.isAuthenticated || !user.roles.find(role => role.name === expectedRole)) {\n          this.router.navigate([this.errorNavigateLink]);\n          alert(this.errorMessage);\n        }\n      }\n    )\n    return true;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Booking} from '../../models/booking';\nimport {BookingCreate} from '../../models/booking-create';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n\n\n  private bookingUrl = 'api/booking';\n  private bookingByPageUrl = 'api/bookings';\n  private myPropertiesUrl = 'api/myproperties';\n  private nowDate: Date;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getBookingsByPage(pageNumber: number, pageSize: number, filterBookingsByDates: string): Observable<any> {\n    return this.http.get<Booking []>(\n      `${this.bookingByPageUrl}?pageNumber=${pageNumber}&pageSize=${pageSize}\n      &filterBookingsByDates=${filterBookingsByDates}`);\n  }\n\n  getBooking(id: number): Observable<Booking> {\n    const url = `${this.bookingUrl}/${id}`;\n    return this.http.get<Booking>(url);\n  }\n\n  cancelBookings(id: number) {\n    const url = `${this.bookingUrl}/${id}`;\n    const httpOption = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.put(url, httpOption);\n\n  }\n\n  isCanceled(bookingStatus: string): boolean {\n    const canceledStatus = 'Canceled';\n    if (bookingStatus === canceledStatus) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  calculateNumberOfDates(checkIn, checkOut): number {\n    const dateChackIn = new Date(checkIn);\n    const dateChackOut = new Date(checkOut);\n    const oneDay = 24 * 60 * 60 * 1000;\n    return Math.round((dateChackOut.getTime() - dateChackIn.getTime()) / (oneDay));\n  }\n\n\n  isBookingDateActual(checkIn, checkOut): boolean {\n    let dateChackIn = new Date(checkIn);\n    let dateChackOut = new Date(checkOut);\n    this.nowDate = new Date();\n    if (dateChackIn > this.nowDate || dateChackOut > this.nowDate) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public createBooking(bookingCreate: BookingCreate, apartmentId: number) {\n    const url = `api/booking/${apartmentId}`;\n    return this.http.post(url, bookingCreate, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      responseType: 'text'\n    });\n  }\n\n  getPageGuestArrivalsList(id: number, page: number, size: number, filterBooking: string): Observable<Booking[]> {\n    return this.http.get<Booking []>(\n      `${this.myPropertiesUrl}/${id}/guestArrivals?page=${page}&size=${size}&filterBooking=${filterBooking}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport { City } from '../../models/city';\nimport {Observable} from 'rxjs';\nimport {Country} from '../../models/country';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CityService {\n\n  constructor(private http: HttpClient) { }\n\n  public getCity(countryId: number): Observable<City[]> {\n    return this.http.get<City[]>(`api/country/${countryId}/cities`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport { Country } from '../../models/country';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryService {\n\n  constructor(private http: HttpClient) { }\n\n  public getCountry(): Observable<Country[]> {\n    return this.http.get<Country[]>('api/countries');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Facility} from '../../models/facility';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacilityService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAllFacilities(): Observable<Facility[]> {\n    return this.http.get<Facility[]>('api/facilities');\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaginationService {\n\n  constructor() { }\n\n  calculatePages(currentPage: number, totalPages: number ): number []{ \n    let startPage: number, endPage: number;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n  } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n      } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n      }\n  }\n   // create an array of pages to ng-For in the pager control\n   return Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpHeaders} from '@angular/common/http';\n\nimport { Property } from '../../models/property';\nimport {PropertyCreate} from '../../models/property-create';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropertyService {\n\n  constructor(private http: HttpClient) { }\n\n  public createProperty(model: PropertyCreate) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n     return this.http.post('api/property', model, httpOptions);\n  }\n\n  public getProperties(): Observable<Property[]> {\n    return this.http.get<Property[]>('api/property');\n  }\n\n  public getPropertyById(id: number): Observable<Property> {\n    return this.http.get<Property>('api/property/' + id);\n  }\n\n  public getOwnerProperties(): Observable<Property[]> {\n    return this.http.get<Property[]>('api/myproperties');\n  }\n  public updateProperty(model: PropertyCreate, id: number) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.put('api/property/' + id, model, httpOptions);\n  }\n\n  public search(selectedCountryId: number,\n    selectedCityId: number,\n    checkIn: string,\n    checkOut: string,\n    numberOfGuests: number,\n    pageNumber: number,\n    pageSize: number): Observable<Property[]> {\nreturn this.http.get<Property[]>('api/property/search?' +\n    'countryId=' + selectedCountryId +\n    '&cityId=' + selectedCityId +\n    '&checkIn=' + checkIn +\n    '&checkOut=' + checkOut +\n    '&numberOfGuests=' + numberOfGuests+\n    '&pageNumber=' + pageNumber+\n    '&pageSize=' + pageSize);\n  }\n\n  public advancedSearch(selectedCountryId: number,\n                          selectedCityId: number,\n                          checkIn: string,\n                          checkOut: string,\n                          numberOfGuests: number,\n                          selectedPrice: number,\n                          facilityIds: string[],\n                          amenityIds: string[],\n                          pageNumber: number,\n                          pageSize: number): Observable<Property[]> {\n      return this.http.get<Property[]>('api/property/advancesearch?' +\n        'countryId=' + selectedCountryId +\n        '&cityId=' + selectedCityId +\n        '&checkIn=' + checkIn +\n        '&checkOut=' + checkOut +\n        '&numberOfGuests=' + numberOfGuests +\n        '&price=' + selectedPrice +\n        '&facilityIds=' + facilityIds +\n        '&amenityIds=' + amenityIds+\n        '&pageNumber=' + pageNumber+\n        '&pageSize=' + pageSize);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport { PropertyType } from '../../models/property-type';\nimport {Observable} from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropertyTypeService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAllPropertyTypes(): Observable<PropertyType[]>{\n    return this.http.get<PropertyType[]>(\"api/propertytype\");\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Review} from '../../models/review';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpHeaders} from '@angular/common/http';\nimport {CreateReview} from '../../models/create-review';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewService {\n\n  private bookingUrl = '/api/booking';\n  private propertyUrl = '/api/property';\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getReviewByBooking(id: number): Observable<Review> {\n    return this.http.get<Review>(`${this.bookingUrl}/${id}/review`);\n  }\n\n  public createReview(review: CreateReview, id: number): Observable<any> {\n    return this.http.post(`${this.bookingUrl}/${id}/review`, review, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      responseType: 'text'\n    });\n  }\n\n  public getPageAllReviewsByProperty(id: number, page: number, size: number): Observable<Review[]> {\n    return this.http.get<Review[]>(`${this.propertyUrl}/${id}/reviews?page=${page}&size=${size}`);\n  }\n  public getCountReviewByPropertyId(id: number): Observable<number> {\n    return this.http.get<number>('/api/property/' + id + '/reviews/count');\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}